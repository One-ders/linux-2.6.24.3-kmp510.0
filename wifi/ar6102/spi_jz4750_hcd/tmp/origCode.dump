
spi_jz4750_hcd.ko:     file format elf32-tradlittlemips

Disassembly of section .text: bub

00000000 <set_spi_clock>:
set_spi_clock():
       0:	3c05b000 	lui	a1,0xb000! a1=0xb0000000
       4:	3c02016e 	lui	v0,0x16e ! v0=0x016e0000
       8:	8ca60000 	lw	a2,0(a1) ! a2=*CPCCR
       c:	344d3600 	ori	t5,v0,0x3600! t5=0x016e3600 (24Mhz)
      10:	34ac0010 	ori	t4,a1,0x10! t4= b0000010 (CPPCR)
      14:	3c020000 	lui	v0,0x0   ! v0 < zero
			14: R_MIPS_HI16	.rodata
      18:	24430098 	addiu	v1,v0,152 ! v1=ptr to global struct
			18: R_MIPS_LO16	.rodata
      1c:	8d870000 	lw	a3,0(t4)  ! a3=cppcr
      20:	8c450098 	lw	a1,152(v0) ! a1= 0 var global data
			20: R_MIPS_LO16	.rodata
      24:	3c020020 	lui	v0,0x20  ! PCSBIT
      28:	8c690008 	lw	t1,8(v1) ! t1=2 var global data
      2c:	8c6a000c 	lw	t2,12(v1)! t2=3 var global data
      30:	8c680004 	lw	t0,4(v1) ! t0=1 var global data
      34:	00c23024 	and	a2,a2,v0 ! a2=cpccr&PCS_BIT
      38:	240b0001 	li	t3,1     ! t3=1
      3c:	24020002 	li	v0,2     ! v0=2
      40:	27bdfff0 	addiu	sp,sp,-16! stack alloc 16 bytes
      44:	0046580a 	movz	t3,v0,a2 ! if a2==0 t3=2 else t3=1
      48:	30e70300 	andi	a3,a3,0x300  val=cppcr&(PLLBP|PLLEN)
      4c:	24020100 	li	v0,256       v0=0x100
      50:	afa90008 	sw	t1,8(sp)  ! spvar 2 = t1
      54:	01a01821 	move	v1,t5     ! v1=0x016e3600
      58:	afa50000 	sw	a1,0(sp)  ! spvar 0 = a1
      5c:	afa80004 	sw	t0,4(sp)  ! spvar 1 = t0
      60:	afaa000c 	sw	t2,12(sp) ! spvar 3 = t2
						    if val==PLLEN to 11c
      64:	10e2002d 	beq	a3,v0,11c <set_spi_clock+0x11c>
      68:	00804821 	move	t1,a0       ! save a0
---------> back from if
      6c:	006b001b 	divu	zero,v1,t3  ! v1/t3 pllout/t3 PCS
      70:	016001f4 	teq	t3,zero,0x7 ! trap if div by zero
// read clkgr
      74:	3c07b000 	lui	a3,0xb000   ! a3=0xb0000000
      78:	34e80020 	ori	t0,a3,0x20  ! t0 &CLKGR
      7c:	8d020000 	lw	v0,0(t0)    ! v0 = CLKGR
//
      80:	24060010 	li	a2,16	    ! a2=16
// stop ssi clock
      84:	34420010 	ori	v0,v0,0x10  ! v0=CLKGR|SSI_BIT
      88:	ad020000 	sw	v0,0(t0)    ! CLKGR|=SSI_BIT; stop SSI CLOCK
// read argptr to op_clock
      8c:	8d240000 	lw	a0,0(t1)    ! a0=arg->0
      90:	34e70074 	ori	a3,a3,0x74  ! a3=&SSICDR
      94:	27bd0010 	addiu	sp,sp,16    ! restore stack
// pllclk to a1
      98:	00002812 	mflo	a1	    ! a1=v1/t3
// divide pllckl with op clock
      9c:	00a4001b 	divu	zero,a1,a0  ! a1/a0
      a0:	008001f4 	teq	a0,zero,0x7 ! trap if a0==0
      a4:	00001812 	mflo	v1          ! v1=a1/a0
// divide by 2
      a8:	00031842 	srl	v1,v1,0x1   ! v1=v1>>1
// mul by 2
      ac:	00031040 	sll	v0,v1,0x1   ! v0=v1<<1
// divde pllclk with clk divider ->  op_clock ?
      b0:	00a2001b 	divu	zero,a1,v0  ! a1/v0
      b4:	004001f4 	teq	v0,zero,0x7 ! trap if v0 == 0
// read result to v0 (op_clock)
      b8:	00001012 	mflo	v0          ! v0=a1/v0
      bc:	0082102b 	sltu	v0,a0,v0    ! if a0<v0 v0=1 else v0=0
      c0:	00431821 	addu	v1,v0,v1    ! v1=v0+v1
// if divisor > 16 divisor = 16
      c4:	2c640011 	sltiu	a0,v1,17    ! if v1<17 a0=1 else a0=0
      c8:	0064300b 	movn	a2,v1,a0    ! a2=v1 if a0 else 16
// v0 divisor * 2 for a1 div
      cc:	00061040 	sll	v0,a2,0x1   ! v0=a2<<1 // divisor * 2
      d0:	00a2001b 	divu	zero,a1,v0  ! div a1/v0
      d4:	004001f4 	teq	v0,zero,0x7 ! trap if v0 == 0
// addr to
      d8:	3c02b004 	lui	v0,0xb004   ! v0 = 0xb0040000
      dc:	34423018 	ori	v0,v0,0x3018! v0 = 0xb0043018 (&SSIGR)
// divisor -= 1
      e0:	24c6ffff 	addiu	a2,a2,-1    ! a2=a1-1;
// update arg
      e4:	00002812 	mflo	a1          ! a1=result of div
      e8:	ad250000 	sw	a1,0(t1)    ! arg->0=result of div
// set SSIGR = 0
      ec:	a4400000 	sh	zero,0(v0)  ! SSIGR=0:
// update ssi clock divider
      f0:	8ce30000 	lw	v1,0(a3)    ! v1=SSIDCDR
      f4:	2402fff0 	li	v0,-16	    ! v0=-16
      f8:	00621824 	and	v1,v1,v0    ! v1=SSIDCDR&0xfffffff0
      fc:	00661825 	or	v1,v1,a2    ! v1=v1|a2
     100:	ace30000 	sw	v1,0(a3)    ! SSIDCDR=v1
// start ssi clock
     104:	8d020000 	lw	v0,0(t0)    ! v0=CLKGR
     108:	2403ffef 	li	v1,-17      ! v1=0xfffffffef
     10c:	00431024 	and	v0,v0,v1    ! v0=v0&v1
     110:	ad020000 	sw	v0,0(t0)    ! CLKGR=v0 ; start SSI clock
     114:	03e00008 	jr	ra	!	return
     118:	00000000 	nop
     11c:	8d840000 	lw	a0,0(t4)    ! a0=CPPCR
     120:	8d830000 	lw	v1,0(t4)    ! v1=CPPCR
     124:	8d820000 	lw	v0,0(t4)    ! v0=CPPCR
     128:	00031c82 	srl	v1,v1,0x12  ! v1=v1>>18
     12c:	00021382 	srl	v0,v0,0xe   ! v0=v0>>15
     130:	3042000c 	andi	v0,v0,0xc   ! V0=v0&0xc
     134:	005d1021 	addu	v0,v0,sp    ! v0=v0+sp
     138:	8c450000 	lw	a1,0(v0)    ! a1=v0[0];
     13c:	3063001f 	andi	v1,v1,0x1f  ! v1=v1&0x1f
     140:	24630002 	addiu	v1,v1,2     ! v1=v1+2
     144:	70651802 	mul	v1,v1,a1    ! v1=v1*a1;
     148:	000425c2 	srl	a0,a0,0x17  ! a0=a0>>23
     14c:	01a3001b 	divu	zero,t5,v1  ! t5/v1
     150:	006001f4 	teq	v1,zero,0x7 ! trap if v1 zero
     154:	24840002 	addiu	a0,a0,2     ! a0=a0+2
     158:	00001812 	mflo	v1          ! v1=t5/v1
     15c:	0800001b 	j	6c <set_spi_clock+0x6c>
			15c: R_MIPS_26	.text
     160:	70831802 	mul	v1,a0,v1    ! v1=a0*v1

00000164 <get_dma_count>:
get_dma_count():
     164:	00041903 	sra	v1,a0,0x4
     168:	28840021 	slti	a0,a0,33
     16c:	14800002 	bnez	a0,178 <get_dma_count+0x14>
     170:	00001021 	move	v0,zero
     174:	00031100 	sll	v0,v1,0x4
     178:	03e00008 	jr	ra
     17c:	00000000 	nop

00000180 <enable_spi_interface>:
enable_spi_interface():
     180:	3c04b001 	lui	a0,0xb001
     184:	3c028000 	lui	v0,0x8000
     188:	24031c00 	li	v1,7168
     18c:	34850144 	ori	a1,a0,0x144 ! GPIO PBFUNS
     190:	34860158 	ori	a2,a0,0x158 !      PBSELC
     194:	34870178 	ori	a3,a0,0x178 !      PBTRGC
     198:	34880134 	ori	t0,a0,0x134 !      PBPES
     19c:	34890544 	ori	t1,a0,0x544 !      PFFUNS
     1a0:	348a0570 	ori	t2,a0,0x570 !      PFTRG
     1a4:	348b0558 	ori	t3,a0,0x558 !      PFSELC
     1a8:	aca20000 	sw	v0,0(a1)    ! PBFUNS 0x80000000
     1ac:	348c0534 	ori	t4,a0,0x534 !      PFPES
     1b0:	acc20000 	sw	v0,0(a2)    ! PBSELC 0x80000000
     1b4:	34840538 	ori	a0,a0,0x538 !      PFPEC
     1b8:	ace20000 	sw	v0,0(a3)    ! PBTRGC 0x80000000
     1bc:	ad020000 	sw	v0,0(t0)    ! PBPES  0x80000000
     1c0:	ad230000 	sw	v1,0(t1)    ! PFFUNS 0x1c00
     1c4:	24021000 	li	v0,4096     ! v0= 0x1000
     1c8:	ad430000 	sw	v1,0(t2)    ! PFTRG  0x1c00
     1cc:	ad630000 	sw	v1,0(t3)    ! PFSELC 0x1c00
     1d0:	24030c00 	li	v1,3072     ! v1=  0x0c00
     1d4:	ac820000 	sw	v0,0(a0)    ! PFPEC  0x1000
     1d8:	ad830000 	sw	v1,0(t4)    ! PFPES  0x0c00
     1dc:	03e00008 	jr	ra
     1e0:	00000000 	nop

000001e4 <enable_spi_controller>:
enable_spi_controller():
     1e4:	3c0200b7 	lui	v0,0xb7
     1e8:	27bdffe0 	addiu	sp,sp,-32
     1ec:	34421b00 	ori	v0,v0,0x1b00 ! v0=0xb71b00
     1f0:	afa20010 	sw	v0,16(sp)    ! store sp 16
     1f4:	3c05b004 	lui	a1,0xb004    ! a1=0xb0040000
     1f8:	3c02000c 	lui	v0,0xc	     ! v0=0x000c0000
     1fc:	afb00018 	sw	s0,24(sp)    ! save s0
     200:	34a63008 	ori	a2,a1,0x3008 ! a2=0xb0043008 SSICR1
     204:	34b03004 	ori	s0,a1,0x3004 ! s0=0xb0043004 SSICR0
     208:	24030046 	li	v1,70        ! v1=70
     20c:	344201e3 	ori	v0,v0,0x1e3  ! v0=0x000c01e3
     210:	afbf001c 	sw	ra,28(sp)    ! save ra
     214:	34a73014 	ori	a3,a1,0x3014 ! a3=0xb0043014 SSIICR
// save
     218:	a6030000 	sh	v1,0(s0)     ! SSICR0=0x46
     21c:	34a53010 	ori	a1,a1,0x3010 ! a1=0xb0043010 SSIITR
// save
     220:	acc20000 	sw	v0,0(a2)     ! SSICR1=0xc01e3
     224:	24030001 	li	v1,1         ! v1=1
     228:	3c020000 	lui	v0,0x0       ! v0 set_spi_clock
			228: R_MIPS_HI16	set_spi_clock
// save
     22c:	a4a30000 	sh	v1,0(a1)     ! SSIITR=1
     230:	27a40010 	addiu	a0,sp,16     ! a0=sp+16
     234:	24420000 	addiu	v0,v0,0      ! v0 set_spi_clock
			234: R_MIPS_LO16	set_spi_clock
     238:	a0e00000 	sb	zero,0(a3)   ! SSIICR=0
     23c:	0040f809 	jalr	v0           ! set_spi_clock
     240:	00000000 	nop
     244:	96030000 	lhu	v1,0(s0)     ! v1=SSICR0
     248:	3063ffff 	andi	v1,v1,0xffff ! v1&=0xffff
     24c:	34630080 	ori	v1,v1,0x80   ! v1|=0x80
     250:	a6030000 	sh	v1,0(s0)     ! SSICR0=v1
     254:	96020000 	lhu	v0,0(s0)     ! v0=SSICR0
     258:	3042ffff 	andi	v0,v0,0xffff ! v0&=0xffff
     25c:	34428000 	ori	v0,v0,0x8000 ! v0|=0x8000
     260:	a6020000 	sh	v0,0(s0)     ! SSICR0=v0
     264:	8fbf001c 	lw	ra,28(sp)    ! restore ra
     268:	8fb00018 	lw	s0,24(sp)    ! restore s0
     26c:	03e00008 	jr	ra           ! return
     270:	27bd0020 	addiu	sp,sp,32     ! restore stack

00000274 <module_power_on>:
module_power_on():
     274:	3c02b001 	lui	v0,0xb001
     278:	3c030040 	lui	v1,0x40     ! v1=0x00400000
     27c:	34460318 	ori	a2,v0,0x318 ! a2=0xb0010318 PDDATC
     280:	34470334 	ori	a3,v0,0x334 ! a3=0xb0010334 PDPES
     284:	34440348 	ori	a0,v0,0x348 ! a0=0xb0010348 PDFUNC
     288:	34450358 	ori	a1,v0,0x358 ! a1=0xb0010358 PDSELC
     28c:	34420364 	ori	v0,v0,0x364 ! v0=0xb0010364 PDDIRS
     290:	acc30000 	sw	v1,0(a2)  ! PDDATC=0x400000
     294:	ac830000 	sw	v1,0(a0)  ! PDFUNC=0x400000
     298:	aca30000 	sw	v1,0(a1)  ! PDSELC=0x400000
     29c:	ac430000 	sw	v1,0(v0)  ! PDDRIS=0x400000
     2a0:	ace30000 	sw	v1,0(a3)  ! PDPES=0x400000
     2a4:	acc30000 	sw	v1,0(a2)  ! PDDATC=0x400000
     2a8:	03e00008 	jr	ra        ! return
     2ac:	00000000 	nop

000002b0 <module_power_off>:
module_power_off():
     2b0:	3c02b001 	lui	v0,0xb001
     2b4:	3c030040 	lui	v1,0x40     ! v2=0x400000
     2b8:	34460314 	ori	a2,v0,0x314 ! PDDATS
     2bc:	34470364 	ori	a3,v0,0x364 ! PDDIRS
     2c0:	34440334 	ori	a0,v0,0x334 ! PDPES
     2c4:	34450348 	ori	a1,v0,0x348 ! PDFUNC
     2c8:	34420358 	ori	v0,v0,0x358 ! PDSELC
     2cc:	acc30000 	sw	v1,0(a2) ! PDDATS=0x400000
     2d0:	ac830000 	sw	v1,0(a0) ! PDPES=0x400000
     2d4:	aca30000 	sw	v1,0(a1) ! PDFUNC=0x400000
     2d8:	ac430000 	sw	v1,0(v0) ! PDSELC=0x400000
     2dc:	ace30000 	sw	v1,0(a3) ! PDDIRS=0x400000
     2e0:	acc30000 	sw	v1,0(a2) ! PDDATS=0x400000
     2e4:	03e00008 	jr	ra       ! return
     2e8:	00000000 	nop

000002ec <stack_force_interrupt_clear>:
stack_force_interrupt_clear():
     2ec:	3c020000 	lui	v0,0x0
			2ec: R_MIPS_HI16	g_isforce
     2f0:	ac400000 	sw	zero,0(v0)
			2f0: R_MIPS_LO16	g_isforce
     2f4:	03e00008 	jr	ra
     2f8:	00001021 	move	v0,zero

000002fc <stack_force_interrupt_get>:
stack_force_interrupt_get():
     2fc:	3c030000 	lui	v1,0x0
			2fc: R_MIPS_HI16	g_isforce
     300:	03e00008 	jr	ra
     304:	8c620000 	lw	v0,0(v1)
			304: R_MIPS_LO16	g_isforce

00000308 <HW_SetClock>:
HW_SetClock(pContext, unsgined int *op_clock):
     308:	27bdffe0 	addiu	sp,sp,-32
     30c:	afbf001c 	sw	ra,28(sp) ! save ra
     310:	afb00010 	sw	s0,16(sp) ! save s0
     314:	afb20018 	sw	s2,24(sp) ! save s2
     318:	afb10014 	sw	s1,20(sp) ! save s1
     31c:	3c020000 	lui	v0,0x0    ! v0=set_spi_clock
			31c: R_MIPS_HI16	set_spi_clock
// s0=op_clock
     320:	00a08021 	move	s0,a1     ! s0=a1
// s1=firstArg->b64 (troligen data i pContext
     324:	8c910040 	lw	s1,64(a0) ! s1=a0+64
     328:	24420000 	addiu	v0,v0,0   ! v0=set_spi_clock
			328: R_MIPS_LO16	set_spi_clock
// set_spi_clock(op_clock)
     32c:	00a02021 	move	a0,a1     ! a0=a1
     330:	0040f809 	jalr	v0        ! call set_spi_clock
// s2 = *a1 = op_clock
     334:	8cb20000 	lw	s2,0(a1)  ! s2=*a1
// a2 = *s0 ( s0==a1  dvc a2=op_clock
     338:	8e060000 	lw	a2,0(s0)  ! a2=*s0
// a0 = LC0
     33c:	3c040000 	lui	a0,0x0    ! a0 LC0
			33c: R_MIPS_HI16	$LC0
     340:	ae26006c 	sw	a2,108(s1)! s1+108=a2
     344:	3c190000 	lui	t9,0x0    ! t9=printk
			344: R_MIPS_HI16	printk
     348:	02402821 	move	a1,s2     ! a1=s2
// restore stack
     34c:	8fbf001c 	lw	ra,28(sp) ! restore ra
     350:	8fb20018 	lw	s2,24(sp) ! restore s2
     354:	8fb10014 	lw	s1,20(sp) ! restore s1
     358:	8fb00010 	lw	s0,16(sp) ! restore s0
     35c:	24840000 	addiu	a0,a0,0   ! a0 LC0
			35c: R_MIPS_LO16	$LC0
     360:	27390000 	addiu	t9,t9,0
			360: R_MIPS_LO16	printk
// printk(LC0, s2==op_clock, s1=a0->b64 s1->b108)
     364:	03200008 	jr	t9        ! call printk
     368:	27bd0020 	addiu	sp,sp,32  ! restore stack

0000036c <HW_SetDebugSignal>:
HW_SetDebugSignal():
     36c:	3c040000 	lui	a0,0x0
			36c: R_MIPS_HI16	$LC1
     370:	3c050000 	lui	a1,0x0
			370: R_MIPS_HI16	.rodata
     374:	3c190000 	lui	t9,0x0
			374: R_MIPS_HI16	printk
     378:	24840000 	addiu	a0,a0,0
			378: R_MIPS_LO16	$LC1
     37c:	27390000 	addiu	t9,t9,0
			37c: R_MIPS_LO16	printk
     380:	03200008 	jr	t9
     384:	24a50048 	addiu	a1,a1,72
			384: R_MIPS_LO16	.rodata

00000388 <HW_ToggleDebugSignal>:
HW_ToggleDebugSignal():
     388:	3c040000 	lui	a0,0x0
			388: R_MIPS_HI16	$LC1
     38c:	3c050000 	lui	a1,0x0
			38c: R_MIPS_HI16	.rodata
     390:	3c190000 	lui	t9,0x0
			390: R_MIPS_HI16	printk
     394:	24840000 	addiu	a0,a0,0
			394: R_MIPS_LO16	$LC1
     398:	27390000 	addiu	t9,t9,0
			398: R_MIPS_LO16	printk
     39c:	03200008 	jr	t9
     3a0:	24a5005c 	addiu	a1,a1,92
			3a0: R_MIPS_LO16	.rodata

000003a4 <HW_PowerUpDown>:
HW_PowerUpDown():
     3a4:	3c040000 	lui	a0,0x0
			3a4: R_MIPS_HI16	$LC2
     3a8:	3c050000 	lui	a1,0x0
			3a8: R_MIPS_HI16	.rodata
     3ac:	3c190000 	lui	t9,0x0
			3ac: R_MIPS_HI16	printk
     3b0:	24840000 	addiu	a0,a0,0
			3b0: R_MIPS_LO16	$LC2
     3b4:	27390000 	addiu	t9,t9,0
			3b4: R_MIPS_LO16	printk
     3b8:	03200008 	jr	t9
     3bc:	24a50088 	addiu	a1,a1,136
			3bc: R_MIPS_LO16	.rodata

000003c0 <stack_force_interrupt>:
stack_force_interrupt():
     3c0:	3c040000 	lui	a0,0x0
			3c0: R_MIPS_HI16	.data
     3c4:	24060001 	li	a2,1            ! a2=1
     3c8:	3c020000 	lui	v0,0x0
			3c8: R_MIPS_HI16	g_isforce
     3cc:	3c190000 	lui	t9,0x0
			3cc: R_MIPS_HI16	SDIO_HandleHcdEvent
     3d0:	3c030000 	lui	v1,0x0
			3d0: R_MIPS_HI16	.data
     3d4:	24840050 	addiu	a0,a0,80        ! a0=data+80
			3d4: R_MIPS_LO16	.data
     3d8:	24050003 	li	a1,3            ! a1=3
// g_isforce=1
     3dc:	ac460000 	sw	a2,0(v0)        g_isforce=1
			3dc: R_MIPS_LO16	g_isforce
     3e0:	27390000 	addiu	t9,t9,0
			3e0: R_MIPS_LO16	SDIO_HandleHcdEvent
// call SDIO_HandleHcdEvent(data+80, 3, 1)
     3e4:	03200008 	jr	t9
     3e8:	ac6000d8 	sw	zero,216(v1)  ! data[216].w=0
			3e8: R_MIPS_LO16	.data

000003ec <hcd_iocomplete_wqueue_handler>:
hcd_iocomplete_wqueue_handler():
     3ec:	8c84ffec 	lw	a0,-20(a0)  ! a0=arg[-20]
     3f0:	3c190000 	lui	t9,0x0      ! t9 Handle...
			3f0: R_MIPS_HI16	SDIO_HandleHcdEvent
     3f4:	24840044 	addiu	a0,a0,68    ! a0=a0+68
     3f8:	27390000 	addiu	t9,t9,0     ! t9 Handle
			3f8: R_MIPS_LO16	SDIO_HandleHcdEvent
// SDIO_HandleHcdEvent(a0+68, EVENT_HCD_TRANSFER_DONE);
     3fc:	03200008 	jr	t9
     400:	24050004 	li	a1,4

00000404 <init_hardware>:
// init_hardware(spi_dev)
init_hardware():
     404:	27bdffc0 	addiu	sp,sp,-64  ! alloc 64 bytes on stack
     408:	afbf003c 	sw	ra,60(sp)  ! save ra
     40c:	afb40038 	sw	s4,56(sp)  ! save s4
     410:	afb20030 	sw	s2,48(sp)  ! save s2
     414:	afb00028 	sw	s0,40(sp)  ! save s0
     418:	afb30034 	sw	s3,52(sp)  ! save s3
     41c:	afb1002c 	sw	s1,44(sp)  ! save s1
     420:	3c020000 	lui	v0,0x0     ! v0=0
			420: R_MIPS_HI16	.data
     424:	8c430008 	lw	v1,8(v0)   ! v1=op_clock
			424: R_MIPS_LO16	.data
     428:	3c100000 	lui	s0,0x0     ! s0=.data
			428: R_MIPS_HI16	.data
     42c:	2610000c 	addiu	s0,s0,12   ! s0=&ar6k_spi
			42c: R_MIPS_LO16	.data
     430:	00809021 	move	s2,a0      ! save a0 to s2
     434:	3c140000 	lui	s4,0x0     ! s4 = printk
			434: R_MIPS_HI16	printk
     438:	3c040000 	lui	a0,0x0     ! a0=LC3
			438: R_MIPS_HI16	$LC3
     43c:	00602821 	move	a1,v1      ! a1=op_clock
     440:	24840000 	addiu	a0,a0,0    ! a0=LC3
			440: R_MIPS_LO16	$LC3
     444:	26820000 	addiu	v0,s4,0
			444: R_MIPS_LO16	printk
// printk("Colman: op_clock= %d\n", op_clock)
     448:	0040f809 	jalr	v0
     44c:	ae03003c 	sw	v1,60(s0) ! ar6k_spi.op_clock
     450:	3c020000 	lui	v0,0x0    ! module_power_off
			450: R_MIPS_HI16	module_power_off
     454:	24420000 	addiu	v0,v0,0   ! module_power_off
			454: R_MIPS_LO16	module_power_off
// call module_power off
     458:	0040f809 	jalr	v0
     45c:	ae500020 	sw	s0,32(s2) ! spi_dev.pHcd_ctx=&ar6k_spi
     460:	3c030000 	lui	v1,0x0    ! v1=esc
			460: R_MIPS_HI16	enable_spi_controller
     464:	24630000 	addiu	v1,v1,0   ! v1=esc
			464: R_MIPS_LO16	enable_spi_controller
// call enable_spi_controller
     468:	0060f809 	jalr	v1
     46c:	3c100000 	lui	s0,0x0    ! s0=hi(cpu_data)
			46c: R_MIPS_HI16	cpu_data
     470:	3c020000 	lui	v0,0x0    ! v0=hi(esi)
			470: R_MIPS_HI16	enable_spi_interface
     474:	24420000 	addiu	v0,v0,0   ! v0=esi
			474: R_MIPS_LO16	enable_spi_interface
// call enable_spi_interface
     478:	0040f809 	jalr	v0
     47c:	00000000 	nop
     480:	3c021999 	lui	v0,0x1999 ! v0=0x19990000
     484:	8e030000 	lw	v1,0(s0)  ! v1=cpu_data
			484: R_MIPS_LO16	cpu_data
     488:	34449aa8 	ori	a0,v0,0x9aa8 ! a0=0x19999aa8
     48c:	24050009 	li	a1,9         ! a1=9
     490:	2406ffff 	li	a2,-1        ! a2=-1
4ac -->
     494:	00830019 	multu	a0,v1        ! a0=a0*v1
     498:	00001010 	mfhi	v0
     49c:	00000000 	nop

     // loop while v0!=0, udelay??
     4a0:	1440ffff 	bnez	v0,4a0 <init_hardware+0x9c>
     4a4:	2442ffff 	addiu	v0,v0,-1

     4a8:	24a5ffff 	addiu	a1,a1,-1
to 494 if a1!=a2
     4ac:	14a6fff9 	bne	a1,a2,494 <init_hardware+0x90>
     4b0:	3c020000 	lui	v0,0x0
			4b0: R_MIPS_HI16	module_power_on
     4b4:	24420000 	addiu	v0,v0,0
			4b4: R_MIPS_LO16	module_power_on
// call module power on
     4b8:	0040f809 	jalr	v0
     4bc:	00000000 	nop
// usleep ??
     4c0:	3c021999 	lui	v0,0x1999
     4c4:	8e030000 	lw	v1,0(s0)
			4c4: R_MIPS_LO16	cpu_data
     4c8:	34449aa8 	ori	a0,v0,0x9aa8
     4cc:	24100063 	li	s0,99
     4d0:	2405ffff 	li	a1,-1
4ec --->
     4d4:	00830019 	multu	a0,v1
     4d8:	00001010 	mfhi	v0
     4dc:	00000000 	nop
     4e0:	1440ffff 	bnez	v0,4e0 <init_hardware+0xdc>
     4e4:	2442ffff 	addiu	v0,v0,-1
     4e8:	2610ffff 	addiu	s0,s0,-1
// to 4d4 if s0!=a1
     4ec:	1605fff9 	bne	s0,a1,4d4 <init_hardware+0xd0>
     4f0:	00000000 	nop

     4f4:	afa00024 	sw	zero,36(sp) ! sp[36]=0
     4f8:	8fa20024 	lw	v0,36(sp)   ! v0=0
     4fc:	26460038 	addiu	a2,s2,56    ! a2=spi_dev->iocomplete...
     500:	ae420034 	sw	v0,52(s2)   ! iocomplete_work=0
     504:	afa00020 	sw	zero,32(sp) ! sp[32]=0
     508:	8fa20020 	lw	v0,32(sp)   ! v0=0
     50c:	acc60004 	sw	a2,4(a2)    ! iocomplete...=iocomplete
     510:	ae420044 	sw	v0,68(s2)   ! procirq=0
     514:	afa0001c 	sw	zero,28(sp) ! sp[28]=0
     518:	3c020000 	lui	v0,0x0      ! v0=0
			518: R_MIPS_HI16	.text
     51c:	8fa3001c 	lw	v1,28(sp)   ! v1=0
     520:	244203ec 	addiu	v0,v0,1004  ! v0= hcd_iocomplete_wq...
			520: R_MIPS_LO16	.text
     524:	ae420040 	sw	v0,64(s2)   ! iocomplete_w=v0
     528:	26450048 	addiu	a1,s2,72    ! a1=&proirc_work...
     52c:	3c020000 	lui	v0,0x0      ! v0=0
			52c: R_MIPS_HI16	.text
     530:	aca50004 	sw	a1,4(a1)    ! procirc_work=procirc_w
     534:	24420bf0 	addiu	v0,v0,3056  ! v0=hcd_procirq_wq...
			534: R_MIPS_LO16	.text
     538:	ae430054 	sw	v1,84(s2)   ! dmacomplete_w=0
     53c:	afa00018 	sw	zero,24(sp) ! sp[24]=0
     540:	8fa70018 	lw	a3,24(sp)   ! a3=0
     544:	ae420050 	sw	v0,80(s2)   ! dmacompletew=v0
     548:	3c020000 	lui	v0,0x0      ! v0=0
			548: R_MIPS_HI16	.text
     54c:	26430058 	addiu	v1,s2,88    ! v1=dmacomplete..
     550:	24420bd8 	addiu	v0,v0,3032  ! v0=hdc_dmacomplete_wq...
			550: R_MIPS_LO16	.text
     554:	ac630004 	sw	v1,4(v1)    ! dmacomplete...=dmacomplete
     558:	ae420060 	sw	v0,96(s2)   ! dmacomplete_w..=v0
     55c:	3c020000 	lui	v0,0x0      ! v0=0
			55c: R_MIPS_HI16	.text
     560:	26440028 	addiu	a0,s2,40    ! a0=ssicompletew...
     564:	244209e8 	addiu	v0,v0,2536  ! v0=hcd_ssicomplete_wq...
			564: R_MIPS_LO16	.text
     568:	ae470024 	sw	a3,36(s2)   ! ssicomplete_w=0
     56c:	ac840004 	sw	a0,4(a0)    ! ssicomplete_w=a0
     570:	ae420030 	sw	v0,48(s2)   ! ssicompletew...=v0
     574:	3c020000 	lui	v0,0x0      ! v0=0
			574: R_MIPS_HI16	init_timer
     578:	ae460038 	sw	a2,56(s2)   ! iocompletew..=a2
     57c:	ae450048 	sw	a1,72(s2)   ! procircw...=a1
     580:	ae430058 	sw	v1,88(s2)   ! dmacompletew...=v1
     584:	ae440028 	sw	a0,40(s2)   ! ssicompletew...=a0
     588:	24420000 	addiu	v0,v0,0     ! v0=init_timer
			588: R_MIPS_LO16	init_timer
// call init_timer(spi_dev)
     58c:	0040f809 	jalr	v0
     590:	02402021 	move	a0,s2       ! a0=&spi_dev->spi_timer
     594:	92430068 	lbu	v1,104(s2)  ! v1=spi_dev.b104
     598:	3c11b001 	lui	s1,0xb001   ! s1=0xb0010000
     59c:	3c020000 	lui	v0,0x0      ! v0=0 TimerTimeout
			59c: R_MIPS_HI16	.text
     5a0:	36240438 	ori	a0,s1,0x438 ! a0=pepec
     5a4:	244209c0 	addiu	v0,v0,2496  ! v0=TimerTimeout
			5a4: R_MIPS_LO16	.text
     5a8:	34630080 	ori	v1,v1,0x80  ! v1=v1|0x80
     5ac:	3c130004 	lui	s3,0x4      ! s3=0x00040000
     5b0:	ae42000c 	sw	v0,12(s2)   ! spi_dev[12]=TimerTimeout
     5b4:	a2430068 	sb	v1,104(s2)  ! spi_dev[104]|=0x80
     5b8:	ae520010 	sw	s2,16(s2)   ! spi_dev[16]=spi_dev
     5bc:	ac930000 	sw	s3,0(a0)    ! pepec=0x40000
     5c0:	8e420020 	lw	v0,32(s2)   ! v0=s2[32] hcdContext
     5c4:	3c050000 	lui	a1,0x0      ! a1=0
			5c4: R_MIPS_HI16	.text
     5c8:	8c470050 	lw	a3,80(v0)   ! a3=hcdContext.pName
     5cc:	3c020000 	lui	v0,0x0      ! v0=0
			5cc: R_MIPS_HI16	request_irq
     5d0:	24a50fe8 	addiu	a1,a1,4072  ! a1=&hcd_spi_irq
			5d0: R_MIPS_LO16	.text
     5d4:	240400c2 	li	a0,194      ! a0=194
     5d8:	00003021 	move	a2,zero     ! a2=0
     5dc:	afb20010 	sw	s2,16(sp)   ! spi_dev on stack arg
     5e0:	24420000 	addiu	v0,v0,0     ! v0=request_irg
			5e0: R_MIPS_LO16	request_irq
// request_irq(194,hcd_spi_irq,0,hcdContext.pName)
     5e4:	0040f809 	jalr	v0
     5e8:	2410ffff 	li	s0,-1       ! s0=-1
// to 688 (out err) if rc<0
     5ec:	04400026 	bltz	v0,688 <init_hardware+0x284>
     5f0:	36220424 	ori	v0,s1,0x424 ! v0=&peims
     5f4:	ac530000 	sw	s3,0(v0)    ! peims=0x40000
     5f8:	36230478 	ori	v1,s1,0x478 ! v1=&petrgc
     5fc:	36290428 	ori	t1,s1,0x428 ! t1=&peimc
     600:	36250448 	ori	a1,s1,0x448 ! a1=&pefunc
     604:	36260454 	ori	a2,s1,0x454 ! a2=&pesels
     608:	36270468 	ori	a3,s1,0x468 ! a3=&pedirc
     60c:	36280414 	ori	t0,s1,0x414 ! t0=&pedats
     610:	3c020000 	lui	v0,0x0
			610: R_MIPS_HI16	disable_irq
     614:	ac730000 	sw	s3,0(v1)    ! petrgc=0x40000
     618:	24420000 	addiu	v0,v0,0     ! v0=&disable_irq
			618: R_MIPS_LO16	disable_irq
     61c:	acb30000 	sw	s3,0(a1)    ! pefunc=0x40000
     620:	240400c2 	li	a0,194      ! a0=194
     624:	acd30000 	sw	s3,0(a2)    ! pesels=0x40000
     628:	acf30000 	sw	s3,0(a3)    ! pedirc=0x40000
     62c:	ad130000 	sw	s3,0(t0)    ! pedats=0x40000
// disable_irq(194)
     630:	0040f809 	jalr	v0
     634:	ad330000 	sw	s3,0(t1)    ! peimc=0x40000
     638:	92430068 	lbu	v1,104(s2)  ! v1=spi_dev->b104
     63c:	a2400069 	sb	zero,105(s2)! spi_dev->b105=0
     640:	34630008 	ori	v1,v1,0x8   ! v1|=8
     644:	a2430068 	sb	v1,104(s2)  ! spi_dev->b104=v1
     648:	3c020000 	lui	v0,0x0      ! v0=0
			648: R_MIPS_HI16	.data
     64c:	8c430004 	lw	v1,4(v0)    ! v1=dma_mode
			64c: R_MIPS_LO16	.data
// to 6ac if != 0 if dma_mode
     650:	14600016 	bnez	v1,6ac <init_hardware+0x2a8>
     654:	00001021 	move	v0,zero
     658:	ae500074 	sw	s0,116(s2)   ! spi_dev->rxdmachan=-1
     65c:	ae400088 	sw	zero,136(s2) ! spi_dev->pDmaDescriptor=0
     660:	ae400090 	sw	zero,144(s2) ! spi_dev->pDmaCommonBuf=0
     664:	ae500070 	sw	s0,112(s2)   ! spi_dev->txdmachan=-1
     668:	8fbf003c 	lw	ra,60(sp)   ! restore ra
     66c:	8fb40038 	lw	s4,56(sp)   ! restore s4
     670:	8fb30034 	lw	s3,52(sp)   ! restore s3
     674:	8fb20030 	lw	s2,48(sp)   ! restore s2
     678:	8fb1002c 	lw	s1,44(sp)   ! restore s1
     67c:	8fb00028 	lw	s0,40(sp)   ! restore s0
     680:	03e00008 	jr	ra	    ! return Ok
     684:	27bd0040 	addiu	sp,sp,64    ! dealloc stackp
5ec  ---> out error
     688:	8fbf003c 	lw	ra,60(sp)  ! restore ra
     68c:	8fb40038 	lw	s4,56(sp)  ! restore s4
     690:	8fb30034 	lw	s3,52(sp)  ! restore s3
     694:	8fb20030 	lw	s2,48(sp)  ! restore s2
     698:	8fb1002c 	lw	s1,44(sp)  ! restore s1
     69c:	8fb00028 	lw	s0,40(sp)  ! restore s0
     6a0:	2402ffff 	li	v0,-1      ! v0=-1
     6a4:	03e00008 	jr	ra         ! return -1
     6a8:	27bd0040 	addiu	sp,sp,64   ! dealloc stack
650 (dma_mode=1)  --->
     6ac:	3c110000 	lui	s1,0x0     ! s1=0
			6ac: R_MIPS_HI16	__get_free_pages
     6b0:	26310000 	addiu	s1,s1,0    ! s1= get free pages
			6b0: R_MIPS_LO16	__get_free_pages
     6b4:	240400d0 	li	a0,208     ! a0=208
// call get_free_pages(208, 0)
     6b8:	0220f809 	jalr	s1         !
     6bc:	00002821 	move	a1,zero    ! a1=0

     6c0:	3c108000 	lui	s0,0x8000  ! s0=0x80000000
     6c4:	00501821 	addu	v1,v0,s0   ! v1=0x80000000+page_addr
     6c8:	ae43008c 	sw	v1,140(s2) ! spi_dev->w140=pDmaDescript
     6cc:	ae420088 	sw	v0,136(s2) ! spi_dev->w136=DmaDescriptp
     6d0:	240400d0 	li	a0,208     ! a0=208
// call get_free_pages(208, 0)
     6d4:	0220f809 	jalr	s1
     6d8:	00002821 	move	a1,zero

     6dc:	00508021 	addu	s0,v0,s0   ! s0=paddr
     6e0:	ae500094 	sw	s0,148(s2) ! spi_dev->DmaCommonphys
     6e4:	3c110000 	lui	s1,0x0     ! s1=0
			6e4: R_MIPS_HI16	.text
     6e8:	3c050000 	lui	a1,0x0     ! a1=LC4
			6e8: R_MIPS_HI16	$LC4
     6ec:	3c100000 	lui	s0,0x0     ! s0=&jz_request_dma
			6ec: R_MIPS_HI16	jz_request_dma
     6f0:	26100000 	addiu	s0,s0,0    ! s0=&jz_request_dma
			6f0: R_MIPS_LO16	jz_request_dma
     6f4:	ae420090 	sw	v0,144(s2) ! spi_dev->DmaCommonB=vaddr
     6f8:	262607a0 	addiu	a2,s1,1952 ! a2=spi_dma_irq
			6f8: R_MIPS_LO16	.text
     6fc:	afb20010 	sw	s2,16(sp)  ! sp[16]=&spi_dev
     700:	24a50000 	addiu	a1,a1,0    ! a1=LC4
			700: R_MIPS_LO16	$LC4
     704:	2404000d 	li	a0,13      ! a0=13
// call jz_request_dma(13,"Ar6k SPI DMA TX", spi_dma_irq, 0);
     708:	0200f809 	jalr	s0
     70c:	00003821 	move	a3,zero

     710:	3c050000 	lui	a1,0x0     ! a1=LC5
			710: R_MIPS_HI16	$LC5
     714:	ae420070 	sw	v0,112(s2) ! spi_dev->txdmachan=rc
     718:	262607a0 	addiu	a2,s1,1952 ! a2=spi_dma_irq
			718: R_MIPS_LO16	.text
     71c:	afb20010 	sw	s2,16(sp)  ! sp[16]=&spi_dev
     720:	24a50000 	addiu	a1,a1,0    ! a1=LC5
			720: R_MIPS_LO16	$LC5
     724:	2404000e 	li	a0,14      ! a0=14
// call jz_request_dma(14, "Ar6k SPI DMA RX", spi_dma_irq, 0);
     728:	0200f809 	jalr	s0
     72c:	00003821 	move	a3,zero

     730:	8e450070 	lw	a1,112(s2) ! a1=spi_dev->txdmachan
     734:	3c040000 	lui	a0,0x0     ! a0=LC6
			734: R_MIPS_HI16	$LC6
     738:	ae420074 	sw	v0,116(s2) ! spi_dev->rxdmachan=rc
     73c:	00403021 	move	a2,v0      ! a2=rc
     740:	26820000 	addiu	v0,s4,0    ! v0=printk
			740: R_MIPS_LO16	printk
// printk("Ar6k SPI use TX/RX DMA channel: %d/%d\n", txdmachan, rxdmachan)
     744:	0040f809 	jalr	v0
     748:	24840000 	addiu	a0,a0,0
			748: R_MIPS_LO16	$LC6
     74c:	8fbf003c 	lw	ra,60(sp)  ! restore ra
     750:	8fb40038 	lw	s4,56(sp)  ! restore s4
     754:	8fb30034 	lw	s3,52(sp)  ! restore s3
     758:	8fb20030 	lw	s2,48(sp)  ! restore s2
     75c:	8fb1002c 	lw	s1,44(sp)  ! restore s1
     760:	8fb00028 	lw	s0,40(sp)  ! restore s0
     764:	00001021 	move	v0,zero    ! v0=OK
     768:	03e00008 	jr	ra	   ! return
     76c:	27bd0040 	addiu	sp,sp,64   ! dellocate stack

00000770 <QueueWork>:
QueueWork():
     770:	27bdffe8 	addiu	sp,sp,-24   ! alloc 24 bytes
     774:	3c020000 	lui	v0,0x0      ! v0=schedule_work
			774: R_MIPS_HI16	schedule_work
     778:	afbf0010 	sw	ra,16(sp)   ! save ra
     77c:	24420000 	addiu	v0,v0,0     ! v0=schedule_work
			77c: R_MIPS_LO16	schedule_work
// call schedule_work(a1)
     780:	0040f809 	jalr	v0          ! call
     784:	00a02021 	move	a0,a1       ! a0=a1
     788:	28430001 	slti	v1,v0,1     ! v1=1 if v0<1
     78c:	8fbf0010 	lw	ra,16(sp)   ! restore ra
     790:	24020003 	li	v0,3        ! v0=3
     794:	0003100a 	movz	v0,zero,v1  ! v0=0 if v1
     798:	03e00008 	jr	ra          ! return
     79c:	27bd0018 	addiu	sp,sp,24    ! restore stack

000007a0 <spi_dma_irq>:
spi_dma_irq():
     7a0:	27bdffd8 	addiu	sp,sp,-40   ! allocate 40 bytes on stack
     7a4:	afb20018 	sw	s2,24(sp)   ! save s2
     7a8:	afb10014 	sw	s1,20(sp)   ! save s1
     7ac:	afbf0020 	sw	ra,32(sp)   ! save ra
     7b0:	afb3001c 	sw	s3,28(sp)   ! save s3
     7b4:	afb00010 	sw	s0,16(sp)   ! save s0
     7b8:	2491ffe0 	addiu	s1,a0,-32   ! s1=arg0-32 dma_irq - 32
     7bc:	00a09021 	move	s2,a1       ! s2=a1  == spi_dev
     7c0:	8cb30020 	lw	s3,32(a1)   ! s3=hcd_context
     7c4:	0620006d 	bltz	s1,97c <spi_dma_irq+0x1dc> ! to 97c if irq<32
     7c8:	02201021 	move	v0,s1       ! v0=s1=(irq-32)
97c ---->
v0=v0&~3
     7cc:	00023883 	sra	a3,v0,0x2   ! a3=v0>>2  = /4
     7d0:	00071080 	sll	v0,a3,0x2   ! v0=a3<<2
     7d4:	02221021 	addu	v0,s1,v0    ! v0=(irq-32)+v0
     7d8:	3c08b302 	lui	t0,0xb302   ! t0=0xb3020000
     7dc:	00023140 	sll	a2,v0,0x5   ! a2=v0<<5
     7e0:	35030010 	ori	v1,t0,0x10  ! v1=0xb3020010
     7e4:	00c38021 	addu	s0,a2,v1    ! s0=a2+v1
     7e8:	8e020000 	lw	v0,0(s0)    ! v0=s0[0] dcs
     7ec:	30420004 	andi	v0,v0,0x4   ! v0&=4   hlt
     7f0:	1040000c 	beqz	v0,824 <spi_dma_irq+0x84> ! to 824 if !v0
     7f4:	00000000 	nop
     7f8:	8e030000 	lw	v1,0(s0)    ! v1=s0[0]
     7fc:	2402fffb 	li	v0,-5       ! v0=-5
     800:	00621824 	and	v1,v1,v0    ! v1&=v0   mask away hlt
     804:	00072200 	sll	a0,a3,0x8   ! a0=a3<<8
     808:	35050300 	ori	a1,t0,0x300 ! a1=0xb3020300
     80c:	ae030000 	sw	v1,0(s0)    ! s0[0]=v1 update dcs
     810:	00852021 	addu	a0,a0,a1    ! a0=a0+a1  dmac
     814:	8c820000 	lw	v0,0(a0)    ! v0=a0[0]
     818:	2403fff7 	li	v1,-9       ! v1=-9    mask away 3
     81c:	00431024 	and	v0,v0,v1    ! v0=v0&v1
     820:	ac820000 	sw	v0,0(a0)    ! a0[0]=v0 update reg
7f0 -->
     824:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     828:	30420010 	andi	v0,v0,0x10  ! v0=v0&0x10
     82c:	10400013 	beqz	v0,87c <spi_dma_irq+0xdc> ! to 87c if !v0
     830:	35020018 	ori	v0,t0,0x18  ! v0=b3020018
     834:	35040004 	ori	a0,t0,0x4   ! a0=b3020004
     838:	00c42021 	addu	a0,a2,a0    ! a0=a2+a0
     83c:	00c21021 	addu	v0,a2,v0    ! v0=a2+v0
     840:	00c81821 	addu	v1,a2,t0    ! v1=a2+t0
     844:	ac400000 	sw	zero,0(v0)  ! v0[0]=0
     848:	ac600000 	sw	zero,0(v1)  ! v1[0]=0
     84c:	ac800000 	sw	zero,0(a0)  ! a0[0]=0
     850:	8e030000 	lw	v1,0(s0)    ! v1=s0[0]
     854:	2402ffef 	li	v0,-17      ! v0=-17
     858:	00621824 	and	v1,v1,v0    ! v1=v1&v0
     85c:	00072200 	sll	a0,a3,0x8   ! a0=a3<<8
     860:	35050300 	ori	a1,t0,0x300 ! a1=0xb3020300
     864:	ae030000 	sw	v1,0(s0)    ! s0[0]=v1
     868:	00852021 	addu	a0,a0,a1    ! a0=a0+a1
     86c:	8c820000 	lw	v0,0(a0)    ! v0=a0[0]
     870:	2403fffb 	li	v1,-5       ! v1=-5
     874:	00431024 	and	v0,v0,v1    ! v0=v0&v1
     878:	ac820000 	sw	v0,0(a0)    ! a0[0]=v0
82c --->
     87c:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     880:	30420040 	andi	v0,v0,0x40  ! v0=v0&0x40
     884:	10400005 	beqz	v0,89c <spi_dma_irq+0xfc> ! to 89c if !v0
     888:	00000000 	nop
     88c:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     890:	2403ffbf 	li	v1,-65      ! v1=-65
     894:	00431024 	and	v0,v0,v1    ! v0=v0&v1
     898:	ae020000 	sw	v0,0(s0)    ! s0[0]=v0
884 --->
     89c:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     8a0:	30420002 	andi	v0,v0,0x2   ! v0=v0&2
     8a4:	14400028 	bnez	v0,948 <spi_dma_irq+0x1a8> ! to 948 if !v0 printout
     8a8:	00000000 	nop
974 from printout --->
     8ac:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     8b0:	30420008 	andi	v0,v0,0x8   ! v0=v0&8
     8b4:	1040001d 	beqz	v0,92c <spi_dma_irq+0x18c> ! to 92c if !v0 out
     8b8:	8fbf0020 	lw	ra,32(sp)   ! restore ra
     8bc:	8e020000 	lw	v0,0(s0)    ! v0=s0[0]
     8c0:	2403fffe 	li	v1,-2       ! v1=-2
     8c4:	00431024 	and	v0,v0,v1    ! v0=v0&v1
     8c8:	ae020000 	sw	v0,0(s0)    ! s0[0]=v0
     8cc:	8e030000 	lw	v1,0(s0)    ! v1=s0[0]
     8d0:	2402fff7 	li	v0,-9       ! v0=-9
     8d4:	00621824 	and	v1,v1,v0    ! v1=v1&v0
     8d8:	ae030000 	sw	v1,0(s0)    ! s0[0]=v1
     8dc:	8e420070 	lw	v0,112(s2)  ! v0=spi_dev->TxDmaChannel
     8e0:	12220028 	beq	s1,v0,984 <spi_dma_irq+0x1e4> ! to 984 if s1==v0 w128
     8e4:	24020001 	li	v0,1        ! v0=1
     8e8:	8e420074 	lw	v0,116(s2)  ! v0=spi_dev->RxDmaChannel
     8ec:	12220027 	beq	s1,v0,98c <spi_dma_irq+0x1ec> ! to 98c if s1==v0 w132
     8f0:	24020001 	li	v0,1        ! v0=1
984, 98c ---> from update w128 and w132
     8f4:	8e420080 	lw	v0,128(s2)  ! v0=spi_dev->w128
     8f8:	1040000c 	beqz	v0,92c <spi_dma_irq+0x18c> ! to 92c if !v0 (out)
     8fc:	8fbf0020 	lw	ra,32(sp)   ! restore ra
     900:	8e420084 	lw	v0,132(s2)  ! v0=spi_dev->w132
     904:	14400004 	bnez	v0,918 <spi_dma_irq+0x178> ! to 918 if v0 queuework
     908:	3c020000 	lui	v0,0x0      ! v0=text
			908: R_MIPS_HI16	.text
     90c:	92620030 	lbu	v0,48(s3)   ! v0=hcd_ctx->b48
     910:	14400006 	bnez	v0,92c <spi_dma_irq+0x18c> !to 92c if v0 (out)
     914:	3c020000 	lui	v0,0x0      ! v0=text
			914: R_MIPS_HI16	.text
904 ---> call queuework
     918:	02402021 	move	a0,s2         ! a0=s2
     91c:	24420770 	addiu	v0,v0,1904    ! QueueWork
			91c: R_MIPS_LO16	.text
//call QueueWork(spi_dev, ssicomplete_work);
     920:	0040f809 	jalr	v0
     924:	26450024 	addiu	a1,s2,36      ! a1=&s2[36]
     928:	8fbf0020 	lw	ra,32(sp)     ! restore ra
8b4, 910 --->  out 1
     92c:	8fb3001c 	lw	s3,28(sp)     ! restore s3
     930:	8fb20018 	lw	s2,24(sp)     ! restore s2
     934:	8fb10014 	lw	s1,20(sp)     ! restore s1
     938:	8fb00010 	lw	s0,16(sp)     ! restore s0
     93c:	24020001 	li	v0,1          ! v0=1
     940:	03e00008 	jr	ra	      ! return 1
     944:	27bd0028 	addiu	sp,sp,40      ! deallocate stack
8a4 --> printout
     948:	8e020000 	lw	v0,0(s0)      ! v0=s0[0]
     94c:	2403fffd 	li	v1,-3         ! v1=-3
     950:	00431024 	and	v0,v0,v1      ! v0=v0&v1
     954:	ae020000 	sw	v0,0(s0)      ! s0[0]=v0
     958:	3c040000 	lui	a0,0x0        ! a0=LC7
			958: R_MIPS_HI16	$LC7
     95c:	3c050000 	lui	a1,0x0        ! a1=.rodata
			95c: R_MIPS_HI16	.rodata
     960:	3c020000 	lui	v0,0x0        ! v0=printk
			960: R_MIPS_HI16	printk
     964:	24840000 	addiu	a0,a0,0       ! a0=LC7
			964: R_MIPS_LO16	$LC7
     968:	24420000 	addiu	v0,v0,0       ! v0=printk
			968: R_MIPS_LO16	printk
// printk("Colman: %s TC\n", __FUNC__)
     96c:	0040f809 	jalr	v0
     970:	24a5002c 	addiu	a1,a1,44      ! a1=func
			970: R_MIPS_LO16	.rodata
     974:	0800022b 	j	8ac <spi_dma_irq+0x10c> to 8ac
			974: R_MIPS_26	.text
     978:	00000000 	nop
7c4 --->
     97c:	080001f3 	j	7cc <spi_dma_irq+0x2c> ! to 7cc
			97c: R_MIPS_26	.text
     980:	2482ffe3 	addiu	v0,a0,-29              ! v0=a0-29
8e0 ---> update w128
     984:	0800023d 	j	8f4 <spi_dma_irq+0x154>! to 8f4
			984: R_MIPS_26	.text
     988:	ae420080 	sw	v0,128(s2)             ! v0=spi_dev->w128
8ec ---> update w132
     98c:	0800023d 	j	8f4 <spi_dma_irq+0x154>! to 8f4
			98c: R_MIPS_26	.text
     990:	ae420084 	sw	v0,132(s2)  !spi_dev->w132=v0

00000994 <HW_QueueDeferredCompletion>:
HW_QueueDeferredCompletion():
     994:	27bdffe8 	addiu	sp,sp,-24  ! allocate 24 bytes on stack
     998:	afbf0010 	sw	ra,16(sp)  ! save ra
     99c:	8c840040 	lw	a0,64(a0)  ! a0=a0[64]
     9a0:	3c020000 	lui	v0,0x0     ! v0=text
			9a0: R_MIPS_HI16	.text
     9a4:	24420770 	addiu	v0,v0,1904 ! v0=QueueWork
			9a4: R_MIPS_LO16	.text
// QueueWork(a0,a0+52)
     9a8:	0040f809 	jalr	v0
     9ac:	24850034 	addiu	a1,a0,52
     9b0:	8fbf0010 	lw	ra,16(sp)  ! restore ra
     9b4:	00001021 	move	v0,zero    ! v0 =0
     9b8:	03e00008 	jr	ra         ! return 0
     9bc:	27bd0018 	addiu	sp,sp,24   ! dealloc stack

000009c0 <TimerTimeout>:
TimerTimeout():
     9c0:	90820019 	lbu	v0,25(a0)    ! v0=a0[25].b
     9c4:	10400003 	beqz	v0,9d4 <TimerTimeout+0x14> ! to 94d if not v0
     9c8:	a0800018 	sb	zero,24(a0)  ! a0[24]=0.b
     9cc:	03e00008 	jr	ra	     ! return v0
     9d0:	00000000 	nop
     9d4:	8c85001c 	lw	a1,28(a0)    ! a1=a0[28]
     9d8:	3c190000 	lui	t9,0x0       ! t9 hcdtier
			9d8: R_MIPS_HI16	HcdTimerCallback
     9dc:	27390000 	addiu	t9,t9,0      ! t9= HcdTimerCallback
			9dc: R_MIPS_LO16	HcdTimerCallback
// call HcdTimerCallback(a0[32],a0[28])
     9e0:	03200008 	jr	t9
     9e4:	8c840020 	lw	a0,32(a0)

000009e8 <hcd_ssicomplete_wqueue_handler>:
hcd_ssicomplete_wqueue_handler():
     9e8:	27bdffe8 	addiu	sp,sp,-24 ! allocate 24 bytes
     9ec:	afb00010 	sw	s0,16(sp) ! save s0
     9f0:	afbf0014 	sw	ra,20(sp) ! save ra
     9f4:	2490ffdc 	addiu	s0,a0,-36 ! s0=arg-36=spi_dev
     9f8:	8e03007c 	lw	v1,124(s0)! v1=spi_dev->w124
     9fc:	10600016 	beqz	v1,a58 <hcd_ssicomplete_wqueue_handler+0x70> to a58 if w124==0
     a00:	8e080020 	lw	t0,32(s0) ! t0=spi_dev->pHcd_ctx
     a04:	91020030 	lbu	v0,48(t0) ! v0=pHcd_ctx->b48
     a08:	14400044 	bnez	v0,b1c <hcd_ssicomplete_wqueue_handler+0x134> ! to b1c if v0!=0
     a0c:	00000000 	nop
     a10:	8e050088 	lw	a1,136(s0) ! a1=spi_dev->pDmaDescriptorBuffer
     a14:	18600010 	blez	v1,a58 <hcd_ssicomplete_wqueue_handler+0x70> to a58 if w124 <=0
     a18:	8e040078 	lw	a0,120(s0) !a0=spi_dev->w120
     a1c:	3c02b004 	lui	v0,0xb004  !v0=0xb004
     a20:	00a42021 	addu	a0,a1,a0   !a0=a0+a1
     a24:	34463000 	ori	a2,v0,0x3000!a0=0xb0043000 SSIDR
     a28:	3445300c 	ori	a1,v0,0x300c!a1=0xb004300c SSISR
a34, a50 ---->
!! while    a2c:	8ca20000 	lw	v0,0(a1)   !v0=SSISR
!! tff    a30:	30420020 	andi	v0,v0,0x20 ! v0=TFF
!!     a34:	1440fffd 	bnez	v0,a2c <hcd_ssicomplete_wqueue_handler+0x44> to a2c if TFF Transmit-Fifo full
!!     a38:	00000000 	nop
!
!! move    a3c:	94830000 	lhu	v1,0(a0)  ! pDmaDescriptorBuffer[w120]
!! buf data    a40:	24840002 	addiu	a0,a0,2   ! a0=a0+2
!! to    a44:	acc30000 	sw	v1,0(a2)  ! SSIDR=v1
!! TFIFO    a48:	8e02007c 	lw	v0,124(s0)! v0=spi_dev->w124
!!     a4c:	2442fffe 	addiu	v0,v0,-2  ! v0=v0-2
!!     a50:	1c40fff6 	bgtz	v0,a2c <hcd_ssicomplete_wqueue_handler+0x44> ! to a2c if v0 > 0
!!     a54:	ae02007c 	sw	v0,124(s0)! spi_dev->w124=v0

9fc, a14, a68, b20, b84, bc8 --->
!     a58:	3c03b004 	lui	v1,0xb004 ! v1=0xb004
!     a5c:	3463300c 	ori	v1,v1,0x300c ! v1= SSISR
!     a60:	8c620000 	lw	v0,0(v1)  ! v0=SSISR
!     a64:	30420080 	andi	v0,v0,0x80 ! v0=END
!     a68:	1040fffb 	beqz	v0,a58 <hcd_ssicomplete_wqueue_handler+0x70> to a58 if not END
!     a6c:	00000000 	nop
     a70:	00602021 	move	a0,v1  ! a0=&SSISR
bd0 --->
     a74:	3c0300ff 	lui	v1,0xff! v1=0x00ff0000
!a80 ---> while TFIFO-NUM
!     a78:	8c820000 	lw	v0,0(a0)! v0=SSISR
!     a7c:	00431024 	and	v0,v0,v1 ! v0=TFIFO-NUM
!     a80:	1440fffd 	bnez	v0,a78 <hcd_ssicomplete_wqueue_handler+0x90> to a78 if TFIFO-NUM
     a84:	00000000 	nop
     a88:	2403fffd 	li	v1,-3    ! v1=-3
     a8c:	ac830000 	sw	v1,0(a0) ! SSISR=~UNDER

// while busy; do usleep(10)
     a90:	8c820000 	lw	v0,0(a0) ! v0=SSISR
     a94:	30420040 	andi	v0,v0,0x40! v0=BUSY
     a98:	1040000f 	beqz	v0,ad8 <hcd_ssicomplete_wqueue_handler+0xf0> ! to ad8 if ! BUSY
     a9c:	3c020000 	lui	v0,0x0
			a9c: R_MIPS_HI16	cpu_data
     aa0:	8c440000 	lw	a0,0(v0)
			aa0: R_MIPS_LO16	cpu_data
!     aa4:	3c030041 	lui	v1,0x41
     aa8:	3c02b004 	lui	v0,0xb004
!     aac:	3465893a 	ori	a1,v1,0x893a
     ab0:	3446300c 	ori	a2,v0,0x300c  ! a2=&SSISR
ad0 --->
!     ab4:	00a40019 	multu	a1,a0
!     ab8:	00001010 	mfhi	v0
!     abc:	00000000 	nop
// usleep
!     ac0:	1440ffff 	bnez	v0,ac0 <hcd_ssicomplete_wqueue_handler+0xd8>
!     ac4:	2442ffff 	addiu	v0,v0,-1

     ac8:	8cc30000 	lw	v1,0(a2)      ! v1=SSISR
     acc:	30630040 	andi	v1,v1,0x40    ! v1=BUSY
     ad0:	1460fff8 	bnez	v1,ab4 <hcd_ssicomplete_wqueue_handler+0xcc> ! to ab4 if BUSY
     ad4:	00000000 	nop
a98 ---->
     ad8:	91020030 	lbu	v0,48(t0)     ! v0=hcd_ctx->b48
     adc:	10400006 	beqz	v0,af8 <hcd_ssicomplete_wqueue_handler+0x110> ! to af8 if hcd_ctx->b48
     ae0:	3c020000 	lui	v0,0x0 ! v0 memcpy
			ae0: R_MIPS_HI16	memcpy
     ae4:	8d06002c 	lw	a2,44(t0) ! a2=hcd_ctx->w44  , len
     ae8:	8d040028 	lw	a0,40(t0) ! a0=hcd_ctx->w40  , dst
     aec:	24420000 	addiu	v0,v0,0   ! v0=memcpy
			aec: R_MIPS_LO16	memcpy
// call memcpy(hcd_ctx->w40, spi_dev->pDmaCommonBuffer,hcd_ctx->w44)
     af0:	0040f809 	jalr	v0
     af4:	8e050090 	lw	a1,144(s0) !                 , src

adc ---->  hdcdmacompetion and out
     af8:	ae000064 	sw	zero,100(s0) !spi_dev->w100=0
     afc:	8e040020 	lw	a0,32(s0)    ! a0=pHcd_ctx
     b00:	3c190000 	lui	t9,0x0       ! t9=HcdDmaCompletion
			b00: R_MIPS_HI16	HcdDmaCompletion
     b04:	8fbf0014 	lw	ra,20(sp)    ! restore ra
     b08:	8fb00010 	lw	s0,16(sp)    ! restore s0
     b0c:	00002821 	move	a1,zero      ! a1=0
     b10:	27390000 	addiu	t9,t9,0      ! t9=HcdDmaCompletion
			b10: R_MIPS_LO16	HcdDmaCompletion
// HcdDmaCompletion(spi_dev->pHcd_ctx, 0)
     b14:	03200008 	jr	t9
     b18:	27bd0018 	addiu	sp,sp,24     ! dealloc stack

a08 ---->
     b1c:	8e050090 	lw	a1,144(s0)   ! a1=pDmaCommonBuffer
     b20:	1860ffcd 	blez	v1,a58 <hcd_ssicomplete_wqueue_handler+0x70> ! to a58 if w124 <= 0
     b24:	8e040078 	lw	a0,120(s0)   ! a0=spi_dev->w120
     b28:	3c02b004 	lui	v0,0xb004    ! v0=0xb0040000
     b2c:	00a43021 	addu	a2,a1,a0     ! a2=pDmaCommonBUffer->+w120
     b30:	34473000 	ori	a3,v0,0x3000 ! a3=&SSIDR
     b34:	00002821 	move	a1,zero      ! a1=0
     b38:	3444300c 	ori	a0,v0,0x300c ! a0=&SSISR
     b3c:	3409ffff 	li	t1,0xffff    ! t1=0xffff
b48, b7c ---->
!!     b40:	8c820000 	lw	v0,0(a0)     ! v0=SSISR
!!     b44:	30420020 	andi	v0,v0,0x20   ! v0=TFF
!!     b48:	1440fffd 	bnez	v0,b40 <hcd_ssicomplete_wqueue_handler+0x158>// to b40 if TFF
!     b4c:	00000000 	nop
!     b50:	ace90000 	sw	t1,0(a3)     ! t1=SSIDR
!     b54:	8c820000 	lw	v0,0(a0)     ! v0=SSISR
!     b58:	3042ff00 	andi	v0,v0,0xff00 ! v0=RFIFO-NUM
!!     b5c:	10400005 	beqz	v0,b74 <hcd_ssicomplete_wqueue_handler+0x18c> // to b74 not RFIFO-NUM
!!     b60:	24a50001 	addiu	a1,a1,1      ! a1=a1+1
!!     b64:	8ce20000 	lw	v0,0(a3)     ! v0=SSIDR
!!     b68:	24a5ffff 	addiu	a1,a1,-1     ! a1=a1-1
!!     b6c:	a4c20000 	sh	v0,0(a2)     ! v0=pDmaCommonBuf+w120
!!     b70:	24c60002 	addiu	a2,a2,2      ! a2=a2+2 dmaCommb ptr
b5c --->
!!!     b74:	8e02007c 	lw	v0,124(s0)   ! v0=spi_dev->w124
! !    b78:	2443fffe 	addiu	v1,v0,-2     ! v1=v0-2
! !    b7c:	1c60fff0 	bgtz	v1,b40 <hcd_ssicomplete_wqueue_handler+0x158> to b40 if v1>0
! !    b80:	ae03007c 	sw	v1,124(s0)   !w124=v1
     b84:	18a0ffb4 	blez	a1,a58 <hcd_ssicomplete_wqueue_handler+0x70> to a58 if a1<=0
     b88:	3c02b004 	lui	v0,0xb004    ! v0=b0040000
     b8c:	3443300c 	ori	v1,v0,0x300c ! v1=&SSISR
     b90:	00e02021 	move	a0,a3	     ! a0=&SSIDR
b9c, bb0 --->
!!    b94:	8c620000 	lw	v0,0(v1)     ! v0=SSISR
!!    b98:	3042ff00 	andi	v0,v0,0xff00 ! v0=rfifo_num
!!    b9c:	1040fffd 	beqz	v0,b94 <hcd_ssicomplete_wqueue_handler+0x1ac>  ! to b94 if ! rfifo_num
!     ba0:	00000000 	nop

!     ba4:	8c820000 	lw	v0,0(a0)   ! v0=SSIDR
!     ba8:	24a5ffff 	addiu	a1,a1,-1   ! a1=a1-1
!     bac:	a4c20000 	sh	v0,0(a2)   ! pdmacommon+w122=SSIDR
!     bb0:	14a0fff8 	bnez	a1,b94 <hcd_ssicomplete_wqueue_handler+0x1ac> ! to b94 if a1
     bb4:	24c60002 	addiu	a2,a2,2    !a2=a2+2

!     bb8:	3c03b004 	lui	v1,0xb004  !  v1=0xb0040000
!     bbc:	3463300c 	ori	v1,v1,0x300c ! v1=&SSISR
!     bc0:	8c620000 	lw	v0,0(v1)     ! v0=SSISR
!     bc4:	30420080 	andi	v0,v0,0x80   ! v0=END
!     bc8:	1040ffa3 	beqz	v0,a58 <hcd_ssicomplete_wqueue_handler+0x70> ! to a58 if not  END
!     bcc:	00000000 	nop
     bd0:	0800029d 	j	a74 <hcd_ssicomplete_wqueue_handler+0x8c> ! to a74
			bd0: R_MIPS_26	.text
     bd4:	00602021 	move	a0,v1 ! a0=v1

00000bd8 <hcd_dmacomplete_wqueue_handler>:
hcd_dmacomplete_wqueue_handler():
     bd8:	2484ffac 	addiu	a0,a0,-84  ! a0=a0-84
     bdc:	8c850064 	lw	a1,100(a0) ! a1=a0->100
     be0:	3c190000 	lui	t9,0x0
			be0: R_MIPS_HI16	HcdDmaCompletion
     be4:	27390000 	addiu	t9,t9,0
			be4: R_MIPS_LO16	HcdDmaCompletion
 HcdDmaCompletion(hcd_context *, int)
     be8:	03200008 	jr	t9
     bec:	8c840020 	lw	a0,32(a0)

00000bf0 <hcd_procirq_wqueue_handler>:
hcd_procirq_wqueue_handler():
     bf0:	3c190000 	lui	t9,0x0
			bf0: R_MIPS_HI16	HcdSpiInterrupt
     bf4:	27390000 	addiu	t9,t9,0
			bf4: R_MIPS_LO16	HcdSpiInterrupt
     bf8:	03200008 	jr	t9
     bfc:	8c84ffdc 	lw	a0,-36(a0)

00000c00 <deinit_hardware>:
deinit_hardware():
     c00:	27bdffe8 	addiu	sp,sp,-24 ! allocate 24 bytes
     c04:	afb00010 	sw	s0,16(sp) ! save s0
     c08:	afbf0014 	sw	ra,20(sp) ! save ra
     c0c:	00808021 	move	s0,a0     ! s0=arg0
     c10:	8c840070 	lw	a0,112(a0)! a0=spi_dev->TxDmaChannel
     c14:	04800004 	bltz	a0,c28 <deinit_hardware+0x28> !to c28 if <0
     c18:	3c020000 	lui	v0,0x0    ! v0=.text
			c18: R_MIPS_HI16	jz_free_dma
     c1c:	24420000 	addiu	v0,v0,0   ! v0=jz_free_dma
			c1c: R_MIPS_LO16	jz_free_dma
	// jz_free_dma(TxDmaChannel)
     c20:	0040f809 	jalr	v0
     c24:	00000000 	nop
     c28:	8e040074 	lw	a0,116(s0) ! a0=spi_dev->RxDmaChannel
     c2c:	04800004 	bltz	a0,c40 <deinit_hardware+0x40> !to c40 if <0
     c30:	3c020000 	lui	v0,0x0
			c30: R_MIPS_HI16	jz_free_dma
     c34:	24420000 	addiu	v0,v0,0
			c34: R_MIPS_LO16	jz_free_dma
      // jz_free_dma(RxDmaChannel)
     c38:	0040f809 	jalr	v0
     c3c:	00000000 	nop
     c40:	8e020088 	lw	v0,136(s0) ! v0=pDmaDescriptorBuffer
     c44:	1040000b 	beqz	v0,c74 <deinit_hardware+0x74> ! to c74 if =0
     c48:	3c048000 	lui	a0,0x8000 ! a0=0x80000000
     c4c:	00442021 	addu	a0,v0,a0  ! a0=pDmaDescriptorBuffer+a0
     c50:	3c020000 	lui	v0,0x0    ! v0=&mem_map
			c50: R_MIPS_HI16	mem_map
     c54:	8c430000 	lw	v1,0(v0)  ! v1=mem_map
			c54: R_MIPS_LO16	mem_map
     c58:	00042302 	srl	a0,a0,0xc ! a0=a0>12
     c5c:	00042140 	sll	a0,a0,0x5 ! a0=a0<5
     c60:	3c020000 	lui	v0,0x0    ! v0=.text
			c60: R_MIPS_HI16	__free_pages
     c64:	00832021 	addu	a0,a0,v1  ! a0=a0+mem_map
     c68:	24420000 	addiu	v0,v0,0   ! v0=__free_pages
			c68: R_MIPS_LO16	__free_pages
     // __free_pages(a0,0)
     c6c:	0040f809 	jalr	v0
     c70:	00002821 	move	a1,zero
     c74:	8e020090 	lw	v0,144(s0) ! v0=pDmaCommonBuffer
     c78:	1040000b 	beqz	v0,ca8 <deinit_hardware+0xa8> !to ca8 if =0
     c7c:	3c048000 	lui	a0,0x8000  ! a0=0x80000000
     c80:	00442021 	addu	a0,v0,a0   ! a0=v0+a0
     c84:	3c020000 	lui	v0,0x0     ! v0=&mem_map
			c84: R_MIPS_HI16	mem_map
     c88:	8c430000 	lw	v1,0(v0)   ! v1=mem_map
			c88: R_MIPS_LO16	mem_map
     c8c:	00042302 	srl	a0,a0,0xc  ! a0=a0>>12
     c90:	00042140 	sll	a0,a0,0x5  ! a0=a0<<5
     c94:	3c020000 	lui	v0,0x0     ! v0=.text
			c94: R_MIPS_HI16	__free_pages
     c98:	00832021 	addu	a0,a0,v1   ! a0=a0+v1
     c9c:	24420000 	addiu	v0,v0,0    ! v0=__free_pages
			c9c: R_MIPS_LO16	__free_pages
     //__free_pages(a0,0)
     ca0:	0040f809 	jalr	v0
     ca4:	00002821 	move	a1,zero
     ca8:	92020068 	lbu	v0,104(s0) ! v0=b104
     cac:	30420008 	andi	v0,v0,0x8  ! v0=v0&8
     cb0:	14400004 	bnez	v0,cc4 <deinit_hardware+0xc4> ! to cc4 if v0
     cb4:	8fbf0014 	lw	ra,20(sp)  ! restore ra
     cb8:	8fb00010 	lw	s0,16(sp)  ! restore s0
     cbc:	03e00008 	jr	ra	   ! return
     cc0:	27bd0018 	addiu	sp,sp,24   ! dealloc stack
     cc4:	3c190000 	lui	t9,0x0     ! t9=.text
			cc4: R_MIPS_HI16	free_irq
     cc8:	02002821 	move	a1,s0      ! a1=spi_dev
     ccc:	8fb00010 	lw	s0,16(sp)  ! restore s0
     cd0:	240400c2 	li	a0,194     ! a0=194
     cd4:	27390000 	addiu	t9,t9,0    ! t9=free_irq
			cd4: R_MIPS_LO16	free_irq
	// free_irq(194,spi_dev);
     cd8:	03200008 	jr	t9
     cdc:	27bd0018 	addiu	sp,sp,24  ! dealloc stack

00000ce0 <remove_driver>:
remove_driver():
     ce0:	27bdffe0 	addiu	sp,sp,-32  ! alloc 32 bytes on stack
     ce4:	3c020000 	lui	v0,0x0     ! v0=.bss
			ce4: R_MIPS_HI16	.bss
     ce8:	afb20018 	sw	s2,24(sp)  ! save s2
     cec:	afb10014 	sw	s1,20(sp)  ! save s1
     cf0:	afb00010 	sw	s0,16(sp)  ! save s0
     cf4:	24510004 	addiu	s1,v0,4    ! s1=.bss[4]
			cf4: R_MIPS_LO16	.bss
     cf8:	afbf001c 	sw	ra,28(sp)  ! save ra
     cfc:	92230068 	lbu	v1,104(s1) ! v1=spi_dev->b104
     d00:	3c120000 	lui	s2,0x0     ! s2=.data
			d00: R_MIPS_HI16	.data
     d04:	30620020 	andi	v0,v1,0x20 ! v0=v1&0x20
     d08:	24050002 	li	a1,2	   ! a1=2
     d0c:	26440050 	addiu	a0,s2,80   ! a0=&data[80]
			d0c: R_MIPS_LO16	.data
     d10:	14400023 	bnez	v0,da0 <remove_driver+0xc0> !to da0 if v0
     d14:	3c100000 	lui	s0,0x0     ! s0=.data
			d14: R_MIPS_HI16	.data
dd4 --->
     d18:	30620040 	andi	v0,v1,0x40 ! v0=v1&0x40
     d1c:	1440000f 	bnez	v0,d5c <remove_driver+0x7c> ! to d5c if v0
     d20:	2604000c 	addiu	a0,s0,12   ! a0=&.data[12]
			d20: R_MIPS_LO16	.data
     d24:	3c100000 	lui	s0,0x0     ! s0=.data
			d24: R_MIPS_HI16	.data
     d28:	2602000c 	addiu	v0,s0,12   ! v0=.data[12]
			d28: R_MIPS_LO16	.data
     d2c:	3c030000 	lui	v1,0x0     ! v1=&deinit_hardware
			d2c: R_MIPS_HI16	deinit_hardware
     d30:	24630000 	addiu	v1,v1,0    ! v1=&deinit_hardware
			d30: R_MIPS_LO16	deinit_hardware
	// deinit_hardware(hcd_ctx->pDev);
     d34:	0060f809 	jalr	v1
     d38:	8c440040 	lw	a0,64(v0)
     d3c:	3c190000 	lui	t9,0x0  ! t9=&module_power_off
			d3c: R_MIPS_HI16	module_power_off
     d40:	8fbf001c 	lw	ra,28(sp) ! restore ra
     d44:	8fb20018 	lw	s2,24(sp) ! restore s2
     d48:	8fb10014 	lw	s1,20(sp) ! restore s1
     d4c:	8fb00010 	lw	s0,16(sp) ! restore s0
     d50:	27390000 	addiu	t9,t9,0   ! t9=&module_power_off
			d50: R_MIPS_LO16	module_power_off
	// return via module_power_off
     d54:	03200008 	jr	t9
     d58:	27bd0020 	addiu	sp,sp,32  ! dealloc stack
d20 --->
     d5c:	3c020000 	lui	v0,0x0 ! v0=&HcdDeinitialize
			d5c: R_MIPS_HI16	HcdDeinitialize
     d60:	24420000 	addiu	v0,v0,0 ! v0=&HcdDeinitialize
			d60: R_MIPS_LO16	HcdDeinitialize
	// HcdDeinitialize(&data[12]);
     d64:	0040f809 	jalr	v0
     d68:	00000000 	nop
     d6c:	2602000c 	addiu	v0,s0,12 ! v0=&.data[12]
			d6c: R_MIPS_LO16	.data
     d70:	3c030000 	lui	v1,0x0
			d70: R_MIPS_HI16	deinit_hardware
     d74:	24630000 	addiu	v1,v1,0
			d74: R_MIPS_LO16	deinit_hardware
	// deinit_hardware(hcd_context->pDev);
     d78:	0060f809 	jalr	v1
     d7c:	8c440040 	lw	a0,64(v0)
     d80:	3c190000 	lui	t9,0x0
			d80: R_MIPS_HI16	module_power_off
     d84:	8fbf001c 	lw	ra,28(sp) ! restore ra
     d88:	8fb20018 	lw	s2,24(sp) ! restore s2
     d8c:	8fb10014 	lw	s1,20(sp) ! restore s1
     d90:	8fb00010 	lw	s0,16(sp) ! restore s0
     d94:	27390000 	addiu	t9,t9,0   ! t0=&module_power_off
			d94: R_MIPS_LO16	module_power_off
	// return via module_power_off
     d98:	03200008 	jr	t9
     d9c:	27bd0020 	addiu	sp,sp,32
d10 --->
     da0:	3c020000 	lui	v0,0x0  ! v0=&SDIO_HandleHcdEvent
			da0: R_MIPS_HI16	SDIO_HandleHcdEvent
     da4:	24420000 	addiu	v0,v0,0 ! v0=&SDIO_HandleHcdEvent
			da4: R_MIPS_LO16	SDIO_HandleHcdEvent
	// SDIO_HandleHcdEvent(&data[80], EVENT_HCD_DETACH)
     da8:	0040f809 	jalr	v0
     dac:	00000000 	nop
     db0:	3c030000 	lui	v1,0x0 ! v1=&flush_scheduled_work
			db0: R_MIPS_HI16	flush_scheduled_work
     db4:	24630000 	addiu	v1,v1,0 ! v1=&flush_scheduled_work
			db4: R_MIPS_LO16	flush_scheduled_work
	// flush_scheduled_work
     db8:	0060f809 	jalr	v1
     dbc:	00000000 	nop
     dc0:	3c020000 	lui	v0,0x0
			dc0: R_MIPS_HI16	SDIO_UnregisterHostController
     dc4:	24420000 	addiu	v0,v0,0
			dc4: R_MIPS_LO16	SDIO_UnregisterHostController
	// SDIO_UnregisterHostController(&data[80]);
     dc8:	0040f809 	jalr	v0
     dcc:	26440050 	addiu	a0,s2,80
			dcc: R_MIPS_LO16	.data
     dd0:	08000346 	j	d18 <remove_driver+0x38> to d18 v1=b104
			dd0: R_MIPS_26	.text
     dd4:	92230068 	lbu	v1,104(s1)

00000dd8 <HW_StartTimer>:
HW_StartTimer():
     dd8:	27bdffe0 	addiu	sp,sp,-32 ! allocate 32b on stack
     ddc:	afb10014 	sw	s1,20(sp) ! save s1
     de0:	afbf0018 	sw	ra,24(sp) ! save ra
     de4:	afb00010 	sw	s0,16(sp) ! save s0
     de8:	8c900040 	lw	s0,64(a0) ! s0=a0->pDev
     dec:	00c08821 	move	s1,a2     ! s1=a2
     df0:	92020018 	lbu	v0,24(s0) ! v0=pDev->b24
     df4:	10400006 	beqz	v0,e10 <HW_StartTimer+0x38> ! to e10 if !v0
     df8:	00a02021 	move	a0,a1     ! a0=a1
     dfc:	8fbf0018 	lw	ra,24(sp) ! restore ra
     e00:	8fb10014 	lw	s1,20(sp) ! restore s1
     e04:	8fb00010 	lw	s0,16(sp) ! restore s0
     e08:	03e00008 	jr	ra        ! return
     e0c:	27bd0020 	addiu	sp,sp,32  ! dealloc stack
     e10:	3c020000 	lui	v0,0x0    ! v0=.text
			e10: R_MIPS_HI16	msecs_to_jiffies
     e14:	24420000 	addiu	v0,v0,0   ! v0=msecs_to_jiffies
			e14: R_MIPS_LO16	msecs_to_jiffies
	// msecs_to_jiffies(arg1);
     e18:	0040f809 	jalr	v0
     e1c:	00000000 	nop
     e20:	3c030000 	lui	v1,0x0    ! v1=jiffies
			e20: R_MIPS_HI16	jiffies
     e24:	8c650000 	lw	a1,0(v1)  ! a1=jiffies
			e24: R_MIPS_LO16	jiffies
     e28:	8e030000 	lw	v1,0(s0)  ! v1=spi_dev->spi_timer
     e2c:	24040001 	li	a0,1      ! a0=1
     e30:	00451021 	addu	v0,v0,a1  ! v0=nr_jiffies+jiffies
     e34:	a2040018 	sb	a0,24(s0) ! spi_dev->b24=1
     e38:	ae11001c 	sw	s1,28(s0) ! spi_dev->w28=a2
     e3c:	a2000019 	sb	zero,25(s0)! spi_dev->b25=0
     e40:	02002021 	move	a0,s0     ! a0=spi_dev
     e44:	ae020008 	sw	v0,8(s0)  ! spi_dev->timerxxx=timeout
     e48:	0003182b 	sltu	v1,zero,v1! v1=1 if v1>0
     e4c:	00038036 	tne	zero,v1,0x200 ! trap if v1!=0
     e50:	3c190000 	lui	t9,0x0    ! t9=.text
			e50: R_MIPS_HI16	__mod_timer
     e54:	8e050008 	lw	a1,8(s0)  ! a1=spi_dev->timerxx
     e58:	8fbf0018 	lw	ra,24(sp) ! restore ra
     e5c:	8fb10014 	lw	s1,20(sp) ! restore s1
     e60:	8fb00010 	lw	s0,16(sp) ! restore s0
     e64:	27390000 	addiu	t9,t9,0   ! t9=__mod_timer
			e64: R_MIPS_LO16	__mod_timer
	// __mod_timer(spi_dev,timerxx) and return;
     e68:	03200008 	jr	t9
     e6c:	27bd0020 	addiu	sp,sp,32

00000e70 <HW_StopDMATransfer>:
HW_StopDMATransfer():
     e70:	27bdffe0 	addiu	sp,sp,-32 ! allocate 32 bytes on stack
     e74:	afbf0018 	sw	ra,24(sp) ! save ra
     e78:	afb10014 	sw	s1,20(sp) ! save s1
     e7c:	afb00010 	sw	s0,16(sp) ! save s0
     e80:	8c900040 	lw	s0,64(a0) ! s0=a0[64]
     e84:	3c050000 	lui	a1,0x0    ! a1=.rodata
			e84: R_MIPS_HI16	.rodata
     e88:	3c040000 	lui	a0,0x0    ! a0=lc2
			e88: R_MIPS_HI16	$LC2
     e8c:	3c020000 	lui	v0,0x0    ! v0=.text
			e8c: R_MIPS_HI16	printk
     e90:	24840000 	addiu	a0,a0,0   ! a0=LC2
			e90: R_MIPS_LO16	$LC2
     e94:	24420000 	addiu	v0,v0,0   ! v0=printk
			e94: R_MIPS_LO16	printk
       // printk("Enter %s,  to be done\n", __FUNCTION__)
     e98:	0040f809 	jalr	v0
     e9c:	24a50074 	addiu	a1,a1,116
			e9c: R_MIPS_LO16	.rodata
     ea0:	3c020000 	lui	v0,0x0    ! v0=.text
			ea0: R_MIPS_HI16	disable_dma
     ea4:	24510000 	addiu	s1,v0,0   ! v0=&disable_dma
			ea4: R_MIPS_LO16	disable_dma
	// disable_dma(spi_dev->TxDmaChannel)
     ea8:	0220f809 	jalr	s1
     eac:	8e040070 	lw	a0,112(s0)
     eb0:	8e040074 	lw	a0,116(s0)  ! RxDmaChannel
     eb4:	0220c821 	move	t9,s1       ! t9=disable_dma
     eb8:	8fbf0018 	lw	ra,24(sp)   ! restore ra
     ebc:	8fb10014 	lw	s1,20(sp)   ! restore s1
     ec0:	8fb00010 	lw	s0,16(sp)   ! restore s0
	// disable_dma(spi_dev->RxDmaChannel)
     ec4:	03200008 	jr	t9          ! call t9
     ec8:	27bd0020 	addiu	sp,sp,32

00000ecc <HW_EnableDisableSPIIRQ>:
HW_EnableDisableSPIIRQ():
     ecc:	27bdffe0 	addiu	sp,sp,-32 ! allocate 32 bytes on stack
     ed0:	afb10014 	sw	s1,20(sp) ! save s1
     ed4:	afbf0018 	sw	ra,24(sp) ! save ra
     ed8:	afb00010 	sw	s0,16(sp) ! save s0
     edc:	30d100ff 	andi	s1,a2,0xff ! s1=a2&0xff
     ee0:	30a500ff 	andi	a1,a1,0xff ! a1=a1&0xff
     ee4:	12200027 	beqz	s1,f84 <HW_EnableDisableSPIIRQ+0xb8> ! to f84 (irq off)if s1==0
     ee8:	8c840040 	lw	a0,64(a0)  ! a0=hcd_ctx->pDev;
     eec:	00008021 	move	s0,zero    ! s0=0
fb0 --->
     ef0:	10a0001b 	beqz	a1,f60 <HW_EnableDisableSPIIRQ+0x94> ! to f60 if a1==0
     ef4:	00000000 	nop
     ef8:	90820069 	lbu	v0,105(a0) ! v0=spi_dev->b105
     efc:	1040002d 	beqz	v0,fb4 <HW_EnableDisableSPIIRQ+0xe8> ! to fb4 if v0==0
     f00:	24020001 	li	v0,1                                 ! v0=1
f68, f80, fcc --->
     f04:	16200012 	bnez	s1,f50 <HW_EnableDisableSPIIRQ+0x84> ! to f50 if s1!=0
     f08:	8fbf0018 	lw	ra,24(sp) ! restore ra
	// local_irq_restore()
     f0c:	40016000 	mfc0	at,c0_status
     f10:	32100001 	andi	s0,s0,0x1
     f14:	3421001f 	ori	at,at,0x1f
     f18:	3821001f 	xori	at,at,0x1f
     f1c:	02018025 	or	s0,s0,at
     f20:	40906000 	mtc0	s0,c0_status
     f24:	00000040 	ssnop
     f28:	00000040 	ssnop
     f2c:	00000040 	ssnop
     f30:	000000c0 	sll	zero,zero,0x3
	//  dec_preempt_count()
     f34:	8f830014 	lw	v1,20(gp)
     f38:	2463ffff 	addiu	v1,v1,-1
     f3c:	af830014 	sw	v1,20(gp)
     f40:	8f830008 	lw	v1,8(gp)
     f44:	30630004 	andi	v1,v1,0x4
     f48:	14600021 	bnez	v1,fd0 <HW_EnableDisableSPIIRQ+0x104> ! to fd0 if v1
     f4c:	8fbf0018 	lw	ra,24(sp) ! restore ra
f08 --->
     f50:	8fb10014 	lw	s1,20(sp) ! restore s1
     f54:	8fb00010 	lw	s0,16(sp) ! restore s0
     f58:	03e00008 	jr	ra	 ! restore
     f5c:	27bd0020 	addiu	sp,sp,32 ! dealloc stack
ef4 --->
     f60:	90820069 	lbu	v0,105(a0)  ! spi_dev->b105
     f64:	1040ffe7 	beqz	v0,f04 <HW_EnableDisableSPIIRQ+0x38> ! to f04 not b105
     f68:	3c020000 	lui	v0,0x0
			f68: R_MIPS_HI16	disable_irq
     f6c:	a0800069 	sb	zero,105(a0) ! spi_dev->b105=0
     f70:	24420000 	addiu	v0,v0,0 ! v0=disable_irq
			f70: R_MIPS_LO16	disable_irq
	// disable_irq(194)
     f74:	0040f809 	jalr	v0
     f78:	240400c2 	li	a0,194
     f7c:	080003c1 	j	f04 <HW_EnableDisableSPIIRQ+0x38> ! to f04
			f7c: R_MIPS_26	.text
     f80:	00000000 	nop
ee8 --->
         // local_irq_disable()
     f84:	40106000 	mfc0	s0,c0_status
     f88:	3601001f 	ori	at,s0,0x1f
     f8c:	3821001f 	xori	at,at,0x1f
     f90:	40816000 	mtc0	at,c0_status
     f94:	00000040 	ssnop
     f98:	00000040 	ssnop
     f9c:	00000040 	ssnop
     fa0:	000000c0 	sll	zero,zero,0x3
        // preempt_disable()
     fa4:	8f820014 	lw	v0,20(gp)
     fa8:	24420001 	addiu	v0,v0,1
     fac:	080003bc 	j	ef0 <HW_EnableDisableSPIIRQ+0x24> to ef0
			fac: R_MIPS_26	.text
     fb0:	af820014 	sw	v0,20(gp)

f00 --->
     fb4:	a0820069 	sb	v0,105(a0) ! spi_dev->b105=v0
     fb8:	3c020000 	lui	v0,0x0
			fb8: R_MIPS_HI16	enable_irq
     fbc:	24420000 	addiu	v0,v0,0
			fbc: R_MIPS_LO16	enable_irq
	// enable_irq(194);
     fc0:	0040f809 	jalr	v0
     fc4:	240400c2 	li	a0,194
     fc8:	080003c1 	j	f04 <HW_EnableDisableSPIIRQ+0x38> ! to f04
			fc8: R_MIPS_26	.text
     fcc:	00000000 	nop
f48 --->
     fd0:	3c190000 	lui	t9,0x0  ! t9=.text
			fd0: R_MIPS_HI16	preempt_schedule
     fd4:	8fb10014 	lw	s1,20(sp) ! restore s1
     fd8:	8fb00010 	lw	s0,16(sp) ! restore s0
     fdc:	27390000 	addiu	t9,t9,0   ! t9=preempt_schedule
			fdc: R_MIPS_LO16	preempt_schedule
     fe0:	03200008 	jr	t9
     fe4:	27bd0020 	addiu	sp,sp,32 ! dealloc stack

00000fe8 <hcd_spi_irq>:
hcd_spi_irq():
     fe8:	27bdffe8 	addiu	sp,sp,-24 ! allocate 24 byte
     fec:	afbf0014 	sw	ra,20(sp) ! save ra
     ff0:	afb00010 	sw	s0,16(sp) ! save s0
     ff4:	8ca40020 	lw	a0,32(a1) ! a0=spi_dev->pHcd_ctx
     ff8:	3c020000 	lui	v0,0x0    ! v0=.text
			ff8: R_MIPS_HI16	HW_EnableDisableSPIIRQ
     ffc:	00a08021 	move	s0,a1     ! s0=a1
    1000:	24060001 	li	a2,1      ! a2=1
    1004:	24420000 	addiu	v0,v0,0   ! v0=HW_EnableDisableSPIIRQ
			1004: R_MIPS_LO16	HW_EnableDisableSPIIRQ
	// HW_EnableDisableSPIIRQ(spi_dev->pHcd_ctx,0,1);
    1008:	0040f809 	jalr	v0
    100c:	00002821 	move	a1,zero   ! a1=0
    1010:	3c020000 	lui	v0,0x0    ! v0=.text
			1010: R_MIPS_HI16	.text
    1014:	02002021 	move	a0,s0     ! a0=spi_dev
    1018:	24420770 	addiu	v0,v0,1904 ! a0=QueueWork
			1018: R_MIPS_LO16	.text
	// QueueWork(spi_dev,&spi_dev->procirq_work);
    101c:	0040f809 	jalr	v0
    1020:	26050044 	addiu	a1,s0,68
    1024:	8fbf0014 	lw	ra,20(sp) ! restore ra
    1028:	8fb00010 	lw	s0,16(sp) ! restore s0
    102c:	24020001 	li	v0,1      ! v0=1
    1030:	03e00008 	jr	ra        ! return 1
    1034:	27bd0018 	addiu	sp,sp,24  ! dealloc stack

00001038 <HW_StopTimer>:
HW_StopTimer():
    1038:	27bdffe8 	addiu	sp,sp,-24  ! allocate 24 bytes
    103c:	afbf0014 	sw	ra,20(sp)  ! save ra
    1040:	afb00010 	sw	s0,16(sp)  ! save s0
    1044:	8c900040 	lw	s0,64(a0)  ! s0=hcd_ctx->pDev
	// local_irq_save(flags)
    1048:	40046000 	mfc0	a0,c0_status
    104c:	3481001f 	ori	at,a0,0x1f
    1050:	3821001f 	xori	at,at,0x1f
    1054:	40816000 	mtc0	at,c0_status
    1058:	00000040 	ssnop
    105c:	00000040 	ssnop
    1060:	00000040 	ssnop
    1064:	000000c0 	sll	zero,zero,0x3
	// inc_preempt_count
    1068:	8f830014 	lw	v1,20(gp)
    106c:	24630001 	addiu	v1,v1,1
    1070:	af830014 	sw	v1,20(gp)

    1074:	92020018 	lbu	v0,24(s0)  ! v0=spi_dev->b24
    1078:	1040001b 	beqz	v0,10e8 <HW_StopTimer+0xb0> ! to 10e8 if !v0
    107c:	24020001 	li	v0,1		! v0=1
    1080:	a2020019 	sb	v0,25(s0)	! spi_dev->b25=1
    1084:	a2000018 	sb	zero,24(s0)     ! spi_dev->b24=0
	// local_irq_restore(flags)
    1088:	40016000 	mfc0	at,c0_status
    108c:	30840001 	andi	a0,a0,0x1
    1090:	3421001f 	ori	at,at,0x1f
    1094:	3821001f 	xori	at,at,0x1f
    1098:	00812025 	or	a0,a0,at
    109c:	40846000 	mtc0	a0,c0_status
    10a0:	00000040 	ssnop
    10a4:	00000040 	ssnop
    10a8:	00000040 	ssnop
    10ac:	000000c0 	sll	zero,zero,0x3
	// dec_preempt_count()
    10b0:	8f830014 	lw	v1,20(gp)
    10b4:	2463ffff 	addiu	v1,v1,-1
    10b8:	af830014 	sw	v1,20(gp)
	// preempt_check_resched()
    10bc:	8f830008 	lw	v1,8(gp)
    10c0:	30630004 	andi	v1,v1,0x4
    10c4:	1460001c 	bnez	v1,1138 <HW_StopTimer+0x100> ! to 1138 if v1
    10c8:	3c020000 	lui	v0,0x0  !v0=.text
			10c8: R_MIPS_HI16	preempt_schedule
    10cc:	3c190000 	lui	t9,0x0
			10cc: R_MIPS_HI16	del_timer
1148 --->
    10d0:	02002021 	move	a0,s0     ! a0=spi_dev
    10d4:	8fbf0014 	lw	ra,20(sp) ! restore ra
    10d8:	8fb00010 	lw	s0,16(sp) ! restore s0
    10dc:	27390000 	addiu	t9,t9,0   ! t9=del_timer
			10dc: R_MIPS_LO16	del_timer
	// del_timer(&spi_dev->spi_timer); and return
    10e0:	03200008 	jr	t9
    10e4:	27bd0018 	addiu	sp,sp,24  ! dealloc stack
107c --->
	// local_irq_restore(flags);
    10e8:	40016000 	mfc0	at,c0_status
    10ec:	30840001 	andi	a0,a0,0x1
    10f0:	3421001f 	ori	at,at,0x1f
    10f4:	3821001f 	xori	at,at,0x1f
    10f8:	00812025 	or	a0,a0,at
    10fc:	40846000 	mtc0	a0,c0_status
    1100:	00000040 	ssnop
    1104:	00000040 	ssnop
    1108:	00000040 	ssnop
    110c:	000000c0 	sll	zero,zero,0x3
	// dec_preempt_count()
    1110:	8f830014 	lw	v1,20(gp)
    1114:	2463ffff 	addiu	v1,v1,-1
    1118:	af830014 	sw	v1,20(gp)
	// preempt_check_resched()
    111c:	8f830008 	lw	v1,8(gp)
    1120:	30630004 	andi	v1,v1,0x4
    1124:	14600009 	bnez	v1,114c <HW_StopTimer+0x114> ! to 114c if v1
    1128:	8fbf0014 	lw	ra,20(sp) ! restore ra
    112c:	8fb00010 	lw	s0,16(sp) ! restore s0
    1130:	03e00008 	jr	ra        ! return
    1134:	27bd0018 	addiu	sp,sp,24  ! deallocate stack
10c8 --->
    1138:	24420000 	addiu	v0,v0,0
			1138: R_MIPS_LO16	preempt_schedule
	// preempt_schedule
    113c:	0040f809 	jalr	v0
    1140:	00000000 	nop

    1144:	08000434 	j	10d0 <HW_StopTimer+0x98>
			1144: R_MIPS_26	.text
    1148:	3c190000 	lui	t9,0x0 ! t9=.text
			1148: R_MIPS_HI16	del_timer
1128 --->
    114c:	3c190000 	lui	t9,0x0
			114c: R_MIPS_HI16	preempt_schedule
    1150:	8fb00010 	lw	s0,16(sp) ! restore s0
    1154:	27390000 	addiu	t9,t9,0
			1154: R_MIPS_LO16	preempt_schedule
	// return preempt_schedule
    1158:	03200008 	jr	t9
    115c:	27bd0018 	addiu	sp,sp,24 ! deallocate stack

00001160 <HW_StartDMA>:
HW_StartDMA():
    1160:	27bdffc8 	addiu	sp,sp,-56 ! alloc 56 bytes on stack
    1164:	3c02b004 	lui	v0,0xb004 ! v0=0xb0040000
    1168:	afbf0034 	sw	ra,52(sp) ! save ra
    116c:	afb60030 	sw	s6,48(sp) ! save s6
    1170:	afb5002c 	sw	s5,44(sp) ! save s5
    1174:	afb40028 	sw	s4,40(sp) ! save s4
    1178:	afb30024 	sw	s3,36(sp) ! save s3
    117c:	afb20020 	sw	s2,32(sp) ! save s2
    1180:	afb1001c 	sw	s1,28(sp) ! save s1
    1184:	afb00018 	sw	s0,24(sp) ! save s0
    1188:	3446300c 	ori	a2,v0,0x300c ! a2=&SSISR
    118c:	8cc30000 	lw	v1,0(a2)  ! v1=SSISR
    1190:	00804021 	move	t0,a0     ! t0=hcd_ctx
    1194:	30630040 	andi	v1,v1,0x40! v1=SSISR&SSISR_BUSY
    1198:	8c960040 	lw	s6,64(a0) ! s6=hcd_ctx->pDev
    119c:	8c930028 	lw	s3,40(a0) ! s3=hcd_ctx->w40
 >  11a0:	1060000d 	beqz	v1,11d8 <HW_StartDMA+0x78> ! to 11d8 if !busy
    11a4:	8c87002c 	lw	a3,44(a0) ! a3=hcd_ctx->w44
   // udelay(10) ??
    11a8:	3c020000 	lui	v0,0x0
			11a8: R_MIPS_HI16	cpu_data
    11ac:	3c030041 	lui	v1,0x41
    11b0:	8c440000 	lw	a0,0(v0)
			11b0: R_MIPS_LO16	cpu_data
    11b4:	3465893a 	ori	a1,v1,0x893a
11d4 --->
    11b8:	00a40019 	multu	a1,a0
    11bc:	00001010 	mfhi	v0
>   11c0:	1440ffff 	bnez	v0,11c0 <HW_StartDMA+0x60>
    11c4:	2442ffff 	addiu	v0,v0,-1
    11c8:	8cc30000 	lw	v1,0(a2) ! v1=SSISR
    11cc:	30630040 	andi	v1,v1,0x40 !v1=SSISR&SSISR_BUSY
>   11d0:	1460fff9 	bnez	v1,11b8 <HW_StartDMA+0x58> ! to 11b8 if busy
    11d4:	00000000 	nop
11a4 --->
    11d8:	3c04b004 	lui	a0,0xb004     ! a0=b0040000
    11dc:	34853004 	ori	a1,a0,0x3004  ! a1=b0043004
    11e0:	94a30000 	lhu	v1,0(a1)      ! v1=SSICR0
    11e4:	3484300c 	ori	a0,a0,0x300c  ! a0=&SSISR
    11e8:	3063ffff 	andi	v1,v1,0xffff  ! v1=v1&0xffff
    11ec:	34630002 	ori	v1,v1,0x2     ! v1=v1|2
    11f0:	a4a30000 	sh	v1,0(a1)      ! SSICR0=v1(RFLUSH)
    11f4:	94a20000 	lhu	v0,0(a1)      ! v0=SSICR0
    11f8:	3042ffff 	andi	v0,v0,0xffff  ! v0=v0&0xffff
    11fc:	34420004 	ori	v0,v0,0x4     ! v0=v0|4
    1200:	a4a20000 	sh	v0,0(a1)      ! SSICR0=v0(TFLUSH)
    1204:	8c830000 	lw	v1,0(a0)      ! v1=SSISR
    1208:	2402fffc 	li	v0,-4         ! v0=0xfffc
    120c:	00621824 	and	v1,v1,v0      ! v1=v1&0xfffc
    1210:	ac830000 	sw	v1,0(a0)      ! SSISR="Clear UNDR and OVER"
    1214:	94a20000 	lhu	v0,0(a1)      ! v0=SSICR0
    1218:	3042afff 	andi	v0,v0,0xafff  ! v0=v0&0xafff
    121c:	a4a20000 	sh	v0,0(a1)      ! SSICR0=!TIE and ! TEIE
    1220:	94a30000 	lhu	v1,0(a1)      ! v1=SSICR0
    1224:	3063d7ff 	andi	v1,v1,0xd7ff  ! v1=v1&0xd7ff
    1228:	a4a30000 	sh	v1,0(a1)      ! SSICR0=!RIE and !REIE
    122c:	91020030 	lbu	v0,48(t0)     ! v0=hcd_ctx->b48
>   1230:	1040004c 	beqz	v0,1364 <HW_StartDMA+0x204> ! to 1364 if ! v0
    1234:	94a30000 	lhu	v1,0(a1)      ! v1=SSICR0
    1238:	94a20000 	lhu	v0,0(a1)      ! v0=SSICR0
    123c:	3042fffe 	andi	v0,v0,0xfffe  ! v0=v0&0xfffe
    1240:	a4a20000 	sh	v0,0(a1)      ! SSICR0=!DISREV
    1244:	8ec40074 	lw	a0,116(s6)    ! a0=spi_dev->RxDmaCHannel
>   1248:	04800004 	bltz	a0,125c <HW_StartDMA+0xfc> !to 125c if<0
    124c:	00000000 	nop
    1250:	8ec20078 	lw	v0,120(s6)    ! v0=spi_dev->w120
>   1254:	144000c1 	bnez	v0,155c <HW_StartDMA+0x3fc> !to 155c if !=0 enable dma and out
    1258:	3c020000 	lui	v0,0x0        ! v0=.text
			1258: R_MIPS_HI16	enable_dma
1248 --->
    125c:	afa00010 	sw	zero,16(sp)   ! sp[16]=0
>   1260:	18e0001f 	blez	a3,12e0 <HW_StartDMA+0x180> !to 12e0 if w44 <=0
    1264:	3c02b004 	lui	v0,0xb004     ! v0=0xb0040000
    1268:	3446300c 	ori	a2,v0,0x300c  ! a2=&SSISR
    126c:	34453000 	ori	a1,v0,0x3000  ! a1=&SSIDR
    1270:	3408ffff 	li	t0,0xffff     ! t0=0xffff
    1274:	00c02021 	move	a0,a2         ! a0=&SSISR
12d8 --->
    1278:	8fa20010 	lw	v0,16(sp)     ! v0=sp[16]
    127c:	28420010 	slti	v0,v0,16      ! v0=1 if v0<16
>   1280:	1040000b 	beqz	v0,12b0 <HW_StartDMA+0x150> ! to 12b0 if v0=0
    1284:	00000000 	nop
    1288:	00c01821 	move	v1,a2         ! v1=&SSISR
1294 --->
    128c:	8c620000 	lw	v0,0(v1)      ! v1=SSISR
    1290:	30420020 	andi	v0,v0,0x20    ! v0=SSISR&TFF
>   1294:	1440fffd 	bnez	v0,128c <HW_StartDMA+0x12c> !to 128c if transmitt fifo full
    1298:	00000000 	nop
    129c:	aca80000 	sw	t0,0(a1)      ! t0=SSIDR
    12a0:	8fa20010 	lw	v0,16(sp)     ! v0=sp[16]
    12a4:	24e7fffe 	addiu	a3,a3,-2      ! a3=a3-2  ! value of w44-=2
    12a8:	24420001 	addiu	v0,v0,1       ! v0(sp[16])+=1
    12ac:	afa20010 	sw	v0,16(sp)     ! sp[16]=v0
1280 --->
    12b0:	8c820000 	lw	v0,0(a0)      ! v0=SSISR
    12b4:	3042ff00 	andi	v0,v0,0xff00  ! v0=SSISR->RFIFO-NUM
>   12b8:	10400007 	beqz	v0,12d8 <HW_StartDMA+0x178> ! to 12d8 if rfifo-num==0
    12bc:	00000000 	nop		      !
    12c0:	8ca30000 	lw	v1,0(a1)      ! v1=SSIDR
    12c4:	a6630000 	sh	v1,0(s3)      ! *w40=v1
    12c8:	8fa20010 	lw	v0,16(sp)     ! v0=sp[16]
    12cc:	26730002 	addiu	s3,s3,2	      ! w40+=2
    12d0:	2442ffff 	addiu	v0,v0,-1      ! v0-=1
    12d4:	afa20010 	sw	v0,16(sp)     ! sp[16]=v0
12b8 --->
>   12d8:	1ce0ffe7 	bgtz	a3,1278 <HW_StartDMA+0x118> ! to 1278 if w44>0
    12dc:	00000000 	nop
1260 --->
    12e0:	8fa20010 	lw	v0,16(sp)     ! v0=sp[16]
>   12e4:	18400038 	blez	v0,13c8 <HW_StartDMA+0x268> ! to 13c8 if v0<=0
    12e8:	3c03b004 	lui	v1,0xb004     ! v1=0xb0040000
    12ec:	3c020000 	lui	v0,0x0	      ! v0=.text
			12ec: R_MIPS_HI16	printk
    12f0:	24540000 	addiu	s4,v0,0       ! s4=printk
			12f0: R_MIPS_LO16	printk
    12f4:	34753000 	ori	s5,v1,0x3000  ! s5=SSIDR
    12f8:	3472300c 	ori	s2,v1,0x300c  ! s2=SSISR
    12fc:	3c110000 	lui	s1,0x0        ! s1=LC13
			12fc: R_MIPS_HI16	$LC13
    1300:	2410752f 	li	s0,29999      ! s0=29999
1318, 1360 --->
    1304:	8e420000 	lw	v0,0(s2)      ! v0=SSISR
    1308:	26240000 	addiu	a0,s1,0       ! a0=LC13
			1308: R_MIPS_LO16	$LC13
    130c:	3042ff00 	andi	v0,v0,0xff00  ! v0=RFIFO_NUM
>   1310:	1440000a 	bnez	v0,133c <HW_StartDMA+0x1dc> ! to 133c if RFIFO_NUM
    1314:	2610ffff 	addiu	s0,s0,-1      ! s0-=1
1338 --->
>   1318:	1600fffa 	bnez	s0,1304 <HW_StartDMA+0x1a4> ! to 1304 if s0
    131c:	00000000 	nop
	// printk("Colman: Wait for SSI RX FIF0 Timeout!\n");
    1320:	0280f809 	jalr	s4            ! call printk
    1324:	00000000 	nop
    1328:	8e420000 	lw	v0,0(s2)      ! v0=SSISR
    132c:	26240000 	addiu	a0,s1,0       ! a0=LC13
			132c: R_MIPS_LO16	$LC13
    1330:	3042ff00 	andi	v0,v0,0xff00  ! v0=SSISR->RFIFO_NUM
>   1334:	1040fff8 	beqz	v0,1318 <HW_StartDMA+0x1b8> ! to 1318 if !v0
    1338:	2610ffff 	addiu	s0,s0,-1      ! s0-=1
1310 --->
    133c:	8ea20000 	lw	v0,0(s5)      ! v0=SSIDR
    1340:	a6620000 	sh	v0,0(s3)      ! *w40=v0
    1344:	8fa30010 	lw	v1,16(sp)     ! v1=sp[16]
    1348:	2463ffff 	addiu	v1,v1,-1      ! v1-=1
    134c:	afa30010 	sw	v1,16(sp)     ! sp[16]=v1
    1350:	8fa20010 	lw	v0,16(sp)     ! v0=sp[16]
>   1354:	1840001c 	blez	v0,13c8 <HW_StartDMA+0x268> ! to 13c8 if v0<=0
    1358:	26730002 	addiu	s3,s3,2	      ! w40+=2
>   135c:	080004c1 	j	1304 <HW_StartDMA+0x1a4>    ! to 1304
			135c: R_MIPS_26	.text
    1360:	2410752f 	li	s0,29999      ! s0=29999
=============================================================================
1234 --->
    1364:	94a20000 	lhu	v0,0(a1)      ! v0=SSICR0
    1368:	3042ffff 	andi	v0,v0,0xffff  ! v0=v0&0xffff
    136c:	34420001 	ori	v0,v0,0x1     ! v0=v0|1
    1370:	a4a20000 	sh	v0,0(a1)      ! SSICR0=DISREV
    1374:	8ec40070 	lw	a0,112(s6)    ! a0=TxDmaChannel
>   1378:	04800004 	bltz	a0,138c <HW_StartDMA+0x22c> ! 138c if a0<0
    137c:	00000000 	nop
    1380:	8ec20078 	lw	v0,120(s6)    ! v0=hcd_ctx->w120
>   1384:	1440006a 	bnez	v0,1530 <HW_StartDMA+0x3d0> ! to 1530 if v0
    1388:	3c190000 	lui	t9,0x0        ! t9=hi(enable_dma)
			1388: R_MIPS_HI16	enable_dma
1378 --->
>   138c:	18e0003c 	blez	a3,1480 <HW_StartDMA+0x320> ! to 1480 if w44<=0
    1390:	3c03b004 	lui	v1,0xb004                   ! v1=0xb0040000
    1394:	3c04b004 	lui	a0,0xb004                   ! a0=0xb0040000
13c4 --->
    1398:	3483300c 	ori	v1,a0,0x300c                ! v1=&SSISR
13a4 --->
    139c:	8c620000 	lw	v0,0(v1)                    ! v0=SSISR
    13a0:	30420020 	andi	v0,v0,0x20                  ! v0=SSISR&TFF
>   13a4:	1440fffd 	bnez	v0,139c <HW_StartDMA+0x23c> ! to 139c if transmit fifo full
    13a8:	34823000 	ori	v0,a0,0x3000                ! v0=SSIDR
    13ac:	96630000 	lhu	v1,0(s3)                    ! v1=*w40
    13b0:	24e7fffe 	addiu	a3,a3,-2	            ! a3-=2 (w44)
    13b4:	ac430000 	sw	v1,0(v0)                    ! SSIDR=*w40
>   13b8:	18e00030 	blez	a3,147c <HW_StartDMA+0x31c> ! to 147c if a3<=0
    13bc:	26730002 	addiu	s3,s3,2			    ! w40+=2
>   13c0:	080004e6 	j	1398 <HW_StartDMA+0x238>
			13c0: R_MIPS_26	.text
    13c4:	3c04b004 	lui	a0,0xb004		    ! a0=0xb0040000
===================================================================================
12e4, 13d8 --->
    13c8:	3c03b004 	lui	v1,0xb004                   ! v1=0xb0040000
    13cc:	3463300c 	ori	v1,v1,0x300c		    ! v1=&SSISR
    13d0:	8c620000 	lw	v0,0(v1)		    ! v0=SSISR
    13d4:	30420080 	andi	v0,v0,0x80		    ! v0=SSISR&END
>   13d8:	1040fffb 	beqz	v0,13c8 <HW_StartDMA+0x268> ! to 13c8 if !v0
    13dc:	00602021 	move	a0,v1			    ! a0=&SSISR
    13e0:	3c0300ff 	lui	v1,0xff			    ! v1=0x00ff0000
13ec --->
    13e4:	8c820000 	lw	v0,0(a0)		    ! v0=SSISR
    13e8:	00431024 	and	v0,v0,v1		    ! v0=SSISR&TFIFO-NUM
>   13ec:	1440fffd 	bnez	v0,13e4 <HW_StartDMA+0x284> ! to 13e4 if v0!=0
    13f0:	00000000 	nop
    13f4:	2403fffd 	li	v1,-3			    ! v1=0xfffd
    13f8:	ac830000 	sw	v1,0(a0)                    ! SSISR=~UNDR
    13fc:	8c820000 	lw	v0,0(a0)		    ! v0=SSISR
    1400:	30420040 	andi	v0,v0,0x40		    ! v0=SSISR&BUSY
>   1404:	1040000e 	beqz	v0,1440 <HW_StartDMA+0x2e0> ! to 1440 if not BUSY
     // While busy; usleep loop
    1408:	3c020000 	lui	v0,0x0
			1408: R_MIPS_HI16	cpu_data
    140c:	8c440000 	lw	a0,0(v0)
			140c: R_MIPS_LO16	cpu_data
    1410:	3c030041 	lui	v1,0x41
    1414:	3c02b004 	lui	v0,0xb004
    1418:	3465893a 	ori	a1,v1,0x893a
    141c:	3446300c 	ori	a2,v0,0x300c 		   ! a2=&SSISR
1438 --->
    1420:	00a40019 	multu	a1,a0
    1424:	00001010 	mfhi	v0
>   1428:	1440ffff 	bnez	v0,1428 <HW_StartDMA+0x2c8>
    142c:	2442ffff 	addiu	v0,v0,-1
    1430:	8cc30000 	lw	v1,0(a2)                   ! v1=SSISR
    1434:	30630040 	andi	v1,v1,0x40		   ! v1=SSISR&BUSY
>   1438:	1460fff9 	bnez	v1,1420 <HW_StartDMA+0x2c0>! to 1420 if busy
    143c:	00000000 	nop
1404, 14b8 --->
    1440:	aec00064 	sw	zero,100(s6)		   ! spi_dev->w100=0
    1444:	3c190000 	lui	t9,0x0			   ! t9=.text
			1444: R_MIPS_HI16	.text
    1448:	02c02021 	move	a0,s6			   ! a0=spi_dev
    144c:	26c50054 	addiu	a1,s6,84		   ! a1=&spi_dev->dmacomplete_work
    1450:	8fbf0034 	lw	ra,52(sp)		   ! restore ra
    1454:	8fb60030 	lw	s6,48(sp)                  ! restore s6
    1458:	8fb5002c 	lw	s5,44(sp)		   ! restore s5
    145c:	8fb40028 	lw	s4,40(sp)		   ! restore s4
    1460:	8fb30024 	lw	s3,36(sp)		   ! restore s3
    1464:	8fb20020 	lw	s2,32(sp) 		   ! restore s2
    1468:	8fb1001c 	lw	s1,28(sp)		   ! restore s1
    146c:	8fb00018 	lw	s0,24(sp)		   ! restore s0
    1470:	27390770 	addiu	t9,t9,1904		   ! t9=QueueWork
			1470: R_MIPS_LO16	.text
	// QueueWork(spi_dev, &spi_dev->dmacomplete_work)
    1474:	03200008 	jr	t9
    1478:	27bd0038 	addiu	sp,sp,56		   ! dealloc stack
===============================================================================
13b8, 148c --->
    147c:	3c03b004 	lui	v1,0xb004                  ! v1=0xb0040000
1390 --->
    1480:	3463300c 	ori	v1,v1,0x300c		   ! v1=&SSISR
    1484:	8c620000 	lw	v0,0(v1)		   ! v0=SSISR
    1488:	30420080 	andi	v0,v0,0x80		   ! V0=SSISR&END
>   148c:	1040fffb 	beqz	v0,147c <HW_StartDMA+0x31c>!to 147c if not END
    1490:	00602021 	move	a0,v1			   ! a0=&SSISR
    1494:	3c0300ff 	lui	v1,0xff			   ! v1=0x00ff0000
14a0 --->
    1498:	8c820000 	lw	v0,0(a0)		   ! v0=SSISR
    149c:	00431024 	and	v0,v0,v1		   ! v0=SSISR&TFIFO_NUM
>   14a0:	1440fffd 	bnez	v0,1498 <HW_StartDMA+0x338>! to 1498 if TFIFO_NUM
    14a4:	00000000 	nop
    14a8:	2403fffd 	li	v1,-3			   ! v1=0xfffd
    14ac:	ac830000 	sw	v1,0(a0)		   ! SSISR=~UNDER
    14b0:	8c820000 	lw	v0,0(a0)		   ! v0=SSISR
    14b4:	30420040 	andi	v0,v0,0x40		   ! v0=SSISR&BUSY
>   14b8:	1040ffe1 	beqz	v0,1440 <HW_StartDMA+0x2e0>! to 1440 if not BUSY
    14bc:	3c020000 	lui	v0,0x0
			14bc: R_MIPS_HI16	cpu_data
    14c0:	8c440000 	lw	a0,0(v0)		   !
			14c0: R_MIPS_LO16	cpu_data
    14c4:	3c030041 	lui	v1,0x41
    14c8:	3c02b004 	lui	v0,0xb004		   ! a0=0xb0040000
    14cc:	3465893a 	ori	a1,v1,0x893a
    14d0:	3446300c 	ori	a2,v0,0x300c		   ! a2=&SSISR
14f0 --->  // While BUSY do usleep
    14d4:	00a40019 	multu	a1,a0
    14d8:	00001010 	mfhi	v0
    14dc:	00000000 	nop
>   14e0:	1440ffff 	bnez	v0,14e0 <HW_StartDMA+0x380>
    14e4:	2442ffff 	addiu	v0,v0,-1
    14e8:	8cc30000 	lw	v1,0(a2)	           ! v1=SSISR&BUSY
    14ec:	30630040 	andi	v1,v1,0x40
>   14f0:	1460fff8 	bnez	v1,14d4 <HW_StartDMA+0x374>! to 14d4 if BUSY
    14f4:	3c190000 	lui	t9,0x0
			14f4: R_MIPS_HI16	.text
    14f8:	aec00064 	sw	zero,100(s6)		   ! spi_dev->w100=0
    14fc:	02c02021 	move	a0,s6			   ! a0=spi_dev
    1500:	26c50054 	addiu	a1,s6,84		   ! a1=&spi_dev->dmacomplete_work
    1504:	8fbf0034 	lw	ra,52(sp)		   ! restore ra
    1508:	8fb60030 	lw	s6,48(sp)		   ! restore s6
    150c:	8fb5002c 	lw	s5,44(sp)		   ! restore s5
    1510:	8fb40028 	lw	s4,40(sp)		   ! restore s4
    1514:	8fb30024 	lw	s3,36(sp)		   ! restore s3
    1518:	8fb20020 	lw	s2,32(sp)		   ! restore s2
    151c:	8fb1001c 	lw	s1,28(sp)		   ! restore s1
    1520:	8fb00018 	lw	s0,24(sp)		   ! restore s0
    1524:	27390770 	addiu	t9,t9,1904		   ! t9=QueueWork
			1524: R_MIPS_LO16	.text
	// QueueWork(spi_dev,&spi_dev->dmacomplete_work) and return
    1528:	03200008 	jr	t9			   !
    152c:	27bd0038 	addiu	sp,sp,56		   ! deallocate stack
===========================================================
1384 ---> out
    1530:	8fbf0034 	lw	ra,52(sp)		   ! restore ra
    1534:	8fb60030 	lw	s6,48(sp)		   ! restore s6
    1538:	8fb5002c 	lw	s5,44(sp)		   ! restore s5
    153c:	8fb40028 	lw	s4,40(sp)		   ! restore s4
    1540:	8fb30024 	lw	s3,36(sp)		   ! restore s3
    1544:	8fb20020 	lw	s2,32(sp)		   ! restore s2
    1548:	8fb1001c 	lw	s1,28(sp)		   ! restore s1
    154c:	8fb00018 	lw	s0,24(sp)		   ! restore s0
    1550:	27390000 	addiu	t9,t9,0			   ! t9=enable_dma
			1550: R_MIPS_LO16	enable_dma
	// enable_dma(spi_dev->TxDmaChannel) and out
    1554:	03200008 	jr	t9
    1558:	27bd0038 	addiu	sp,sp,56		   ! dealloc stack
==========================================================
1258 ---> out2
    155c:	24500000 	addiu	s0,v0,0			   ! s0=enable_dma
			155c: R_MIPS_LO16	enable_dma
	// enable_dma(spi_dev->RxDmaChannel)
    1560:	0200f809 	jalr	s0
    1564:	00000000 	nop
    1568:	8ec40070 	lw	a0,112(s6) 		! a0=spi_dev->TxDmaChannel
    156c:	0200c821 	move	t9,s0			! t9=enable_dma
    1570:	8fbf0034 	lw	ra,52(sp)		! restore ra
    1574:	8fb60030 	lw	s6,48(sp)		! restore s6
    1578:	8fb5002c 	lw	s5,44(sp)		! restore s5
    157c:	8fb40028 	lw	s4,40(sp)		! restore s4
    1580:	8fb30024 	lw	s3,36(sp)		! restore s3
    1584:	8fb20020 	lw	s2,32(sp)		! restore s2
    1588:	8fb1001c 	lw	s1,28(sp)		! restore s1
    158c:	8fb00018 	lw	s0,24(sp)		! restore s0
	enable_dma(spi_dev->TxDmaChannel) and return
    1590:	03200008 	jr	t9
    1594:	27bd0038 	addiu	sp,sp,56		! deallocate stack

00001598 <HW_InOut_Token>:
HW_InOut_Token():
    1598:	27bdffe8 	addiu	sp,sp,-24   ! alloc 24 bytes
    159c:	30c600ff 	andi	a2,a2,0xff  ! a2=a2&0xff
    15a0:	24020001 	li	v0,1	    ! v0=1
    15a4:	afbf0010 	sw	ra,16(sp)   ! save ra
    15a8:	00a04821 	move	t1,a1       ! t1=a1  (OutToken)
>   15ac:	14c20068 	bne	a2,v0,1750 <HW_InOut_Token+0x1b8> ! to 1750 if a2!=1
    15b0:	00e04021 	move	t0,a3       ! t0=a3  (InToken)
    15b4:	3c03b004 	lui	v1,0xb004   ! v1=0xb0040000
    15b8:	3466300c 	ori	a2,v1,0x300c! a2=0xb004300c
    15bc:	8cc20000 	lw	v0,0(a2)    ! v0=SSISR
    15c0:	30420040 	andi	v0,v0,0x40  ! v0=SSISR&BUSY
>   15c4:	1040000c 	beqz	v0,15f8 <HW_InOut_Token+0x60> ! to 15f8 if not BUSY
	// while(busy) udelay(100)
    15c8:	3c020000 	lui	v0,0x0
			15c8: R_MIPS_HI16	cpu_data
    15cc:	3c030041 	lui	v1,0x41
    15d0:	8c440000 	lw	a0,0(v0)
			15d0: R_MIPS_LO16	cpu_data
    15d4:	3465893a 	ori	a1,v1,0x893a ! a1=0x41893a
    15d8:	00a40019 	multu	a1,a0
    15dc:	00001010 	mfhi	v0
>   15e0:	1440ffff 	bnez	v0,15e0 <HW_InOut_Token+0x48>
    15e4:	2442ffff 	addiu	v0,v0,-1
    15e8:	8cc30000 	lw	v1,0(a2)    !v1=SSISR
    15ec:	30630040 	andi	v1,v1,0x40  !v1=SSISR&BUSY
>   15f0:	1460fff9 	bnez	v1,15d8 <HW_InOut_Token+0x40> !to 15d8 if busy
    15f4:	00000000 	nop
===============
15c4 --->
    15f8:	3c05b004 	lui	a1,0xb004    !a1=0xb0040000
    15fc:	34a43004 	ori	a0,a1,0x3004 !a0=0xb0043004
    1600:	94830000 	lhu	v1,0(a0)     !v1=SSICR0
    1604:	34a5300c 	ori	a1,a1,0x300c !a1=0xb004300c
    1608:	3063ffff 	andi	v1,v1,0xffff !v1=v1&0xffff
    160c:	34630002 	ori	v1,v1,0x2    !v1=v1|RFLUSH
    1610:	a4830000 	sh	v1,0(a0)     !SSICR0=v1
===
    1614:	94820000 	lhu	v0,0(a0)     !v0=SSICR0
    1618:	00a03021 	move	a2,a1        !a2=&SSISR
    161c:	3042ffff 	andi	v0,v0,0xffff !v0=SSICR0&0xffff
    1620:	34420004 	ori	v0,v0,0x4    !v0=SSICR0|TFLUSH
    1624:	a4820000 	sh	v0,0(a0)     !SSICR0=v0
===
    1628:	8ca30000 	lw	v1,0(a1)     !v1=SSISR
    162c:	2402fffc 	li	v0,-4        !v0=-4
    1630:	00621824 	and	v1,v1,v0     !v1=v1&~3
    1634:	aca30000 	sw	v1,0(a1)     !SSISR=v1 ! clear UNDR | OVER
===
    1638:	94820000 	lhu	v0,0(a0)     !v0=SSICR0
    163c:	3042afff 	andi	v0,v0,0xafff !v0=SSICR0&not TIE|TEIE
    1640:	a4820000 	sh	v0,0(a0)     !SSICR0=v0
==
    1644:	94830000 	lhu	v1,0(a0)     !v1=SSICR0
    1648:	3063d7ff 	andi	v1,v1,0xd7ff !v1=SSICR0&not RIE|REIE
    164c:	a4830000 	sh	v1,0(a0)     !SSICR0=v1
==
    1650:	94850000 	lhu	a1,0(a0)     !a1=SSICR0
    1654:	94820000 	lhu	v0,0(a0)     !v0=SSICR0
    1658:	3042fffe 	andi	v0,v0,0xfffe !v0=SSICR0&notDISERV
    165c:	a4820000 	sh	v0,0(a0)     !SSICR0=v0
1668 --->
    1660:	8cc20000 	lw	v0,0(a2)     !v0=SSISR
    1664:	30420020 	andi	v0,v0,0x20   !v0=SSISR&TFF
>   1668:	1440fffd 	bnez	v0,1660 <HW_InOut_Token+0xc8> ! to 1660 if v0
    166c:	3c02b004 	lui	v0,0xb004    !v0=0xb0040000
    1670:	34423000 	ori	v0,v0,0x3000 !v0=0xb0043000
    1674:	3c03b004 	lui	v1,0xb004    !v1=0xb0040000
    1678:	ac490000 	sw	t1,0(v0)     !t1=SSIDR  (outtoken)
    167c:	3463300c 	ori	v1,v1,0x300c !v1=&SSISR
1688 --->
    1680:	8c620000 	lw	v0,0(v1)     !v0=SSISR
    1684:	30420080 	andi	v0,v0,0x80   !v0=SSISR&END
>   1688:	1040fffd 	beqz	v0,1680 <HW_InOut_Token+0xe8> ! to 1680 if not END
    168c:	00000000 	nop
    1690:	3c03b004 	lui	v1,0xb004    !v1=0xb0040000
    1694:	3465300c 	ori	a1,v1,0x300c !a1=0xb004300c
16a0 --->
    1698:	8ca20000 	lw	v0,0(a1)     !v0=SSISR
    169c:	3042ff00 	andi	v0,v0,0xff00 !v0=SSISR&RFIFO_NUM
>   16a0:	1040fffd 	beqz	v0,1698 <HW_InOut_Token+0x100> ! to 1698 if not v0
    16a4:	34623000 	ori	v0,v1,0x3000 !v0=0xb0043000
    16a8:	2403fffd 	li	v1,-3        !v1=-3
    16ac:	8c440000 	lw	a0,0(v0)     !a0=SSIDR
    16b0:	aca30000 	sw	v1,0(a1)     !SSISR=-3
    16b4:	8ca20000 	lw	v0,0(a1)     !v0=SSISR
    16b8:	30420040 	andi	v0,v0,0x40   !v0=SSISR&BUSY
>   16bc:	10400010 	beqz	v0,1700 <HW_InOut_Token+0x168> ! to 1700 if not v0
    16c0:	3087ffff 	andi	a3,a0,0xffff !a3=SSIDR&0xffff
    16c4:	3c020000 	lui	v0,0x0       ! cpu_data
			16c4: R_MIPS_HI16	cpu_data
    16c8:	8c440000 	lw	a0,0(v0)
			16c8: R_MIPS_LO16	cpu_data
    16cc:	3c030041 	lui	v1,0x41
    16d0:	3c02b004 	lui	v0,0xb004
    16d4:	3465893a 	ori	a1,v1,0x893a !a1=0x41893a
    16d8:	3446300c 	ori	a2,v0,0x300c !a2=0xb004300c
16f8 --->
    16dc:	00a40019 	multu	a1,a0
    16e0:	00001010 	mfhi	v0
    16e4:	00000000 	nop
>   16e8:	1440ffff 	bnez	v0,16e8 <HW_InOut_Token+0x150>
    16ec:	2442ffff 	addiu	v0,v0,-1
    16f0:	8cc30000 	lw	v1,0(a2)      !v1=SSISR
    16f4:	30630040 	andi	v1,v1,0x40    !v1=SSISR&BUSY
>   16f8:	1460fff8 	bnez	v1,16dc <HW_InOut_Token+0x144> ! to 16dc if BUSY
    16fc:	00000000 	nop
16bc --->
>   1700:	11000002 	beqz	t0,170c <HW_InOut_Token+0x174> ! to 170c if not arg3
    1704:	3c030000 	lui	v1,0x0  !v1=hi(debuglevel)
			1704: R_MIPS_HI16	debuglevel
    1708:	ad070000 	sw	a3,0(t0) !arg3=SSIDR
1700 --->
    170c:	8c620000 	lw	v0,0(v1) !v0=debuglevel
			170c: R_MIPS_LO16	debuglevel
    1710:	28420008 	slti	v0,v0,8  !v0=1 if debuglevel<8
>   1714:	10400005 	beqz	v0,172c <HW_InOut_Token+0x194> ! to 172c if not v0
    1718:	3c020000 	lui	v0,0x0   !v0=hi(printk)
			1718: R_MIPS_HI16	printk
    171c:	00001021 	move	v0,zero     !v0=SUCCESS
1768 --->
    1720:	8fbf0010 	lw	ra,16(sp)   ! restore ra
    1724:	03e00008 	jr	ra          ! return
    1728:	27bd0018 	addiu	sp,sp,24    ! restore stack
============================================================
1718 --->
    172c:	3c040000 	lui	a0,0x0           !a0=hi(LC15)
			172c: R_MIPS_HI16	$LC15
    1730:	3c050000 	lui	a1,0x0           !a1=hi(rodata)
			1730: R_MIPS_HI16	.rodata
    1734:	24840000 	addiu	a0,a0,0          !a0=&LC15
			1734: R_MIPS_LO16	$LC15
    1738:	24a50038 	addiu	a1,a1,56         !a1=rodata[56]
			1738: R_MIPS_LO16	.rodata
    173c:	24420000 	addiu	v0,v0,0          !v0=printk
			173c: R_MIPS_LO16	printk
	// printk("Colman: %s: OutToken=%X InToken=%X",__FUNCTION__,OutToken,InToke);
    1740:	0040f809 	jalr	v0
    1744:	01203021 	move	a2,t1
>   1748:	080005c8 	j	1720 <HW_InOut_Token+0x188> ! to 1720 (out) 0
			1748: R_MIPS_26	.text
    174c:	00001021 	move	v0,zero
===========================================================
15ac --->
    1750:	3c040000 	lui	a0,0x0
			1750: R_MIPS_HI16	$LC14
    1754:	3c020000 	lui	v0,0x0
			1754: R_MIPS_HI16	printk
    1758:	24420000 	addiu	v0,v0,0
			1758: R_MIPS_LO16	printk
	// printk("AR6k only support 16-bit spi transfer\n");
    175c:	0040f809 	jalr	v0
    1760:	24840000 	addiu	a0,a0,0
			1760: R_MIPS_LO16	$LC14
>   1764:	080005c8 	j	1720 <HW_InOut_Token+0x188> ! to 1720 (out) -2
			1764: R_MIPS_26	.text
    1768:	2402fffe 	li	v0,-2

0000176c <HW_UsecDelay>:
HW_UsecDelay():
    176c:	3c020006 	lui	v0,0x6         !v0=0x60000
    1770:	34428db9 	ori	v0,v0,0x8db9   !v0=0x68db9
    1774:	3c030000 	lui	v1,0x0         !v1=hi(cpudata)
			1774: R_MIPS_HI16	cpu_data
    1778:	70a22802 	mul	a1,a1,v0       !a1=a1*v0
    177c:	8c620000 	lw	v0,0(v1)       !v0=cpu_data
			177c: R_MIPS_LO16	cpu_data
    1780:	00a20019 	multu	a1,v0          !a1=v0
    1784:	00002810 	mfhi	a1             !a1=hi
>   1788:	14a0ffff 	bnez	a1,1788 <HW_UsecDelay+0x1c>
    178c:	24a5ffff 	addiu	a1,a1,-1
    1790:	03e00008 	jr	ra             !return
    1794:	00000000 	nop

00001798 <HW_SpiSetUpDMA>:
HW_SpiSetUpDMA():
    1798:	27bdffc8 	addiu	sp,sp,-56 ! alloc 56 bytes
    179c:	afb3001c 	sw	s3,28(sp) ! save s3
    17a0:	afb10014 	sw	s1,20(sp) ! save s1
    17a4:	afb00010 	sw	s0,16(sp) ! save s0
    17a8:	afbf0034 	sw	ra,52(sp) ! save ra
    17ac:	afbe0030 	sw	s8,48(sp) ! save s8
    17b0:	afb7002c 	sw	s7,44(sp) ! save s7
    17b4:	afb60028 	sw	s6,40(sp) ! save s6
    17b8:	afb50024 	sw	s5,36(sp) ! save s5
    17bc:	afb40020 	sw	s4,32(sp) ! save s4
    17c0:	afb20018 	sw	s2,24(sp) ! save s2
    17c4:	8c92002c 	lw	s2,44(a0) ! s2=hcd_ctx->w44 (len)
    17c8:	3c020000 	lui	v0,0x0    ! v0=hi(get_dma_count)
			17c8: R_MIPS_HI16	get_dma_count
    17cc:	00808021 	move	s0,a0     ! s0=hcd_ctx
    17d0:	24420000 	addiu	v0,v0,0   ! v0=get_dma_count
			17d0: R_MIPS_LO16	get_dma_count
	// get_dma_count(len)
    17d4:	0040f809 	jalr	v0
    17d8:	02402021 	move	a0,s2     ! a0=len
    17dc:	8e110040 	lw	s1,64(s0) ! s1=hcd_ctx->pDev
    17e0:	00409821 	move	s3,v0     ! s3=dma_count
    17e4:	02421023 	subu	v0,s2,v0  ! v0=len-dma_count
    17e8:	8e050028 	lw	a1,40(s0) ! a1=hcd_ctx->w40 buf
    17ec:	ae22007c 	sw	v0,124(s1)! spi_dev->w124=v0
    17f0:	ae330078 	sw	s3,120(s1)! spi_dev->w120=dma_count
    17f4:	ae200084 	sw	zero,132(s1)!spi_dev->w132=0
    17f8:	ae200080 	sw	zero,128(s1)!spi_dev->w128=0
    17fc:	92030031 	lbu	v1,49(s0) ! v1=hcd_ctx->ub49
    1800:	24020001 	li	v0,1      ! v0=1
>   1804:	10620012 	beq	v1,v0,1850 <HW_SpiSetUpDMA+0xb8> ! to 1850 if v1=1
    1808:	3c040000 	lui	a0,0x0
			1808: R_MIPS_HI16	$LC14
    180c:	3c020000 	lui	v0,0x0
			180c: R_MIPS_HI16	printk
    1810:	24420000 	addiu	v0,v0,0
			1810: R_MIPS_LO16	printk
	// printk("AR6k only support 16-bit spi transfer\n");
    1814:	0040f809 	jalr	v0
    1818:	24840000 	addiu	a0,a0,0
			1818: R_MIPS_LO16	$LC14
    181c:	2402fffe 	li	v0,-2     ! v0=SDIO_INVALID_PARAMETER
19dc, 1aa0 --->
    1820:	8fbf0034 	lw	ra,52(sp) ! restore ra
    1824:	8fbe0030 	lw	s8,48(sp) ! restore s8
    1828:	8fb7002c 	lw	s7,44(sp) ! restore s7
    182c:	8fb60028 	lw	s6,40(sp) ! restore s6
    1830:	8fb50024 	lw	s5,36(sp) ! restore s5
    1834:	8fb40020 	lw	s4,32(sp) ! restore s4
    1838:	8fb3001c 	lw	s3,28(sp) ! restore s3
    183c:	8fb20018 	lw	s2,24(sp) ! restore s2
    1840:	8fb10014 	lw	s1,20(sp) ! restore s1
    1844:	8fb00010 	lw	s0,16(sp) ! restore s0
    1848:	03e00008 	jr	ra        ! restore ra
    184c:	27bd0038 	addiu	sp,sp,56  ! dealloc stack
====================================================================
1804 --->
    1850:	30a20001 	andi	v0,a1,0x1 ! v0=buf&1
>   1854:	144000a1 	bnez	v0,1adc <HW_SpiSetUpDMA+0x344> ! to 1adc if v0!=0 , miss aligned
    1858:	2e421001 	sltiu	v0,s2,4097                     ! v1=1 if s2 < 4097
>   185c:	104000b3 	beqz	v0,1b2c <HW_SpiSetUpDMA+0x394> ! to 1b2c if v0==0 , to large
    1860:	3c040000 	lui	a0,0x0                         !a0=hi(LC17)
			1860: R_MIPS_HI16	$LC17
>   1864:	12600091 	beqz	s3,1aac <HW_SpiSetUpDMA+0x314> !to 1aac if !s3 , out
    1868:	8fbf0034 	lw	ra,52(sp)                      ! restore ra
    186c:	92020030 	lbu	v0,48(s0)                      ! v0=hcd_ctx->b48
>   1870:	1040005b 	beqz	v0,19e0 <HW_SpiSetUpDMA+0x248> ! to 19e0 if !v0
    1874:	00000000 	nop
    1878:	8e220074 	lw	v0,116(s1)		       ! v0=spi_dev->RxDmaCHannel
>   187c:	0440008b 	bltz	v0,1aac <HW_SpiSetUpDMA+0x314> ! to 1aac if v0<0, out
    1880:	3c020000 	lui	v0,0x0			       ! v0=hi(disable_dma)
			1880: R_MIPS_HI16	disable_dma
    1884:	8e300070 	lw	s0,112(s1)		       ! s0=spi_dev->TxDmaChannel
    1888:	24420000 	addiu	v0,v0,0			       ! v0=disable_dma
			1888: R_MIPS_LO16	disable_dma
	// disable_dma(spi_dev->TxDmaChannel);
    188c:	0040f809 	jalr	v0
    1890:	02002021 	move	a0,s0
    1894:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_src_width)
			1894: R_MIPS_HI16	jz_set_dma_src_width
    1898:	02002021 	move	a0,s0			       ! a0=TxDmaChannel
    189c:	245e0000 	addiu	s8,v0,0			       ! s8=jz_set_dma_src_width
			189c: R_MIPS_LO16	jz_set_dma_src_width
	// jz_set_dma_src_with(TxDmaChannel,32);
    18a0:	03c0f809 	jalr	s8
    18a4:	24050020 	li	a1,32
    18a8:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_dest_width)
			18a8: R_MIPS_HI16	jz_set_dma_dest_width
    18ac:	02002021 	move	a0,s0			       ! a0=TxDmaChannel
    18b0:	24420000 	addiu	v0,v0,0			       ! v0=jz_set_dma_dest_width
			18b0: R_MIPS_LO16	jz_set_dma_dest_width
	// jz_set_dma_dest_width(TxDmaChannel,16);
    18b4:	0040f809 	jalr	v0
    18b8:	24050010 	li	a1,16
    18bc:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_block_size)
			18bc: R_MIPS_HI16	jz_set_dma_block_size
    18c0:	02002021 	move	a0,s0			       ! a0=TxDmaChannel
    18c4:	24570000 	addiu	s7,v0,0                        ! s7=jz_set_dma_block_size
			18c4: R_MIPS_LO16	jz_set_dma_block_size
	// jz_set_dma_block_size(TxDmaChannel, 16);
    18c8:	02e0f809 	jalr	s7
    18cc:	24050010 	li	a1,16
    18d0:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_mode)
			18d0: R_MIPS_HI16	set_dma_mode
    18d4:	02002021 	move	a0,s0			       ! a0=TxDmaChannel
    18d8:	24560000 	addiu	s6,v0,0                        ! s6=set_dma_mode
			18d8: R_MIPS_LO16	set_dma_mode
	// set_dma_mode(TxDmaChannel,1);
    18dc:	02c0f809 	jalr	s6
    18e0:	24050001 	li	a1,1
    18e4:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_addr)
			18e4: R_MIPS_HI16	set_dma_addr
    18e8:	3c051000 	lui	a1,0x1000                      ! a1=0x10000000
    18ec:	02002021 	move	a0,s0			       ! a0=TxDmaChannel
    18f0:	24540000 	addiu	s4,v0,0                        ! s4=set_dma_addr
			18f0: R_MIPS_LO16	set_dma_addr
	// set_dma_addr(TxDmaChannel, 0x10003034);
    18f4:	0280f809 	jalr	s4
    18f8:	34a53034 	ori	a1,a1,0x3034
    18fc:	2673000f 	addiu	s3,s3,15		       ! s3=s3+15 (s3=dma_count)
    1900:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_count)
			1900: R_MIPS_HI16	set_dma_count
    1904:	24550000 	addiu	s5,v0,0			       ! s5=set_dma_count
			1904: R_MIPS_LO16	set_dma_count
    1908:	02002021 	move	a0,s0			       ! a0=TxDmaCHannel
	// set_dma_count(TxDmaChannel,dma_count+15)
    190c:	02a0f809 	jalr	s5
    1910:	02602821 	move	a1,s3			       ! a1=dma_count+15
>   1914:	06000083 	bltz	s0,1b24 <HW_SpiSetUpDMA+0x38c> ! to 1b24 if TxDmaChannel < 0
    1918:	02001821 	move	v1,s0			       ! v1=s0
1b24 --->
    191c:	00031883 	sra	v1,v1,0x2		       ! v1=v1>>2
    1920:	00031880 	sll	v1,v1,0x2		       ! v1=v1<<2
    1924:	02031821 	addu	v1,s0,v1		       ! v1=s0+v1
    1928:	3c02b302 	lui	v0,0xb302		       ! v0=0xb3020000
    192c:	34420014 	ori	v0,v0,0x14		       ! v0=0xb3020014
    1930:	00031940 	sll	v1,v1,0x5                      ! v1=v1<<5
    1934:	00621821 	addu	v1,v1,v0                       ! v1=v1+v0
    1938:	8c640000 	lw	a0,0(v1)                       ! a0=DMA_command
    193c:	3c02ff7f 	lui	v0,0xff7f                      ! v0=0xff7f0000
    1940:	3442ffff 	ori	v0,v0,0xffff                   ! v0=0xff7fffff
    1944:	00822024 	and	a0,a0,v0                       ! a0=DMA_command&~SAI
    1948:	3c02b000 	lui	v0,0xb000                      ! v0=0xb0000000
    194c:	2405ffff 	li	a1,-1                          ! a1=-1
    1950:	34423034 	ori	v0,v0,0x3034                   ! v0=0xb0003034
    1954:	ac640000 	sw	a0,0(v1)                       ! DMA_command=a0
    1958:	3c030000 	lui	v1,0x0                         ! v1=hi(dma_cache_wback_inv)
			1958: R_MIPS_HI16	_dma_cache_wback_inv
    195c:	ac450000 	sw	a1,0(v0)                       ! HSPR=-1
    1960:	8c620000 	lw	v0,0(v1)                       ! v0=dma_cache_wback_inv
			1960: R_MIPS_LO16	_dma_cache_wback_inv
    1964:	8e240090 	lw	a0,144(s1)		       ! a0=spi_dev->pDmaCommonBuffer
	// dma_cache_wback_inv(spi_dev->pDmaCommonBuffer,len)
    1968:	0040f809 	jalr	v0
    196c:	02402821 	move	a1,s2			       ! a1=len
    1970:	8e300074 	lw	s0,116(s1)                     ! s0=spi_dev->RxDmaChannel
    1974:	3c020000 	lui	v0,0x0			       ! v0=hi(disable_dma)
			1974: R_MIPS_HI16	disable_dma
    1978:	24420000 	addiu	v0,v0,0			       ! v0=disable_dma
			1978: R_MIPS_LO16	disable_dma
    197c:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// disable_dma(RxDmaChannel)
    1980:	0040f809 	jalr	v0
    1984:	8e310094 	lw	s1,148(s1)		       ! s1=spi_dev->DmaCommonBufferPhys
    1988:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// jz_set_dma_src_width(RxDmaChannel,16)
    198c:	03c0f809 	jalr	s8
    1990:	24050010 	li	a1,16			       ! a1=16
    1994:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_dest_width)
			1994: R_MIPS_HI16	jz_set_dma_dest_width
    1998:	24420000 	addiu	v0,v0,0			       ! v0=jz_set_dma_dest_width
			1998: R_MIPS_LO16	jz_set_dma_dest_width
    199c:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// jz_set_dma_dest_width(RxDmaChannel,32)
    19a0:	0040f809 	jalr	v0
    19a4:	24050020 	li	a1,32			       ! a1=32
    19a8:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// jz_set_dma_block_size(RxDmaChannel,16)
    19ac:	02e0f809 	jalr	s7
    19b0:	24050010 	li	a1,16			       ! a1=16
    19b4:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// set_dma_mode(RxDmaChannel,0)
    19b8:	02c0f809 	jalr	s6
    19bc:	00002821 	move	a1,zero			       ! a1=0
    19c0:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// set_dma_addr(RxDmaChannel, spi_dev->DmaCommonBufferPhys);
    19c4:	0280f809 	jalr	s4
    19c8:	02202821 	move	a1,s1			       ! a1=spi_dev->DmaCommonBufferPhys
    19cc:	02002021 	move	a0,s0			       ! a0=RxDmaChannel
	// set_dma_count(RxDmaChannel, dma_count+15)
    19d0:	02a0f809 	jalr	s5
    19d4:	02602821 	move	a1,s3                          ! a1=dma_count+15
>   19d8:	08000608 	j	1820 <HW_SpiSetUpDMA+0x88>     ! to 1820
			19d8: R_MIPS_26	.text
    19dc:	24020003 	li	v0,3                           ! v0=SDIO_STATUS_PENDING
===================================================================
1870 --->
    19e0:	8e220070 	lw	v0,112(s1)		       ! v0=spi_dev->TxDmaChannel
>   19e4:	04400030 	bltz	v0,1aa8 <HW_SpiSetUpDMA+0x310> ! to 1aa8 if v0 <0
    19e8:	3c020000 	lui	v0,0x0			       ! v0=hi(memcpy)
			19e8: R_MIPS_HI16	memcpy
    19ec:	8e240088 	lw	a0,136(s1)		       ! a0=spi_dev->pDmaDescriptorBuffer
    19f0:	24420000 	addiu	v0,v0,0			       ! v0=memcpy
			19f0: R_MIPS_LO16	memcpy
	// memcpy(spi_dev->pDmaDescriptorBuffer, hcd_ctx->w40, hcd_ctx->w44)
    19f4:	0040f809 	jalr	v0
    19f8:	02403021 	move	a2,s2
    19fc:	3c030000 	lui	v1,0x0			       ! v1=hi(&dma_cache_wback_inv)
			19fc: R_MIPS_HI16	_dma_cache_wback_inv
    1a00:	8c620000 	lw	v0,0(v1)		       ! v0=dma_cache_wback_inv
			1a00: R_MIPS_LO16	_dma_cache_wback_inv
    1a04:	8e240088 	lw	a0,136(s1)		       ! a0=spi_dev->pDmaDescriptorBuffer
	// dma_cache_wback_inv(spi_dev->pDmaDescriptorBuffer, hcd_ctx->w44);
    1a08:	0040f809 	jalr	v0
    1a0c:	02402821 	move	a1,s2
    1a10:	8e300070 	lw	s0,112(s1)		       ! s0=spi_dev->TxDmaChannel
    1a14:	3c020000 	lui	v0,0x0			       ! v0=hi(disable_dma)
			1a14: R_MIPS_HI16	disable_dma
    1a18:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a1c:	24420000 	addiu	v0,v0,0			       ! v0=disable_dma
			1a1c: R_MIPS_LO16	disable_dma
	// disable_dma(spi_dev->TxDmaChannel)
    1a20:	0040f809 	jalr	v0
    1a24:	8e31008c 	lw	s1,140(s1)		       ! s1=spi_dev->DmaDescriptorPhys
    1a28:	3c020000 	lui	v0,0x0                         ! v0=hi(jz_set_dma_src_width)
			1a28: R_MIPS_HI16	jz_set_dma_src_width
    1a2c:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a30:	24420000 	addiu	v0,v0,0			       ! v0=jz_set_dma_src_width
			1a30: R_MIPS_LO16	jz_set_dma_src_width
	// jz_set_dma_src_width(spi_dev->TxDmaChannel,32)
    1a34:	0040f809 	jalr	v0
    1a38:	24050020 	li	a1,32			       ! a1=32
    1a3c:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_dest_width)
			1a3c: R_MIPS_HI16	jz_set_dma_dest_width
    1a40:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a44:	24420000 	addiu	v0,v0,0			       ! v0=jz_set_dma_dest_width
			1a44: R_MIPS_LO16	jz_set_dma_dest_width
	// jz_set_dma_dest_width(spi_dev->TxDmaChannel, 16);
    1a48:	0040f809 	jalr	v0
    1a4c:	24050010 	li	a1,16			       ! a1=16
    1a50:	3c020000 	lui	v0,0x0			       ! v0=hi(jz_set_dma_block_size)
			1a50: R_MIPS_HI16	jz_set_dma_block_size
    1a54:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a58:	24420000 	addiu	v0,v0,0			       ! v0=jz_set_dma_block_size
			1a58: R_MIPS_LO16	jz_set_dma_block_size
	// jz_set_dma_block_size(spi_dev->TxDmaChannel, 16);
    1a5c:	0040f809 	jalr	v0
    1a60:	24050010 	li	a1,16			       ! a1=16
    1a64:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_mode)
			1a64: R_MIPS_HI16	set_dma_mode
    1a68:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a6c:	24420000 	addiu	v0,v0,0			       ! v0=set_dma_mode
			1a6c: R_MIPS_LO16	set_dma_mode
	// set_dma_mode(spi_dev->TxDmaChannel,1)
    1a70:	0040f809 	jalr	v0
    1a74:	24050001 	li	a1,1
    1a78:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_addr)
			1a78: R_MIPS_HI16	set_dma_addr
    1a7c:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
    1a80:	24420000 	addiu	v0,v0,0			       ! v0=set_dma_addr
			1a80: R_MIPS_LO16	set_dma_addr
	// set_dma_addr(spi_dev->TxDmaChannel, spi_dev->DmaDescriptorPhys)
    1a84:	0040f809 	jalr	v0
    1a88:	02202821 	move	a1,s1
    1a8c:	3c020000 	lui	v0,0x0			       ! v0=hi(set_dma_count)
			1a8c: R_MIPS_HI16	set_dma_count
    1a90:	24420000 	addiu	v0,v0,0			       ! v0=set_dma_count
			1a90: R_MIPS_LO16	set_dma_count
    1a94:	02002021 	move	a0,s0			       ! a0=spi_dev->TxDmaChannel
	// set_dma_count(spi_dev->TxDmaChannel, dma_count+15
    1a98:	0040f809 	jalr	v0
    1a9c:	2665000f 	addiu	a1,s3,15		       ! a1=dma_count+15
>   1aa0:	08000608 	j	1820 <HW_SpiSetUpDMA+0x88>     ! to 1820
			1aa0: R_MIPS_26	.text
    1aa4:	24020003 	li	v0,3			       ! SDIO_STATUS_PENDING
===============================================================
19e4 --->
    1aa8:	8fbf0034 	lw	ra,52(sp)		       ! restore ra
1864, 187c --->
    1aac:	8fbe0030 	lw	s8,48(sp)		       ! restore s8
    1ab0:	8fb7002c 	lw	s7,44(sp)		       ! restore s7
    1ab4:	8fb60028 	lw	s6,40(sp)                      ! restore s6
    1ab8:	8fb50024 	lw	s5,36(sp)                      ! restore s5
    1abc:	8fb40020 	lw	s4,32(sp)                      ! restore s4
    1ac0:	8fb3001c 	lw	s3,28(sp)                      ! restore s3
    1ac4:	8fb20018 	lw	s2,24(sp)                      ! restore s2
    1ac8:	8fb10014 	lw	s1,20(sp)                      ! restore s1
    1acc:	8fb00010 	lw	s0,16(sp)                      ! restore s0
    1ad0:	24020003 	li	v0,3          ! SDIO_STATUS_PENDING
    1ad4:	03e00008 	jr	ra                             ! return
    1ad8:	27bd0038 	addiu	sp,sp,56                       ! dealloc stack
===============================================================
1854 --->
    1adc:	3c040000 	lui	a0,0x0		! a0=hi(LC16)
			1adc: R_MIPS_HI16	$LC16
    1ae0:	3c020000 	lui	v0,0x0		! v0=hi(printk)
			1ae0: R_MIPS_HI16	printk
    1ae4:	24420000 	addiu	v0,v0,0		! v0=print
			1ae4: R_MIPS_LO16	printk
	// printk("AR6k buffer address misaligned");
    1ae8:	0040f809 	jalr	v0
    1aec:	24840000 	addiu	a0,a0,0		! a0=LC16
			1aec: R_MIPS_LO16	$LC16
    1af0:	8fbf0034 	lw	ra,52(sp)	! restore ra
    1af4:	8fbe0030 	lw	s8,48(sp)	! restore s8
    1af8:	8fb7002c 	lw	s7,44(sp)	! restore s7
    1afc:	8fb60028 	lw	s6,40(sp)	! restore s6
    1b00:	8fb50024 	lw	s5,36(sp)	! restore s5
    1b04:	8fb40020 	lw	s4,32(sp)	! restore s4
    1b08:	8fb3001c 	lw	s3,28(sp)	! restore s3
    1b0c:	8fb20018 	lw	s2,24(sp)	! restore s2
    1b10:	8fb10014 	lw	s1,20(sp)	! restore s1
    1b14:	8fb00010 	lw	s0,16(sp)	! restore s0
    1b18:	2402fffe 	li	v0,-2		! v0=SDIO_STATUS_INVALID
    1b1c:	03e00008 	jr	ra		! return
    1b20:	27bd0038 	addiu	sp,sp,56	! dalloc stack
=========================================================
1914 --->
>   1b24:	08000647 	j	191c <HW_SpiSetUpDMA+0x184> ! to 191c
			1b24: R_MIPS_26	.text
    1b28:	26030003 	addiu	v1,s0,3			    ! v1=S0+3
=========================================================
185c  --->
    1b2c:	3c020000 	lui	v0,0x0
			1b2c: R_MIPS_HI16	panic
    1b30:	24420000 	addiu	v0,v0,0
			1b30: R_MIPS_LO16	panic
	// panic("=========>transfer count too large!!!\n");
    1b34:	0040f809 	jalr	v0
    1b38:	24840000 	addiu	a0,a0,0
			1b38: R_MIPS_LO16	$LC17
    1b3c:	00000000 	nop

00001b40 <DumpRequest>:
DumpRequest():
    1b40:	27bdffe0 	addiu	sp,sp,-32			! alloc 32 bytes
    1b44:	afb10014 	sw	s1,20(sp)			! save s1
    1b48:	afb00010 	sw	s0,16(sp)			! save s0
    1b4c:	afbf001c 	sw	ra,28(sp)			! save ra
    1b50:	afb20018 	sw	s2,24(sp)			! save s2
    1b54:	3c110000 	lui	s1,0x0
			1b54: R_MIPS_HI16	debuglevel
    1b58:	8e230000 	lw	v1,0(s1)			! v1=debuglevel
			1b58: R_MIPS_LO16	debuglevel
    1b5c:	28620003 	slti	v0,v1,3				! v0=1 if v1<3
>   1b60:	10400058 	beqz	v0,1cc4 <DumpRequest+0x184>     ! to 1cc4 if not  --> print header
    1b64:	00808021 	move	s0,a0				! s0=arg0 (hcd_ctx)
1cd8 ----->
    1b68:	96040010 	lhu	a0,16(s0)			! a0=uh16
    1b6c:	30820004 	andi	v0,a0,0x4			! v0=a0&0x4
>   1b70:	1440000f 	bnez	v0,1bb0 <DumpRequest+0x70>	! to 1bb0 if v0      --> print and leave
    1b74:	28620003 	slti	v0,v1,3				! v0=1 if v1<3
>   1b78:	1040003d 	beqz	v0,1c70 <DumpRequest+0x130>	! to 1c70 if not v0
    1b7c:	30820010 	andi	v0,a0,0x10			! v0=a0&0x10
>   1b80:	1040002e 	beqz	v0,1c3c <DumpRequest+0xfc>	! to 1c3c if not v0 --> Internal
    1b84:	30820080 	andi	v0,a0,0x80			! v0=a0&0x80 v0 r/w flag
1cb4 ----->
    1b88:	8e220000 	lw	v0,0(s1)			! v0=debuglevel
			1b88: R_MIPS_LO16	debuglevel
    1b8c:	28420003 	slti	v0,v0,3				! v0=1 if v0<3
>   1b90:	1040005c 	beqz	v0,1d04 <DumpRequest+0x1c4>	! to 1d04 if not v0, print
    1b94:	3c020000 	lui	v0,0x0				! v0=printk
			1b94: R_MIPS_HI16	printk
1c10 ------>
    1b98:	8fbf001c 	lw	ra,28(sp)			! restore ra   out
1bb0, 1bec, 1c48 ----->
    1b9c:	8fb20018 	lw	s2,24(sp)			! restore s2
    1ba0:	8fb10014 	lw	s1,20(sp)			! restore s1
    1ba4:	8fb00010 	lw	s0,16(sp)			! restore ra
    1ba8:	03e00008 	jr	ra				! return
    1bac:	27bd0020 	addiu	sp,sp,32			! dealloc stack
1b70 ---> v0&0x04
>   1bb0:	1440fffa 	bnez	v0,1b9c <DumpRequest+0x5c>      ! to 1b9c if v0!=0    --> out
    1bb4:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1bb8:	30820080 	andi	v0,a0,0x80			! v0=a0&0x80     --> 0x80 = WRITE
>   1bbc:	1040004f 	beqz	v0,1cfc <DumpRequest+0x1bc>	! to 1cfc if v0==0
    1bc0:	3c020000 	lui	v0,0x0				! v0=LC4
			1bc0: R_MIPS_HI16	$LC4
    1bc4:	3c020000 	lui	v0,0x0				! v0=LC3
			1bc4: R_MIPS_HI16	$LC3
    1bc8:	24450000 	addiu	a1,v0,0
			1bc8: R_MIPS_LO16	$LC3			! a1=LC3
1cfc ---->
    1bcc:	3c020000 	lui	v0,0x0				! v0=printk
			1bcc: R_MIPS_HI16	printk
    1bd0:	96060018 	lhu	a2,24(s0)			! a2=hcd_context->uh24
    1bd4:	3c040000 	lui	a0,0x0				! a0=LC8
			1bd4: R_MIPS_HI16	$LC8
    1bd8:	24520000 	addiu	s2,v0,0				! s2=printk
			1bd8: R_MIPS_LO16	printk
		printk("<1>DMA Request %s , Address : 0x%4.4X", "READ/WRITE", uh24);
    1bdc:	0240f809 	jalr	s2
    1be0:	24840000 	addiu	a0,a0,0
			1be0: R_MIPS_LO16	$LC8			! a0=LC8
    1be4:	8e230000 	lw	v1,0(s1)			! v1=debuglevel
			1be4: R_MIPS_LO16	debuglevel
    1be8:	28630003 	slti	v1,v1,3				! v1=1 if v1<3
    1bec:	1460ffeb 	bnez	v1,1b9c <DumpRequest+0x5c>	! to 1b9c if v1!=0   ---> out
    1bf0:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1bf4:	3c040000 	lui	a0,0x0				! a0=HI(LC9)
			1bf4: R_MIPS_HI16	$LC9
    1bf8:	8e06002c 	lw	a2,44(s0)			! a2=hcd_ctx->w44
    1bfc:	9605001a 	lhu	a1,26(s0)			! a1=hcd_ctx->uh26
	printk(<1>   %d  bytes  buffer:0x%X , uh26, w44);
    1c00:	0240f809 	jalr	s2
    1c04:	24840000 	addiu	a0,a0,0				! a0=LC9
			1c04: R_MIPS_LO16	$LC9
    1c08:	8e220000 	lw	v0,0(s1)			! v0=debuglevel
			1c08: R_MIPS_LO16	debuglevel
1c68, 1c3c, 1d1c ------>
    1c0c:	28420003 	slti	v0,v0,3				! v0=1 if v0<3
>   1c10:	1440ffe1 	bnez	v0,1b98 <DumpRequest+0x58>	! to 1b98 if v0!=0  ----> out
    1c14:	3c190000 	lui	t9,0x0				! t9=HI(printk)
			1c14: R_MIPS_HI16	printk
    1c18:	3c040000 	lui	a0,0x0				! a0=HI(LC10)
			1c18: R_MIPS_HI16	$LC10
    1c1c:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1c20:	8fb20018 	lw	s2,24(sp)			! restore s2
    1c24:	8fb10014 	lw	s1,20(sp)			! restore s1
    1c28:	8fb00010 	lw	s0,16(sp)			! restore s0
    1c2c:	24840000 	addiu	a0,a0,0				! a0=LC10
			1c2c: R_MIPS_LO16	$LC10
    1c30:	27390000 	addiu	t9,t9,0				! t9=printk
			1c30: R_MIPS_LO16	printk
	printk("<1>************************************************************ ");  end and return
    1c34:	03200008 	jr	t9
    1c38:	27bd0020 	addiu	sp,sp,32			! dealloc stack, let printk return
============================================================================================================
1b80, 1cbc ---->  print internal write
>   1c3c:	1440fff3 	bnez	v0,1c0c <DumpRequest+0xcc>	! to 1c0c if v0!=0 v0=rflag
    1c40:	8e220000 	lw	v0,0(s1)			! v0=debuglevel
			1c40: R_MIPS_LO16	debuglevel
    1c44:	28420003 	slti	v0,v0,3				! v0=1 if v0<3
>   1c48:	1440ffd4 	bnez	v0,1b9c <DumpRequest+0x5c>	! to 1b9c if v0!=0, silent out
    1c4c:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1c50:	8e050014 	lw	a1,20(s0)			! a1=hcd_ctx->uw20
    1c54:	3c040000 	lui	a0,0x0				! a0=HI(LC6)
			1c54: R_MIPS_HI16	$LC6
    1c58:	3c020000 	lui	v0,0x0				! v0=HI(printk)
			1c58: R_MIPS_HI16	printk
    1c5c:	24420000 	addiu	v0,v0,0				! v0=printk
			1c5c: R_MIPS_LO16	printk
	printk("<1>INTERNAL WRITE data: 0x%4.4X  ",uw20);
    1c60:	0040f809 	jalr	v0
    1c64:	24840000 	addiu	a0,a0,0				! a0=LC6
			1c64: R_MIPS_LO16	$LC6
>   1c68:	08000703 	j	1c0c <DumpRequest+0xcc>		! to 1c0c , print end header
			1c68: R_MIPS_26	.text
=================================================================================================
    1c6c:	8e220000 	lw	v0,0(s1)			! v0=debuglevel
			1c6c: R_MIPS_LO16	debuglevel
1b78 ---->
>   1c70:	1440001b 	bnez	v0,1ce0 <DumpRequest+0x1a0>	! to 1ce0 if v0!=0 (&0x10) External
    1c74:	3c020000 	lui	v0,0x0				! v0=HI(LC2)
			1c74: R_MIPS_HI16	$LC2
    1c78:	3c020000 	lui	v0,0x0				! v0=HI(LC1)   Internal
			1c78: R_MIPS_HI16	$LC1
    1c7c:	24450000 	addiu	a1,v0,0				! a1=LC1
			1c7c: R_MIPS_LO16	$LC1
    1c80:	30820080 	andi	v0,a0,0x80			! v0=ub16&0x80  Read
>   1c84:	1040001b 	beqz	v0,1cf4 <DumpRequest+0x1b4>	! to 1cf4 if v0==0
    1c88:	3c020000 	lui	v0,0x0				! v0=HI(LC4)  write
			1c88: R_MIPS_HI16	$LC4
    1c8c:	3c020000 	lui	v0,0x0				! v0=HI(LC3)  read
			1c8c: R_MIPS_HI16	$LC3
1ce8 ---->
    1c90:	24460000 	addiu	a2,v0,0				! a2=LC3 read
			1c90: R_MIPS_LO16	$LC3
1cf4 ---->
    1c94:	96070018 	lhu	a3,24(s0)			! a3=hcd_ctx->uh24
    1c98:	3c040000 	lui	a0,0x0				! a0=HI(LC5)
			1c98: R_MIPS_HI16	$LC5
    1c9c:	3c020000 	lui	v0,0x0				! v0=HI(printk)
			1c9c: R_MIPS_HI16	printk
    1ca0:	24420000 	addiu	v0,v0,0				! v0=printk
			1ca0: R_MIPS_LO16	printk
	printk("<1>PIO Request %s , %s , Address : 0x%4.4X", "INTERNAL"/"EXTERNAL", "READ"/"WRITE", uh24);
    1ca4:	0040f809 	jalr	v0
    1ca8:	24840000 	addiu	a0,a0,0				! a0=LC5
			1ca8: R_MIPS_LO16	$LC5
    1cac:	96040010 	lhu	a0,16(s0)			! a0=hcd_ctx->uh16
    1cb0:	30820010 	andi	v0,a0,0x10			! v0=a0&0x10
>   1cb4:	1440ffb4 	bnez	v0,1b88 <DumpRequest+0x48>	! to 1b88 if v0!=0  ! to 1b88 if external
    1cb8:	30820080 	andi	v0,a0,0x80			! v0=a0&0x80 ! v0 = readflag
>   1cbc:	0800070f 	j	1c3c <DumpRequest+0xfc>		! to 1c3c
			1cbc: R_MIPS_26	.text
    1cc0:	00000000 	nop
===========================================================================================
----> 1b60
    1cc4:	3c040000 	lui	a0,0x0				! a0=HI(LC0)
			1cc4: R_MIPS_HI16	$LC0
    1cc8:	3c020000 	lui	v0,0x0				! v0=HI(printk)
			1cc8: R_MIPS_HI16	printk
    1ccc:	24420000 	addiu	v0,v0,0				! v0=printk
			1ccc: R_MIPS_LO16	printk
	printk("<1>************************REQUEST DUMP*********************** ");
    1cd0:	0040f809 	jalr	v0
    1cd4:	24840000 	addiu	a0,a0,0				! a0=LC0
			1cd4: R_MIPS_LO16	$LC0
    1cd8:	080006da 	j	1b68 <DumpRequest+0x28>		! to 1b68
=================================================================================
			1cd8: R_MIPS_26	.text
    1cdc:	8e230000 	lw	v1,0(s1)			! v1=debuglevel
			1cdc: R_MIPS_LO16	debuglevel
1c70  ---->
    1ce0:	24450000 	addiu	a1,v0,0				! a1=LC2 external
			1ce0: R_MIPS_LO16	$LC2
    1ce4:	30820080 	andi	v0,a0,0x80			! v0=a0&0x80
>   1ce8:	1440ffe9 	bnez	v0,1c90 <DumpRequest+0x150>	! to 1c90 if v0!=0 , "READ" if 0x80 set
    1cec:	3c020000 	lui	v0,0x0				! v0=HI(LC3) read  with read
			1cec: R_MIPS_HI16	$LC3
    1cf0:	3c020000 	lui	v0,0x0				! v0=HI(LC4) write
			1cf0: R_MIPS_HI16	$LC4
1c84 ----->
>   1cf4:	08000725 	j	1c94 <DumpRequest+0x154>	! to 1c94  with write
=======================================================================================
			1cf4: R_MIPS_26	.text
    1cf8:	24460000 	addiu	a2,v0,0				! a2=LC4
			1cf8: R_MIPS_LO16	$LC4
1bbc  ---->
>   1cfc:	080006f3 	j	1bcc <DumpRequest+0x8c>		! to 1bcc
=======================================================================================
			1cfc: R_MIPS_26	.text
    1d00:	24450000 	addiu	a1,v0,0				! a1=LC4
			1d00: R_MIPS_LO16	$LC4
1b90 ---->   print external access
    1d04:	8e06002c 	lw	a2,44(s0)			! a2=w44
    1d08:	9605001a 	lhu	a1,26(s0)			! a1=uh26
    1d0c:	3c040000 	lui	a0,0x0				! a0=HI(LC7)
			1d0c: R_MIPS_HI16	$LC7
    1d10:	24420000 	addiu	v0,v0,0				! v0=printk
			1d10: R_MIPS_LO16	printk
	printk("<1>EXTERNAL Access : %d  bytes  buffer:0x%X ", uh26, w44);
    1d14:	0040f809 	jalr	v0
    1d18:	24840000 	addiu	a0,a0,0				! a0=LC7
			1d18: R_MIPS_LO16	$LC7
    1d1c:	08000703 	j	1c0c <DumpRequest+0xcc>		! to 1c0c
			1d1c: R_MIPS_26	.text
    1d20:	8e220000 	lw	v0,0(s1)			! v0=debuglevel
			1d20: R_MIPS_LO16	debuglevel
=======================================================================================

00001d24 <DoPioReadInternal>:
DoPioReadInternal():
    1d24:	27bdffe0 	addiu	sp,sp,-32			! allocate 32 bytes
    1d28:	3c020000 	lui	v0,0x0				! v0 = HI(HW_InOut_Token)
			1d28: R_MIPS_HI16	HW_InOut_Token
    1d2c:	30a5ffff 	andi	a1,a1,0xffff			! a1=a1&0xffff (unsigned short int)
    1d30:	afb20018 	sw	s2,24(sp)			! save s2
    1d34:	afb10014 	sw	s1,20(sp)			! save s1
    1d38:	afb00010 	sw	s0,16(sp)			! save s0
    1d3c:	00c08821 	move	s1,a2				! s1=a2
    1d40:	34a5c000 	ori	a1,a1,0xc000			! a1=a1&0xc000
    1d44:	24060001 	li	a2,1				! a2=1
    1d48:	00003821 	move	a3,zero				! a3=0
    1d4c:	afbf001c 	sw	ra,28(sp)			! save ra
    1d50:	24520000 	addiu	s2,v0,0				! s2=HW_InOut_Token
			1d50: R_MIPS_LO16	HW_InOut_Token
		HW_InOut_Token(a0,a1,1,0)
    1d54:	0240f809 	jalr	s2
    1d58:	00808021 	move	s0,a0				! s0=a0
    1d5c:	02002021 	move	a0,s0				! a0=s0
    1d60:	02203821 	move	a3,s1				! a3=s1
    1d64:	2405ffff 	li	a1,-1				! a1=-1
>   1d68:	04400008 	bltz	v0,1d8c <DoPioReadInternal+0x68> ! to 1d8c if hw_inout ret<0
    1d6c:	24060001 	li	a2,1				! a2=1
    1d70:	0240c821 	move	t9,s2				! t9=s2
    1d74:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1d78:	8fb20018 	lw	s2,24(sp)			! restore s2
    1d7c:	8fb10014 	lw	s1,20(sp)			! restore s1
    1d80:	8fb00010 	lw	s0,16(sp)			! restore s0
    1d84:	03200008 	jr	t9				! call HW_InOut_Token and return
    1d88:	27bd0020 	addiu	sp,sp,32			! dealloc stack
1d68  ---->
    1d8c:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1d90:	8fb20018 	lw	s2,24(sp)			! restore s2
    1d94:	8fb10014 	lw	s1,20(sp)			! restore s1
    1d98:	8fb00010 	lw	s0,16(sp)			! restore s0
    1d9c:	03e00008 	jr	ra				! return
    1da0:	27bd0020 	addiu	sp,sp,32			! dealloc stack

00001da4 <DoPioWriteInternal>:
DoPioWriteInternal():
    1da4:	27bdffe0 	addiu	sp,sp,-32			! alloc 32 bytes on stack
    1da8:	3c020000 	lui	v0,0x0				! v0=HI(HW_InOut_Token)
			1da8: R_MIPS_HI16	HW_InOut_Token
    1dac:	30a5ffff 	andi	a1,a1,0xffff			! a1=a1&0xffff
    1db0:	afb20018 	sw	s2,24(sp)			! save s2
    1db4:	afb10014 	sw	s1,20(sp)			! save s1
    1db8:	afb00010 	sw	s0,16(sp)			! save s0
    1dbc:	00c08821 	move	s1,a2				! s1=a2
    1dc0:	34a54000 	ori	a1,a1,0x4000			! a1=a1|0x4000
    1dc4:	24060001 	li	a2,1				! a2=1
    1dc8:	00003821 	move	a3,zero				! a3=0
    1dcc:	afbf001c 	sw	ra,28(sp)			! save ra
    1dd0:	24520000 	addiu	s2,v0,0				! s2=HW_InOut_Token
			1dd0: R_MIPS_LO16	HW_InOut_Token
		HW_InOut_Token(a0,a1|0x4000,1,0)
    1dd4:	0240f809 	jalr	s2				! call
    1dd8:	00808021 	move	s0,a0				! s0=a0
    1ddc:	02002021 	move	a0,s0				! a0=s0
    1de0:	02202821 	move	a1,s1				! a1=s1
    1de4:	24060001 	li	a2,1				! a2=1
>   1de8:	04400008 	bltz	v0,1e0c <DoPioWriteInternal+0x68> ! to 1e0c if ret <0
    1dec:	00003821 	move	a3,zero				! a3=0
    1df0:	0240c821 	move	t9,s2				! t9=HW_InOut_Token
    1df4:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1df8:	8fb20018 	lw	s2,24(sp)			! restore s2
    1dfc:	8fb10014 	lw	s1,20(sp)			! restore s1
    1e00:	8fb00010 	lw	s0,16(sp)			! restore s0
    1e04:	03200008 	jr	t9				! call and return
    1e08:	27bd0020 	addiu	sp,sp,32			! dealloc stack
1de8 ---->
    1e0c:	8fbf001c 	lw	ra,28(sp)			! restore ra
    1e10:	8fb20018 	lw	s2,24(sp)			! restore s2
    1e14:	8fb10014 	lw	s1,20(sp)			! restore s1
    1e18:	8fb00010 	lw	s0,16(sp)			! restore s0
    1e1c:	03e00008 	jr	ra				! return
    1e20:	27bd0020 	addiu	sp,sp,32			! dealloc stack

00001e24 <HcdDeinitialize>:
HcdDeinitialize():
    1e24:	27bdffe8 	addiu	sp,sp,-24
    1e28:	24030001 	li	v1,1
    1e2c:	3c020000 	lui	v0,0x0
			1e2c: R_MIPS_HI16	HW_StopTimer
    1e30:	afb00010 	sw	s0,16(sp)
    1e34:	afbf0014 	sw	ra,20(sp)
    1e38:	00808021 	move	s0,a0
    1e3c:	24420000 	addiu	v0,v0,0
			1e3c: R_MIPS_LO16	HW_StopTimer
    1e40:	0040f809 	jalr	v0
    1e44:	a0830008 	sb	v1,8(a0)
    1e48:	8e030088 	lw	v1,136(s0)
    1e4c:	26040044 	addiu	a0,s0,68
    1e50:	10600007 	beqz	v1,1e70 <HcdDeinitialize+0x4c>
    1e54:	24050004 	li	a1,4
    1e58:	2402fff8 	li	v0,-8
    1e5c:	ac620040 	sw	v0,64(v1)
    1e60:	3c020000 	lui	v0,0x0
			1e60: R_MIPS_HI16	SDIO_HandleHcdEvent
    1e64:	24420000 	addiu	v0,v0,0
			1e64: R_MIPS_LO16	SDIO_HandleHcdEvent
    1e68:	0040f809 	jalr	v0
    1e6c:	00000000 	nop
    1e70:	920200f9 	lbu	v0,249(s0)
    1e74:	02002021 	move	a0,s0
    1e78:	30420002 	andi	v0,v0,0x2
    1e7c:	24050400 	li	a1,1024
    1e80:	14400005 	bnez	v0,1e98 <HcdDeinitialize+0x74>
    1e84:	34068000 	li	a2,0x8000
    1e88:	8fbf0014 	lw	ra,20(sp)
    1e8c:	8fb00010 	lw	s0,16(sp)
    1e90:	03e00008 	jr	ra
    1e94:	27bd0018 	addiu	sp,sp,24
    1e98:	3c190000 	lui	t9,0x0
			1e98: R_MIPS_HI16	.text
    1e9c:	8fbf0014 	lw	ra,20(sp)
    1ea0:	8fb00010 	lw	s0,16(sp)
    1ea4:	27391da4 	addiu	t9,t9,7588
			1ea4: R_MIPS_LO16	.text
    1ea8:	03200008 	jr	t9
    1eac:	27bd0018 	addiu	sp,sp,24

00001eb0 <ResetWriteBufferWaterMark>:
ResetWriteBufferWaterMark():
    1eb0:	27bdffe0 	addiu	sp,sp,-32
    1eb4:	3c020000 	lui	v0,0x0
			1eb4: R_MIPS_HI16	.text
    1eb8:	afb10014 	sw	s1,20(sp)
    1ebc:	afb00010 	sw	s0,16(sp)
    1ec0:	24051300 	li	a1,4864
    1ec4:	00003021 	move	a2,zero
    1ec8:	afbf0018 	sw	ra,24(sp)
    1ecc:	24511da4 	addiu	s1,v0,7588
			1ecc: R_MIPS_LO16	.text
    1ed0:	0220f809 	jalr	s1
    1ed4:	00808021 	move	s0,a0
    1ed8:	02002021 	move	a0,s0
    1edc:	24050c00 	li	a1,3072
    1ee0:	04400007 	bltz	v0,1f00 <ResetWriteBufferWaterMark+0x50>
    1ee4:	24060400 	li	a2,1024
    1ee8:	0220c821 	move	t9,s1
    1eec:	8fbf0018 	lw	ra,24(sp)
    1ef0:	8fb10014 	lw	s1,20(sp)
    1ef4:	8fb00010 	lw	s0,16(sp)
    1ef8:	03200008 	jr	t9
    1efc:	27bd0020 	addiu	sp,sp,32
    1f00:	8fbf0018 	lw	ra,24(sp)
    1f04:	8fb10014 	lw	s1,20(sp)
    1f08:	8fb00010 	lw	s0,16(sp)
    1f0c:	03e00008 	jr	ra
    1f10:	27bd0020 	addiu	sp,sp,32

00001f14 <MaskSPIInterrupts>:
MaskSPIInterrupts():
    1f14:	94820012 	lhu	v0,18(a0)
    1f18:	30a5ffff 	andi	a1,a1,0xffff
    1f1c:	00052827 	nor	a1,zero,a1
    1f20:	00a22824 	and	a1,a1,v0
    1f24:	3c190000 	lui	t9,0x0
			1f24: R_MIPS_HI16	.text
    1f28:	a4850012 	sh	a1,18(a0)
    1f2c:	00a03021 	move	a2,a1
    1f30:	27391da4 	addiu	t9,t9,7588
			1f30: R_MIPS_LO16	.text
    1f34:	03200008 	jr	t9
    1f38:	24050d00 	li	a1,3328

00001f3c <UnmaskSPIInterrupts>:
UnmaskSPIInterrupts():
    1f3c:	94860012 	lhu	a2,18(a0)
    1f40:	30a5ffff 	andi	a1,a1,0xffff
    1f44:	00c53025 	or	a2,a2,a1
    1f48:	3c190000 	lui	t9,0x0
			1f48: R_MIPS_HI16	.text
    1f4c:	a4860012 	sh	a2,18(a0)
    1f50:	27391da4 	addiu	t9,t9,7588
			1f50: R_MIPS_LO16	.text
    1f54:	03200008 	jr	t9
    1f58:	24050d00 	li	a1,3328

00001f5c <DoDataFrames>:
DoDataFrames():
    1f5c:	27bdffc0 	addiu	sp,sp,-64
    1f60:	30e700ff 	andi	a3,a3,0xff
    1f64:	afb1001c 	sw	s1,28(sp)
    1f68:	24080001 	li	t0,1
    1f6c:	30f10003 	andi	s1,a3,0x3
    1f70:	afbe0038 	sw	s8,56(sp)
    1f74:	afb40028 	sw	s4,40(sp)
    1f78:	afbf003c 	sw	ra,60(sp)
    1f7c:	afb70034 	sw	s7,52(sp)
    1f80:	afb60030 	sw	s6,48(sp)
    1f84:	afb5002c 	sw	s5,44(sp)
    1f88:	afb30024 	sw	s3,36(sp)
    1f8c:	afb20020 	sw	s2,32(sp)
    1f90:	afb00018 	sw	s0,24(sp)
    1f94:	0080f021 	move	s8,a0
    1f98:	12280092 	beq	s1,t0,21e4 <DoDataFrames+0x288>
    1f9c:	93b40050 	lbu	s4,80(sp)
    1fa0:	24030003 	li	v1,3
    1fa4:	1223009e 	beq	s1,v1,2220 <DoDataFrames+0x2c4>
    1fa8:	3a220002 	xori	v0,s1,0x2
    1fac:	00609821 	move	s3,v1
    1fb0:	0102980b 	movn	s3,t0,v0
    1fb4:	10c000a9 	beqz	a2,225c <DoDataFrames+0x300>
    1fb8:	0007ae00 	sll	s5,a3,0x18
    1fbc:	0015ae03 	sra	s5,s5,0x18
    1fc0:	00a08021 	move	s0,a1
    1fc4:	00d39023 	subu	s2,a2,s3
    1fc8:	0013b023 	negu	s6,s3
    1fcc:	06a00018 	bltz	s5,2030 <DoDataFrames+0xd4>
    1fd0:	3c170000 	lui	s7,0x0
			1fd0: R_MIPS_HI16	HW_InOut_Token
    1fd4:	24020001 	li	v0,1
    1fd8:	12220036 	beq	s1,v0,20b4 <DoDataFrames+0x158>
    1fdc:	24020003 	li	v0,3
    1fe0:	1222003c 	beq	s1,v0,20d4 <DoDataFrames+0x178>
    1fe4:	24020002 	li	v0,2
    1fe8:	12220048 	beq	s1,v0,210c <DoDataFrames+0x1b0>
    1fec:	00000000 	nop
    1ff0:	92020000 	lbu	v0,0(s0)
    1ff4:	afa20010 	sw	v0,16(sp)
    1ff8:	8fa50010 	lw	a1,16(sp)
    1ffc:	02203021 	move	a2,s1
    2000:	03c02021 	move	a0,s8
    2004:	26e20000 	addiu	v0,s7,0
			2004: R_MIPS_LO16	HW_InOut_Token
    2008:	0040f809 	jalr	v0
    200c:	00003821 	move	a3,zero
    2010:	0440001b 	bltz	v0,2080 <DoDataFrames+0x124>
    2014:	00403021 	move	a2,v0
    2018:	02569021 	addu	s2,s2,s6
    201c:	02531021 	addu	v0,s2,s3
    2020:	10400018 	beqz	v0,2084 <DoDataFrames+0x128>
    2024:	8fbf003c 	lw	ra,60(sp)
    2028:	06a1ffea 	bgez	s5,1fd4 <DoDataFrames+0x78>
    202c:	02138021 	addu	s0,s0,s3
    2030:	02203021 	move	a2,s1
    2034:	03c02021 	move	a0,s8
    2038:	2405ffff 	li	a1,-1
    203c:	26e20000 	addiu	v0,s7,0
			203c: R_MIPS_LO16	HW_InOut_Token
    2040:	0040f809 	jalr	v0
    2044:	27a70010 	addiu	a3,sp,16
    2048:	0440000d 	bltz	v0,2080 <DoDataFrames+0x124>
    204c:	00403021 	move	a2,v0
    2050:	24020001 	li	v0,1
    2054:	12220053 	beq	s1,v0,21a4 <DoDataFrames+0x248>
    2058:	24020003 	li	v0,3
    205c:	12220057 	beq	s1,v0,21bc <DoDataFrames+0x260>
    2060:	24020002 	li	v0,2
    2064:	12220061 	beq	s1,v0,21ec <DoDataFrames+0x290>
    2068:	8fa20010 	lw	v0,16(sp)
    206c:	02569021 	addu	s2,s2,s6
    2070:	a2020000 	sb	v0,0(s0)
    2074:	02531021 	addu	v0,s2,s3
    2078:	1440ffeb 	bnez	v0,2028 <DoDataFrames+0xcc>
    207c:	00000000 	nop
    2080:	8fbf003c 	lw	ra,60(sp)
    2084:	8fbe0038 	lw	s8,56(sp)
    2088:	8fb70034 	lw	s7,52(sp)
    208c:	8fb60030 	lw	s6,48(sp)
    2090:	8fb5002c 	lw	s5,44(sp)
    2094:	8fb40028 	lw	s4,40(sp)
    2098:	8fb30024 	lw	s3,36(sp)
    209c:	8fb20020 	lw	s2,32(sp)
    20a0:	8fb1001c 	lw	s1,28(sp)
    20a4:	8fb00018 	lw	s0,24(sp)
    20a8:	00c01021 	move	v0,a2
    20ac:	03e00008 	jr	ra
    20b0:	27bd0040 	addiu	sp,sp,64
    20b4:	12800020 	beqz	s4,2138 <DoDataFrames+0x1dc>
    20b8:	00000000 	nop
    20bc:	92020000 	lbu	v0,0(s0)
    20c0:	92030001 	lbu	v1,1(s0)
    20c4:	00021200 	sll	v0,v0,0x8
    20c8:	00431025 	or	v0,v0,v1
    20cc:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			20cc: R_MIPS_26	.text
    20d0:	afa20010 	sw	v0,16(sp)
    20d4:	1280001e 	beqz	s4,2150 <DoDataFrames+0x1f4>
    20d8:	00000000 	nop
    20dc:	92020000 	lbu	v0,0(s0)
    20e0:	92030001 	lbu	v1,1(s0)
    20e4:	92040002 	lbu	a0,2(s0)
    20e8:	00031c00 	sll	v1,v1,0x10
    20ec:	00021600 	sll	v0,v0,0x18
    20f0:	00431025 	or	v0,v0,v1
    20f4:	00042200 	sll	a0,a0,0x8
    20f8:	92030003 	lbu	v1,3(s0)
    20fc:	00441025 	or	v0,v0,a0
    2100:	00431025 	or	v0,v0,v1
    2104:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			2104: R_MIPS_26	.text
    2108:	afa20010 	sw	v0,16(sp)
    210c:	1280001c 	beqz	s4,2180 <DoDataFrames+0x224>
    2110:	00000000 	nop
    2114:	92020000 	lbu	v0,0(s0)
    2118:	92030001 	lbu	v1,1(s0)
    211c:	92040002 	lbu	a0,2(s0)
    2120:	00021400 	sll	v0,v0,0x10
    2124:	00031a00 	sll	v1,v1,0x8
    2128:	00431025 	or	v0,v0,v1
    212c:	00441025 	or	v0,v0,a0
    2130:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			2130: R_MIPS_26	.text
    2134:	afa20010 	sw	v0,16(sp)
    2138:	92020001 	lbu	v0,1(s0)
    213c:	92030000 	lbu	v1,0(s0)
    2140:	00021200 	sll	v0,v0,0x8
    2144:	00431025 	or	v0,v0,v1
    2148:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			2148: R_MIPS_26	.text
    214c:	afa20010 	sw	v0,16(sp)
    2150:	92020003 	lbu	v0,3(s0)
    2154:	92030002 	lbu	v1,2(s0)
    2158:	92040001 	lbu	a0,1(s0)
    215c:	00031c00 	sll	v1,v1,0x10
    2160:	00021600 	sll	v0,v0,0x18
    2164:	00431025 	or	v0,v0,v1
    2168:	00042200 	sll	a0,a0,0x8
    216c:	92030000 	lbu	v1,0(s0)
    2170:	00441025 	or	v0,v0,a0
    2174:	00431025 	or	v0,v0,v1
    2178:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			2178: R_MIPS_26	.text
    217c:	afa20010 	sw	v0,16(sp)
    2180:	92020002 	lbu	v0,2(s0)
    2184:	92030001 	lbu	v1,1(s0)
    2188:	92040000 	lbu	a0,0(s0)
    218c:	00021400 	sll	v0,v0,0x10
    2190:	00031a00 	sll	v1,v1,0x8
    2194:	00431025 	or	v0,v0,v1
    2198:	00441025 	or	v0,v0,a0
    219c:	080007fe 	j	1ff8 <DoDataFrames+0x9c>
			219c: R_MIPS_26	.text
    21a0:	afa20010 	sw	v0,16(sp)
    21a4:	1280001a 	beqz	s4,2210 <DoDataFrames+0x2b4>
    21a8:	8fa30010 	lw	v1,16(sp)
    21ac:	00031202 	srl	v0,v1,0x8
    21b0:	a2020000 	sb	v0,0(s0)
    21b4:	08000806 	j	2018 <DoDataFrames+0xbc>
			21b4: R_MIPS_26	.text
    21b8:	a2030001 	sb	v1,1(s0)
    21bc:	1680001a 	bnez	s4,2228 <DoDataFrames+0x2cc>
    21c0:	8fa20010 	lw	v0,16(sp)
    21c4:	00021e02 	srl	v1,v0,0x18
    21c8:	00022402 	srl	a0,v0,0x10
    21cc:	00022a02 	srl	a1,v0,0x8
    21d0:	a2030003 	sb	v1,3(s0)
    21d4:	a2040002 	sb	a0,2(s0)
    21d8:	a2050001 	sb	a1,1(s0)
    21dc:	08000806 	j	2018 <DoDataFrames+0xbc>
			21dc: R_MIPS_26	.text
    21e0:	a2020000 	sb	v0,0(s0)
    21e4:	080007ed 	j	1fb4 <DoDataFrames+0x58>
			21e4: R_MIPS_26	.text
    21e8:	24130002 	li	s3,2
    21ec:	16800016 	bnez	s4,2248 <DoDataFrames+0x2ec>
    21f0:	00021c02 	srl	v1,v0,0x10
    21f4:	8fa20010 	lw	v0,16(sp)
    21f8:	00021c02 	srl	v1,v0,0x10
    21fc:	00022202 	srl	a0,v0,0x8
    2200:	a2030002 	sb	v1,2(s0)
    2204:	a2040001 	sb	a0,1(s0)
    2208:	08000806 	j	2018 <DoDataFrames+0xbc>
			2208: R_MIPS_26	.text
    220c:	a2020000 	sb	v0,0(s0)
    2210:	00031202 	srl	v0,v1,0x8
    2214:	a2020001 	sb	v0,1(s0)
    2218:	08000806 	j	2018 <DoDataFrames+0xbc>
			2218: R_MIPS_26	.text
    221c:	a2030000 	sb	v1,0(s0)
    2220:	080007ed 	j	1fb4 <DoDataFrames+0x58>
			2220: R_MIPS_26	.text
    2224:	24130004 	li	s3,4
    2228:	00021e02 	srl	v1,v0,0x18
    222c:	00022402 	srl	a0,v0,0x10
    2230:	00022a02 	srl	a1,v0,0x8
    2234:	a2030000 	sb	v1,0(s0)
    2238:	a2040001 	sb	a0,1(s0)
    223c:	a2050002 	sb	a1,2(s0)
    2240:	08000806 	j	2018 <DoDataFrames+0xbc>
			2240: R_MIPS_26	.text
    2244:	a2020003 	sb	v0,3(s0)
    2248:	00022202 	srl	a0,v0,0x8
    224c:	a2030000 	sb	v1,0(s0)
    2250:	a2040001 	sb	a0,1(s0)
    2254:	08000806 	j	2018 <DoDataFrames+0xbc>
			2254: R_MIPS_26	.text
    2258:	a2020002 	sb	v0,2(s0)
    225c:	08000820 	j	2080 <DoDataFrames+0x124>
			225c: R_MIPS_26	.text
    2260:	00003021 	move	a2,zero

// static SDIO_STATUS HcdTransferData(struct hcd_context *hcd_ctx,
//                                    SDREQUEST *pRequest);

00002264 <HcdTransferData>:
HcdTransferData():
    2264:	27bdffc8 	addiu	sp,sp,-56 ! alloc 56 bytes
    2268:	afb30024 	sw	s3,36(sp) ! save s3
    226c:	afb20020 	sw	s2,32(sp) ! save s2
    2270:	afbf0030 	sw	ra,48(sp) ! save ra
    2274:	afb5002c 	sw	s5,44(sp) ! save s5
    2278:	afb40028 	sw	s4,40(sp) ! save s4
    227c:	afb1001c 	sw	s1,28(sp) ! save s1
    2280:	afb00018 	sw	s0,24(sp) ! save s0
    2284:	90a20010 	lbu	v0,16(a1) ! v0.b=pRequest->Fixupdata
    2288:	00809021 	move	s2,a0     ! s2=hcd_ctx
    228c:	30430004 	andi	v1,v0,0x4 ! v1=v0&4
    2290:	00a09821 	move	s3,a1     ! s3=pReq
!    2294:	1060002a 	beqz	v1,2340 <HcdTransferData+0xdc> ! to 2340 if !v1
!    2298:	304400fc 	andi	a0,v0,0xfc! a0=fixupdata&0xfc

!    229c:	92420018 	lbu	v0,24(s2) ! v0=hcd_ctx->ub24
!    22a0:	00823825 	or	a3,a0,v0  ! a3=fixupdata|v0
2344 ---->
    22a4:	8e700030 	lw	s0,48(s3) ! s0=pReq->DataRemaining
    22a8:	2e020030 	sltiu	v0,s0,48  ! v0=1 if dataremaing<48
    22ac:	14400004 	bnez	v0,22c0 <HcdTransferData+0x5c> ! to 22c0 if v0
    22b0:	30f100ff 	andi	s1,a3,0xff ! s1=a3&0xff
    22b4:	30e20010 	andi	v0,a3,0x10 ! v0=a3&0x10
    22b8:	10400024 	beqz	v0,234c <HcdTransferData+0xe8>
    22bc:	00000000 	nop
22ac, 2358 ---->
    22c0:	32230003 	andi	v1,s1,0x3 ! v1=s1&3
    22c4:	24020001 	li	v0,1      ! v1=1
    22c8:	10620069 	beq	v1,v0,2470 <HcdTransferData+0x20c> to 2470 if v1=1
    22cc:	8e750034 	lw	s5,52(s3) ! s5=pReq->HcdContext

    22d0:	24020003 	li	v0,3      ! v0=3
    22d4:	1062006b 	beq	v1,v0,2484 <HcdTransferData+0x220> ! to 2484 if v1=3
    22d8:	2402fffc 	li	v0,-4     ! v0=-4
    22dc:	0200a021 	move	s4,s0     ! s4=s0
2478, 2488 --->
    22e0:	16800054 	bnez	s4,2434 <HcdTransferData+0x1d0> ! to 2434 if s4
    22e4:	32220004 	andi	v0,s1,0x4 ! v0=s1&4
    22e8:	00001021 	move	v0,zero   ! v0=0
    22ec:	02143023 	subu	a2,s0,s4  ! a2=s0-s4
    22f0:	10c0004c 	beqz	a2,2424 <HcdTransferData+0x1c0> ! to 2424 if a2
    22f4:	322300ff 	andi	v1,s1,0xff! v1=s1&0xff
    22f8:	30640003 	andi	a0,v1,0x3a! a0=v1&0x3a
    22fc:	24020001 	li	v0,1      ! v0=1
    2300:	10820062 	beq	a0,v0,248c <HcdTransferData+0x228>
    2304:	306700fc 	andi	a3,v1,0xfc ! a3=v1&0xfc
    2308:	24020003 	li	v0,3       ! v0=3
    230c:	10820035 	beq	a0,v0,23e4 <HcdTransferData+0x180> ! to 23e4 if a0==v0
    2310:	28c20005 	slti	v0,a2,5    ! v0=1 a2<5
=============
    2314:	24020003 	li	v0,3        ! Pending
2428, 23e8 ---> Out
    2318:	ae600030 	sw	zero,48(s3) ! pReq->dataRemaining=0
    231c:	8fbf0030 	lw	ra,48(sp)   ! restore ra
    2320:	8fb5002c 	lw	s5,44(sp)   ! restore s5
242c ---> Out2
    2324:	8fb40028 	lw	s4,40(sp)   ! restore s4
    2328:	8fb30024 	lw	s3,36(sp)   ! restore s3
    232c:	8fb20020 	lw	s2,32(sp)   ! restore s2
    2330:	8fb1001c 	lw	s1,28(sp)   ! restore s1
    2334:	8fb00018 	lw	s0,24(sp)   ! restore s0
    2338:	03e00008 	jr	ra          ! return
    233c:	27bd0038 	addiu	sp,sp,56    ! dealloc stack
2294 --->
    2340:	92420017 	lbu	v0,23(s2) v0=hcd_context->ub23
    2344:	080008a9 	j	22a4 <HcdTransferData+0x40>
			2344: R_MIPS_26	.text
    2348:	00823825 	or	a3,a0,v0  ! a3=fixupdata|ub23
=============================
22b8 --->
    234c:	924200f8 	lbu	v0,248(s2) ! v0=hcd_ctx->ub248
    2350:	30420040 	andi	v0,v0,0x40 ! v0=v0&0x40
    2354:	1440ffda 	bnez	v0,22c0 <HcdTransferData+0x5c> ! to 22c0 if v0
    2358:	30f100ff 	andi	s1,a3,0xff ! s1=a3&0xff
    235c:	8e420034 	lw	v0,52(s2)  ! v0=hcd_ctx->w52
    2360:	30e50003 	andi	a1,a3,0x3  ! a1=a3&3
    2364:	0050182b 	sltu	v1,v0,s0   ! v1=1 if v0<s0
    2368:	00403021 	move	a2,v0      ! a2=v0
    236c:	24040001 	li	a0,1       ! a0=1
    2370:	10a4004a 	beq	a1,a0,249c <HcdTransferData+0x238> ! to 249c if a1==a0
    2374:	0203300a 	movz	a2,s0,v1   ! a2=s0 if ! v1
    2378:	24020003 	li	v0,3       ! v0=3
    237c:	10a2004a 	beq	a1,v0,24a8 <HcdTransferData+0x244> ! to 24a8 if a1==v0
    2380:	00000000 	nop
    2384:	8e620034 	lw	v0,52(s3) ! v0=pReq->pHcdContext
    2388:	000719c2 	srl	v1,a3,0x7 ! v1=a3>>7
    238c:	ae420028 	sw	v0,40(s2) ! hcd_ctx->w40=v0
    2390:	a2430030 	sb	v1,48(s2) ! hcd_ctx->b48=v1
    2394:	a2450031 	sb	a1,49(s2) ! hcd_ctx->b49=a1
    2398:	ae46002c 	sw	a2,44(s2) ! hcd_ctx->w44=a2
    239c:	8e630030 	lw	v1,48(s3) ! v1=pReq->dataRemaing
    23a0:	8e620034 	lw	v0,52(s3) ! v0=pReq->pHcdContext
    23a4:	00661823 	subu	v1,v1,a2  ! v1=v1-a2
    23a8:	00461021 	addu	v0,v0,a2  ! v0=v0+a2
    23ac:	ae620034 	sw	v0,52(s3) ! pReq->pHcdContext=v0
    23b0:	ae630030 	sw	v1,48(s3) ! pReq->DataRemaining=v1
    23b4:	3c190000 	lui	t9,0x0    ! t9=.text
			23b4: R_MIPS_HI16	HW_SpiSetUpDMA
    23b8:	02402021 	move	a0,s2     ! a0=hcd_ctx
    23bc:	8fbf0030 	lw	ra,48(sp) ! restore ra
    23c0:	8fb5002c 	lw	s5,44(sp) ! restore s5
    23c4:	8fb40028 	lw	s4,40(sp) ! restore s4
    23c8:	8fb30024 	lw	s3,36(sp) ! restore s3
    23cc:	8fb20020 	lw	s2,32(sp) ! restore s2
    23d0:	8fb1001c 	lw	s1,28(sp) ! restore s1
    23d4:	8fb00018 	lw	s0,24(sp) ! restore s0
    23d8:	27390000 	addiu	t9,t9,0   ! t9=HW_SpiSetUpDMA
			23d8: R_MIPS_LO16	HW_SpiSetUpDMA
    23dc:	03200008 	jr	t9        ! SD_STATUS HW_SpiSetUpDMA(struct hcd_context *)
    23e0:	27bd0038 	addiu	sp,sp,56  ! dealloc stack
===========================================================
2310 ---->
    23e4:	1040ffcc 	beqz	v0,2318 <HcdTransferData+0xb4> ! to 2318 if !v0
    23e8:	24020003 	li	v0,3			       ! v0=3  --> out pending
    23ec:	10c40031 	beq	a2,a0,24b4 <HcdTransferData+0x250> ! to 24b4 if a2==a0
    23f0:	24020004 	li	v0,4				   ! v0=4
    23f4:	10c20035 	beq	a2,v0,24cc <HcdTransferData+0x268> ! to 24cc if a2==v0
    23f8:	24020002 	li	v0,2
    23fc:	14c20002 	bne	a2,v0,2408 <HcdTransferData+0x1a4> ! to 2408 if a2!=v0
    2400:	00000000 	nop
    2404:	34e70001 	ori	a3,a3,0x1			   ! a3=a3|1
2400, 2490, 24c0, 24c8, 24d0 --->
    2408:	92420033 	lbu	v0,51(s2)			   ! v0.b=hcd_ctx->ub51
    240c:	02b42821 	addu	a1,s5,s4                           ! a1=s5+s4
    2410:	afa20010 	sw	v0,16(sp)			   ! sp[16]=v0
    2414:	3c020000 	lui	v0,0x0				   ! v0=.text
			2414: R_MIPS_HI16	.text
    2418:	24421f5c 	addiu	v0,v0,8028 ! DoDataFrames
			2418: R_MIPS_LO16	.text
	DoDataFrames(hcd_ctx, a1,a2,a3,sp);
    241c:	0040f809 	jalr	v0
    2420:	02402021 	move	a0,s2
22f4 --->
    2424:	0441ffbc 	bgez	v0,2318 <HcdTransferData+0xb4> ! to 2318 if v0>=0
    2428:	8fbf0030 	lw	ra,48(sp) ! restore ra
    242c:	080008c9 	j	2324 <HcdTransferData+0xc0>
			242c: R_MIPS_26	.text
    2430:	8fb5002c 	lw	s5,44(sp) !restore s5   --> to out2
22e4 --->
    2434:	10400011 	beqz	v0,247c <HcdTransferData+0x218>
    2438:	00000000 	nop
    243c:	92420032 	lbu	v0,50(s2)
    2440:	afa20010 	sw	v0,16(sp)
    2444:	3c020000 	lui	v0,0x0
			2444: R_MIPS_HI16	.text
    2448:	02402021 	move	a0,s2
    244c:	02a02821 	move	a1,s5
    2450:	02803021 	move	a2,s4
    2454:	24421f5c 	addiu	v0,v0,8028
			2454: R_MIPS_LO16	.text
    2458:	0040f809 	jalr	v0
    245c:	02203821 	move	a3,s1
    2460:	0441ffa2 	bgez	v0,22ec <HcdTransferData+0x88>
    2464:	8fbf0030 	lw	ra,48(sp)
    2468:	080008c9 	j	2324 <HcdTransferData+0xc0>
			2468: R_MIPS_26	.text
    246c:	8fb5002c 	lw	s5,44(sp)
22cc --->
    2470:	2402fffe 	li	v0,-2    ! v0=-2
    2474:	080008b8 	j	22e0 <HcdTransferData+0x7c> ! to 22e0
			2474: R_MIPS_26	.text
    2478:	0202a024 	and	s4,s0,v0 ! s4=s0&v0
2438 --->
    247c:	08000910 	j	2440 <HcdTransferData+0x1dc>
			247c: R_MIPS_26	.text
    2480:	92420033 	lbu	v0,51(s2) ! v0=ub51
22d8 --->
    2484:	080008b8 	j	22e0 <HcdTransferData+0x7c>
			2484: R_MIPS_26	.text
    2488:	0202a024 	and	s4,s0,v0 ! s4=s0&v0

    248c:	10c4ffde 	beq	a2,a0,2408 <HcdTransferData+0x1a4>
    2490:	24020003 	li	v0,3
    2494:	080008c7 	j	231c <HcdTransferData+0xb8>
			2494: R_MIPS_26	.text
    2498:	ae600030 	sw	zero,48(s3)
    249c:	2402fffe 	li	v0,-2
    24a0:	080008e1 	j	2384 <HcdTransferData+0x120>
			24a0: R_MIPS_26	.text
    24a4:	00c23024 	and	a2,a2,v0
2380 --->
    24a8:	2402fffc 	li	v0,-4   ! v0=-4
    24ac:	080008e1 	j	2384 <HcdTransferData+0x120>
			24ac: R_MIPS_26	.text
    24b0:	00c23024 	and	a2,a2,v0 ! a2=a2&-4
23f0 --->
    24b4:	924200f8 	lbu	v0,248(s2) ! v0=hcd_ctx->ub248
    24b8:	30420004 	andi	v0,v0,0x4  ! v0=v0&0x4
    24bc:	1040ffd2 	beqz	v0,2408 <HcdTransferData+0x1a4> ! to 2408 if !v0
    24c0:	00000000 	nop
==================================
    24c4:	08000902 	j	2408 <HcdTransferData+0x1a4>
			24c4: R_MIPS_26	.text
    24c8:	34e70002 	ori	a3,a3,0x2 ! a3=a3|2
23f8 --->
    24cc:	08000902 	j	2408 <HcdTransferData+0x1a4>
			24cc: R_MIPS_26	.text
    24d0:	34e70003 	ori	a3,a3,0x3 ! a3=a3|3

000024d4 <EnableDisableSPIIRQHwDetect>:
EnableDisableSPIIRQHwDetect():
    24d4:	27bdffe0 	addiu	sp,sp,-32    ! allocate 32 bytes
    24d8:	afb00010 	sw	s0,16(sp)    ! save s0
    24dc:	afbf0018 	sw	ra,24(sp)    ! save ra
    24e0:	afb10014 	sw	s1,20(sp)    ! save s1
    24e4:	808200f8 	lb	v0,248(a0)   ! v0=hcd_ctx->b248
    24e8:	30a300ff 	andi	v1,a1,0xff   ! v1=arg1&0xff
    24ec:	00808021 	move	s0,a0        ! s0=hcd_ctx
    24f0:	00003021 	move	a2,zero      ! a2=0
    24f4:	04400009 	bltz	v0,251c <EnableDisableSPIIRQHwDetect+0x48> ! to 251c if v0<0
    24f8:	00602821 	move	a1,v1        ! a1=v1
2520 --->
    24fc:	3c190000 	lui	t9,0x0       ! t9=.text
			24fc: R_MIPS_HI16	HW_EnableDisableSPIIRQ
    2500:	02002021 	move	a0,s0        ! a0=hcd_ctx
    2504:	8fbf0018 	lw	ra,24(sp)    ! restore ra
    2508:	8fb10014 	lw	s1,20(sp)    ! restore s1
    250c:	8fb00010 	lw	s0,16(sp)    ! restore s0
    2510:	27390000 	addiu	t9,t9,0      ! t9=HW_EnableDisableSPIIRQ
			2510: R_MIPS_LO16	HW_EnableDisableSPIIRQ
// return HW_EnableDisableSPIIRQ(hcd_ctx,arg1&0xff,0)
    2514:	03200008 	jr	t9
    2518:	27bd0020 	addiu	sp,sp,32      ! dealloc stack
24f8 --->
    251c:	3c020000 	lui	v0,0x0        ! v0=.text
			251c: R_MIPS_HI16	.text
    2520:	1060fff6 	beqz	v1,24fc <EnableDisableSPIIRQHwDetect+0x28> !to 24fc if !v1
    2524:	24511da4 	addiu	s1,v0,7588  ! s1=DoPioWriteInternal
			2524: R_MIPS_LO16	.text
// call DoPioWriteInternal(hcd_ctx,3328,0);
    2528:	0220f809 	jalr	s1
    252c:	24050d00 	li	a1,3328
    2530:	3c020000 	lui	v0,0x0  ! v0=.text
			2530: R_MIPS_HI16	HW_EnableDisableSPIIRQ
    2534:	02002021 	move	a0,s0   ! a0=hcd_ctx
    2538:	24050001 	li	a1,1    ! a1=1
    253c:	24420000 	addiu	v0,v0,0
			253c: R_MIPS_LO16	HW_EnableDisableSPIIRQ
// call HW_EnableDisableSPIIRQ(hcd_ctx,1,0);
    2540:	0040f809 	jalr	v0
    2544:	00003021 	move	a2,zero
    2548:	96060012 	lhu	a2,18(s0) ! a2=hcd_ctx->ub18
    254c:	02002021 	move	a0,s0     ! a0=hcd_ctx
    2550:	0220c821 	move	t9,s1     ! t9=DoPioWriteInternal
    2554:	8fbf0018 	lw	ra,24(sp) ! restore ra
    2558:	8fb10014 	lw	s1,20(sp) ! restore s1
    255c:	8fb00010 	lw	s0,16(sp) ! restore s0
    2560:	24050d00 	li	a1,3328   ! a1=3328
    2564:	03200008 	jr	t9        ! return DoPioWriteInternal(hcd_ctx,3328,ub18);
    2568:	27bd0020 	addiu	sp,sp,32  ! deallocate stack

0000256c <DoDMAOp>:
DoDMAOp():
    256c:	27bdffc8 	addiu	sp,sp,-56
    2570:	afb5002c 	sw	s5,44(sp)
    2574:	afb30024 	sw	s3,36(sp)
    2578:	afb00018 	sw	s0,24(sp)
    257c:	afbf0030 	sw	ra,48(sp)
    2580:	afb40028 	sw	s4,40(sp)
    2584:	afb20020 	sw	s2,32(sp)
    2588:	afb1001c 	sw	s1,28(sp)
    258c:	8ca60030 	lw	a2,48(a1)
    2590:	3c020000 	lui	v0,0x0
			2590: R_MIPS_HI16	.text
    2594:	00a09821 	move	s3,a1
    2598:	24421da4 	addiu	v0,v0,7588
			2598: R_MIPS_LO16	.text
    259c:	24050100 	li	a1,256
    25a0:	0040f809 	jalr	v0
    25a4:	0080a821 	move	s5,a0
    25a8:	04400018 	bltz	v0,260c <DoDMAOp+0xa0>
    25ac:	00408021 	move	s0,v0
    25b0:	96620010 	lhu	v0,16(s3)
    25b4:	30420080 	andi	v0,v0,0x80
    25b8:	1040004d 	beqz	v0,26f0 <DoDMAOp+0x184>
    25bc:	3c020000 	lui	v0,0x0
			25bc: R_MIPS_HI16	.text
    25c0:	24541d24 	addiu	s4,v0,7460
			25c0: R_MIPS_LO16	.text
    25c4:	24110064 	li	s1,100
    25c8:	27b20010 	addiu	s2,sp,16
    25cc:	0800097c 	j	25f0 <DoDMAOp+0x84>
			25cc: R_MIPS_26	.text
    25d0:	afa00010 	sw	zero,16(sp)
    25d4:	8e620030 	lw	v0,48(s3)
    25d8:	8fa30010 	lw	v1,16(sp)
    25dc:	0062102b 	sltu	v0,v1,v0
    25e0:	10400014 	beqz	v0,2634 <DoDMAOp+0xc8>
    25e4:	00000000 	nop
    25e8:	12200008 	beqz	s1,260c <DoDMAOp+0xa0>
    25ec:	2410ffff 	li	s0,-1
    25f0:	02a02021 	move	a0,s5
    25f4:	24050300 	li	a1,768
    25f8:	0280f809 	jalr	s4
    25fc:	02403021 	move	a2,s2
    2600:	2631ffff 	addiu	s1,s1,-1
    2604:	0441fff3 	bgez	v0,25d4 <DoDMAOp+0x68>
    2608:	00408021 	move	s0,v0
    260c:	02001021 	move	v0,s0
    2610:	8fbf0030 	lw	ra,48(sp)
    2614:	8fb5002c 	lw	s5,44(sp)
    2618:	8fb40028 	lw	s4,40(sp)
    261c:	8fb30024 	lw	s3,36(sp)
    2620:	8fb20020 	lw	s2,32(sp)
    2624:	8fb1001c 	lw	s1,28(sp)
    2628:	8fb00018 	lw	s0,24(sp)
    262c:	03e00008 	jr	ra
    2630:	27bd0038 	addiu	sp,sp,56
    2634:	96650018 	lhu	a1,24(s3)
    2638:	34a58000 	ori	a1,a1,0x8000
    263c:	3c020000 	lui	v0,0x0
			263c: R_MIPS_HI16	HW_InOut_Token
    2640:	02a02021 	move	a0,s5
    2644:	24060001 	li	a2,1
    2648:	24420000 	addiu	v0,v0,0
			2648: R_MIPS_LO16	HW_InOut_Token
    264c:	0040f809 	jalr	v0
    2650:	00003821 	move	a3,zero
    2654:	0440ffed 	bltz	v0,260c <DoDMAOp+0xa0>
    2658:	00408021 	move	s0,v0
    265c:	92a200f9 	lbu	v0,249(s5)
    2660:	30420004 	andi	v0,v0,0x4
    2664:	10400006 	beqz	v0,2680 <DoDMAOp+0x114>
    2668:	3c020000 	lui	v0,0x0
			2668: R_MIPS_HI16	.text
    266c:	96620010 	lhu	v0,16(s3)
    2670:	30420080 	andi	v0,v0,0x80
    2674:	10400020 	beqz	v0,26f8 <DoDMAOp+0x18c>
    2678:	00000000 	nop
    267c:	3c020000 	lui	v0,0x0
			267c: R_MIPS_HI16	.text
    2680:	02602821 	move	a1,s3
    2684:	24422264 	addiu	v0,v0,8804
			2684: R_MIPS_LO16	.text
    2688:	0040f809 	jalr	v0
    268c:	02a02021 	move	a0,s5
    2690:	00408021 	move	s0,v0
    2694:	24020003 	li	v0,3
    2698:	1602ffdc 	bne	s0,v0,260c <DoDMAOp+0xa0>
    269c:	24020001 	li	v0,1
    26a0:	a2a2001a 	sb	v0,26(s5)
    26a4:	3c020000 	lui	v0,0x0
			26a4: R_MIPS_HI16	.text
    26a8:	02a02021 	move	a0,s5
    26ac:	244224d4 	addiu	v0,v0,9428
			26ac: R_MIPS_LO16	.text
    26b0:	0040f809 	jalr	v0
    26b4:	00002821 	move	a1,zero
    26b8:	3c020000 	lui	v0,0x0
			26b8: R_MIPS_HI16	HW_StartDMA
    26bc:	24420000 	addiu	v0,v0,0
			26bc: R_MIPS_LO16	HW_StartDMA
    26c0:	0040f809 	jalr	v0
    26c4:	02a02021 	move	a0,s5
    26c8:	02001021 	move	v0,s0
    26cc:	8fbf0030 	lw	ra,48(sp)
    26d0:	8fb5002c 	lw	s5,44(sp)
    26d4:	8fb40028 	lw	s4,40(sp)
    26d8:	8fb30024 	lw	s3,36(sp)
    26dc:	8fb20020 	lw	s2,32(sp)
    26e0:	8fb1001c 	lw	s1,28(sp)
    26e4:	8fb00018 	lw	s0,24(sp)
    26e8:	03e00008 	jr	ra
    26ec:	27bd0038 	addiu	sp,sp,56
    26f0:	0800098f 	j	263c <DoDMAOp+0xd0>
			26f0: R_MIPS_26	.text
    26f4:	96650018 	lhu	a1,24(s3)
    26f8:	8ea20024 	lw	v0,36(s5)
    26fc:	24420001 	addiu	v0,v0,1
    2700:	0800099f 	j	267c <DoDMAOp+0x110>
			2700: R_MIPS_26	.text
    2704:	aea20024 	sw	v0,36(s5)

00002708 <HcdTimerCallback>:
HcdTimerCallback():
    2708:	27bdffe0 	addiu	sp,sp,-32
    270c:	24020001 	li	v0,1
    2710:	afb10014 	sw	s1,20(sp)
    2714:	afbf0018 	sw	ra,24(sp)
    2718:	afb00010 	sw	s0,16(sp)
    271c:	10a20006 	beq	a1,v0,2738 <HcdTimerCallback+0x30>
    2720:	00808821 	move	s1,a0
    2724:	8fbf0018 	lw	ra,24(sp)
    2728:	8fb10014 	lw	s1,20(sp)
    272c:	8fb00010 	lw	s0,16(sp)
    2730:	03e00008 	jr	ra
    2734:	27bd0020 	addiu	sp,sp,32
    2738:	8c900088 	lw	s0,136(a0)
    273c:	1200fff9 	beqz	s0,2724 <HcdTimerCallback+0x1c>
    2740:	02002021 	move	a0,s0
    2744:	3c020000 	lui	v0,0x0
			2744: R_MIPS_HI16	.text
    2748:	24421b40 	addiu	v0,v0,6976
			2748: R_MIPS_LO16	.text
    274c:	0040f809 	jalr	v0
    2750:	00000000 	nop
    2754:	2403fff5 	li	v1,-11
    2758:	ae030040 	sw	v1,64(s0)
    275c:	3c190000 	lui	t9,0x0
			275c: R_MIPS_HI16	HW_QueueDeferredCompletion
    2760:	02202021 	move	a0,s1
    2764:	8fbf0018 	lw	ra,24(sp)
    2768:	8fb10014 	lw	s1,20(sp)
    276c:	8fb00010 	lw	s0,16(sp)
    2770:	27390000 	addiu	t9,t9,0
			2770: R_MIPS_LO16	HW_QueueDeferredCompletion
    2774:	03200008 	jr	t9
    2778:	27bd0020 	addiu	sp,sp,32

0000277c <HcdCommonBufferCopy>:
HcdCommonBufferCopy():
    277c:	93a20010 	lbu	v0,16(sp)
    2780:	00a05821 	move	t3,a1
    2784:	308800ff 	andi	t0,a0,0xff
    2788:	00c02821 	move	a1,a2
    278c:	1040000b 	beqz	v0,27bc <HcdCommonBufferCopy+0x40>
    2790:	00e03021 	move	a2,a3
    2794:	1100000a 	beqz	t0,27c0 <HcdCommonBufferCopy+0x44>
    2798:	3c190000 	lui	t9,0x0
			2798: R_MIPS_HI16	memcpy
    279c:	24020003 	li	v0,3
    27a0:	11020030 	beq	t0,v0,2864 <HcdCommonBufferCopy+0xe8>
    27a4:	31640003 	andi	a0,t3,0x3
    27a8:	24020001 	li	v0,1
    27ac:	11020007 	beq	t0,v0,27cc <HcdCommonBufferCopy+0x50>
    27b0:	31620001 	andi	v0,t3,0x1
    27b4:	03e00008 	jr	ra
    27b8:	00000000 	nop
    27bc:	3c190000 	lui	t9,0x0
			27bc: R_MIPS_HI16	memcpy
    27c0:	27390000 	addiu	t9,t9,0
			27c0: R_MIPS_LO16	memcpy
    27c4:	03200008 	jr	t9
    27c8:	01602021 	move	a0,t3
    27cc:	24030002 	li	v1,2
    27d0:	0002180a 	movz	v1,zero,v0
    27d4:	30a40001 	andi	a0,a1,0x1
    27d8:	00644825 	or	t1,v1,a0
    27dc:	1120003e 	beqz	t1,28d8 <HcdCommonBufferCopy+0x15c>
    27e0:	01604021 	move	t0,t3
    27e4:	00063043 	sra	a2,a2,0x1
    27e8:	18c0fff2 	blez	a2,27b4 <HcdCommonBufferCopy+0x38>
    27ec:	24070001 	li	a3,1
    27f0:	00005021 	move	t2,zero
    27f4:	11270009 	beq	t1,a3,281c <HcdCommonBufferCopy+0xa0>
    27f8:	240b0002 	li	t3,2
    27fc:	112b0010 	beq	t1,t3,2840 <HcdCommonBufferCopy+0xc4>
    2800:	00000000 	nop
    2804:	254a0001 	addiu	t2,t2,1
    2808:	24a50002 	addiu	a1,a1,2
    280c:	1146ffe9 	beq	t2,a2,27b4 <HcdCommonBufferCopy+0x38>
    2810:	25080002 	addiu	t0,t0,2
    2814:	1527fff9 	bne	t1,a3,27fc <HcdCommonBufferCopy+0x80>
    2818:	00000000 	nop
    281c:	90a20001 	lbu	v0,1(a1)
    2820:	90a30000 	lbu	v1,0(a1)
    2824:	00021200 	sll	v0,v0,0x8
    2828:	00431025 	or	v0,v0,v1
    282c:	00022202 	srl	a0,v0,0x8
    2830:	00021200 	sll	v0,v0,0x8
    2834:	00441025 	or	v0,v0,a0
    2838:	08000a01 	j	2804 <HcdCommonBufferCopy+0x88>
			2838: R_MIPS_26	.text
    283c:	a5020000 	sh	v0,0(t0)
    2840:	94a20000 	lhu	v0,0(a1)
    2844:	00021a02 	srl	v1,v0,0x8
    2848:	00021200 	sll	v0,v0,0x8
    284c:	00431025 	or	v0,v0,v1
    2850:	3042ffff 	andi	v0,v0,0xffff
    2854:	00021a02 	srl	v1,v0,0x8
    2858:	a1030001 	sb	v1,1(t0)
    285c:	08000a01 	j	2804 <HcdCommonBufferCopy+0x88>
			285c: R_MIPS_26	.text
    2860:	a1020000 	sb	v0,0(t0)
    2864:	24030002 	li	v1,2
    2868:	30a20003 	andi	v0,a1,0x3
    286c:	0004180a 	movz	v1,zero,a0
    2870:	0002102b 	sltu	v0,zero,v0
    2874:	00621825 	or	v1,v1,v0
    2878:	00a05021 	move	t2,a1
    287c:	14600024 	bnez	v1,2910 <HcdCommonBufferCopy+0x194>
    2880:	01604821 	move	t1,t3
    2884:	00073083 	sra	a2,a3,0x2
    2888:	18c0ffca 	blez	a2,27b4 <HcdCommonBufferCopy+0x38>
    288c:	00004021 	move	t0,zero
    2890:	3c0700ff 	lui	a3,0xff
    2894:	8d420000 	lw	v0,0(t2)
    2898:	25080001 	addiu	t0,t0,1
    289c:	00021e00 	sll	v1,v0,0x18
    28a0:	00022e02 	srl	a1,v0,0x18
    28a4:	3044ff00 	andi	a0,v0,0xff00
    28a8:	00651825 	or	v1,v1,a1
    28ac:	00042200 	sll	a0,a0,0x8
    28b0:	00471024 	and	v0,v0,a3
    28b4:	00641825 	or	v1,v1,a0
    28b8:	00021202 	srl	v0,v0,0x8
    28bc:	00621825 	or	v1,v1,v0
    28c0:	ad230000 	sw	v1,0(t1)
    28c4:	254a0004 	addiu	t2,t2,4
    28c8:	14c8fff2 	bne	a2,t0,2894 <HcdCommonBufferCopy+0x118>
    28cc:	25290004 	addiu	t1,t1,4
    28d0:	03e00008 	jr	ra
    28d4:	00000000 	nop
    28d8:	00063043 	sra	a2,a2,0x1
    28dc:	18c0ffb5 	blez	a2,27b4 <HcdCommonBufferCopy+0x38>
    28e0:	00002021 	move	a0,zero
    28e4:	94a20000 	lhu	v0,0(a1)
    28e8:	24840001 	addiu	a0,a0,1
    28ec:	00021a02 	srl	v1,v0,0x8
    28f0:	00021200 	sll	v0,v0,0x8
    28f4:	00431025 	or	v0,v0,v1
    28f8:	a5020000 	sh	v0,0(t0)
    28fc:	24a50002 	addiu	a1,a1,2
    2900:	1486fff8 	bne	a0,a2,28e4 <HcdCommonBufferCopy+0x168>
    2904:	25080002 	addiu	t0,t0,2
    2908:	03e00008 	jr	ra
    290c:	00000000 	nop
    2910:	00071083 	sra	v0,a3,0x2
    2914:	1840ffa7 	blez	v0,27b4 <HcdCommonBufferCopy+0x38>
    2918:	24020001 	li	v0,1
    291c:	10620010 	beq	v1,v0,2960 <HcdCommonBufferCopy+0x1e4>
    2920:	24020002 	li	v0,2
    2924:	1462ffa1 	bne	v1,v0,27ac <HcdCommonBufferCopy+0x30>
    2928:	24020001 	li	v0,1
    292c:	8ca20000 	lw	v0,0(a1)
    2930:	304500ff 	andi	a1,v0,0xff
    2934:	00022202 	srl	a0,v0,0x8
    2938:	3043ff00 	andi	v1,v0,0xff00
    293c:	3084ff00 	andi	a0,a0,0xff00
    2940:	00031a02 	srl	v1,v1,0x8
    2944:	00052a00 	sll	a1,a1,0x8
    2948:	00021602 	srl	v0,v0,0x18
    294c:	00822025 	or	a0,a0,v0
    2950:	00651825 	or	v1,v1,a1
    2954:	a5630002 	sh	v1,2(t3)
    2958:	03e00008 	jr	ra
    295c:	a5640000 	sh	a0,0(t3)
    2960:	94a20000 	lhu	v0,0(a1)
    2964:	94a50002 	lhu	a1,2(a1)
    2968:	3044ff00 	andi	a0,v0,0xff00
    296c:	30a300ff 	andi	v1,a1,0xff
    2970:	00042200 	sll	a0,a0,0x8
    2974:	00021600 	sll	v0,v0,0x18
    2978:	00441025 	or	v0,v0,a0
    297c:	00031a00 	sll	v1,v1,0x8
    2980:	00431025 	or	v0,v0,v1
    2984:	00052a02 	srl	a1,a1,0x8
    2988:	00451025 	or	v0,v0,a1
    298c:	03e00008 	jr	ra
    2990:	ad620000 	sw	v0,0(t3)

00002994 <HcdInitialize>:
HcdInitialize():
    2994:	27bdffc8 	addiu	sp,sp,-56
    2998:	afb00020 	sw	s0,32(sp)
    299c:	afbf0034 	sw	ra,52(sp)
    29a0:	afb40030 	sw	s4,48(sp)
    29a4:	afb3002c 	sw	s3,44(sp)
    29a8:	afb20028 	sw	s2,40(sp)
    29ac:	afb10024 	sw	s1,36(sp)
    29b0:	908300f8 	lbu	v1,248(a0)
    29b4:	00808021 	move	s0,a0
    29b8:	30620003 	andi	v0,v1,0x3
    29bc:	1440000c 	bnez	v0,29f0 <HcdInitialize+0x5c>
    29c0:	afa00010 	sw	zero,16(sp)
    29c4:	2402ffdc 	li	v0,-36
    29c8:	afa20010 	sw	v0,16(sp)
    29cc:	8fa20010 	lw	v0,16(sp)
    29d0:	8fbf0034 	lw	ra,52(sp)
    29d4:	8fb40030 	lw	s4,48(sp)
    29d8:	8fb3002c 	lw	s3,44(sp)
    29dc:	8fb20028 	lw	s2,40(sp)
    29e0:	8fb10024 	lw	s1,36(sp)
    29e4:	8fb00020 	lw	s0,32(sp)
    29e8:	03e00008 	jr	ra
    29ec:	27bd0038 	addiu	sp,sp,56
    29f0:	30620008 	andi	v0,v1,0x8
    29f4:	24030001 	li	v1,1
    29f8:	a0800032 	sb	zero,50(a0)
    29fc:	1040009b 	beqz	v0,2c6c <HcdInitialize+0x2d8>
    2a00:	a0830033 	sb	v1,51(a0)
    2a04:	24020003 	li	v0,3
    2a08:	a0820018 	sb	v0,24(a0)
    2a0c:	a0820017 	sb	v0,23(a0)
    2a10:	8e04003c 	lw	a0,60(s0)
    2a14:	3c02016e 	lui	v0,0x16e
    2a18:	344335ff 	ori	v1,v0,0x35ff
    2a1c:	0064182b 	sltu	v1,v1,a0
    2a20:	34453601 	ori	a1,v0,0x3601
    2a24:	34423600 	ori	v0,v0,0x3600
    2a28:	0083100a 	movz	v0,a0,v1
    2a2c:	0085202b 	sltu	a0,a0,a1
    2a30:	afa20014 	sw	v0,20(sp)
    2a34:	14800003 	bnez	a0,2a44 <HcdInitialize+0xb0>
    2a38:	a6000014 	sh	zero,20(s0)
    2a3c:	24020200 	li	v0,512
    2a40:	a6020014 	sh	v0,20(s0)
    2a44:	8fa60014 	lw	a2,20(sp)
    2a48:	3c050000 	lui	a1,0x0
			2a48: R_MIPS_HI16	.rodata
    2a4c:	3c040000 	lui	a0,0x0
			2a4c: R_MIPS_HI16	$LC11
    2a50:	3c020000 	lui	v0,0x0
			2a50: R_MIPS_HI16	printk
    2a54:	24a500d0 	addiu	a1,a1,208
			2a54: R_MIPS_LO16	.rodata
    2a58:	24840000 	addiu	a0,a0,0
			2a58: R_MIPS_LO16	$LC11
    2a5c:	24420000 	addiu	v0,v0,0
			2a5c: R_MIPS_LO16	printk
    2a60:	0040f809 	jalr	v0
    2a64:	3c140000 	lui	s4,0x0
			2a64: R_MIPS_HI16	HW_SetClock
    2a68:	02002021 	move	a0,s0
    2a6c:	26820000 	addiu	v0,s4,0
			2a6c: R_MIPS_LO16	HW_SetClock
    2a70:	0040f809 	jalr	v0
    2a74:	27a50014 	addiu	a1,sp,20
    2a78:	96030014 	lhu	v1,20(s0)
    2a7c:	92040018 	lbu	a0,24(s0)
    2a80:	34630080 	ori	v1,v1,0x80
    2a84:	24020003 	li	v0,3
    2a88:	10820086 	beq	a0,v0,2ca4 <HcdInitialize+0x310>
    2a8c:	a6030014 	sh	v1,20(s0)
    2a90:	24020001 	li	v0,1
    2a94:	10820086 	beq	a0,v0,2cb0 <HcdInitialize+0x31c>
    2a98:	34620006 	ori	v0,v1,0x6
    2a9c:	8e030038 	lw	v1,56(s0)
    2aa0:	3c046666 	lui	a0,0x6666
    2aa4:	34846667 	ori	a0,a0,0x6667
    2aa8:	96020014 	lhu	v0,20(s0)
    2aac:	00640018 	mult	v1,a0
    2ab0:	34420018 	ori	v0,v0,0x18
    2ab4:	00002010 	mfhi	a0
    2ab8:	a6020014 	sh	v0,20(s0)
    2abc:	00031fc3 	sra	v1,v1,0x1f
    2ac0:	8f850000 	lw	a1,0(gp)
    2ac4:	00042083 	sra	a0,a0,0x2
    2ac8:	24020001 	li	v0,1
    2acc:	00832023 	subu	a0,a0,v1
    2ad0:	aca20000 	sw	v0,0(a1)
    2ad4:	0044200a 	movz	a0,v0,a0
    2ad8:	3c020000 	lui	v0,0x0
			2ad8: R_MIPS_HI16	schedule_timeout
    2adc:	24420000 	addiu	v0,v0,0
			2adc: R_MIPS_LO16	schedule_timeout
    2ae0:	0040f809 	jalr	v0
    2ae4:	3c110000 	lui	s1,0x0
			2ae4: R_MIPS_HI16	.text
    2ae8:	02002021 	move	a0,s0
    2aec:	24050400 	li	a1,1024
    2af0:	26221da4 	addiu	v0,s1,7588
			2af0: R_MIPS_LO16	.text
    2af4:	0040f809 	jalr	v0
    2af8:	34068000 	li	a2,0x8000
    2afc:	3c130000 	lui	s3,0x0
			2afc: R_MIPS_HI16	cpu_data
    2b00:	8e630000 	lw	v1,0(s3)
			2b00: R_MIPS_LO16	cpu_data
    2b04:	afa20010 	sw	v0,16(sp)
    2b08:	3c021999 	lui	v0,0x1999
    2b0c:	34449aa8 	ori	a0,v0,0x9aa8
    2b10:	24050009 	li	a1,9
    2b14:	2406ffff 	li	a2,-1
    2b18:	00830019 	multu	a0,v1
    2b1c:	00001010 	mfhi	v0
    2b20:	1440ffff 	bnez	v0,2b20 <HcdInitialize+0x18c>
    2b24:	2442ffff 	addiu	v0,v0,-1
    2b28:	24a5ffff 	addiu	a1,a1,-1
    2b2c:	14a6fffa 	bne	a1,a2,2b18 <HcdInitialize+0x184>
    2b30:	26221da4 	addiu	v0,s1,7588
			2b30: R_MIPS_LO16	.text
    2b34:	96060014 	lhu	a2,20(s0)
    2b38:	02002021 	move	a0,s0
    2b3c:	0040f809 	jalr	v0
    2b40:	24050400 	li	a1,1024
    2b44:	0440ffa1 	bltz	v0,29cc <HcdInitialize+0x38>
    2b48:	afa20010 	sw	v0,16(sp)
    2b4c:	27b10010 	addiu	s1,sp,16
    2b50:	3c120000 	lui	s2,0x0
			2b50: R_MIPS_HI16	.text
    2b54:	02203021 	move	a2,s1
    2b58:	24050400 	li	a1,1024
    2b5c:	26421d24 	addiu	v0,s2,7460
			2b5c: R_MIPS_LO16	.text
    2b60:	0040f809 	jalr	v0
    2b64:	02002021 	move	a0,s0
    2b68:	02002021 	move	a0,s0
    2b6c:	26820000 	addiu	v0,s4,0
			2b6c: R_MIPS_LO16	HW_SetClock
    2b70:	0040f809 	jalr	v0
    2b74:	2605003c 	addiu	a1,s0,60
    2b78:	3c021999 	lui	v0,0x1999
    2b7c:	8e630000 	lw	v1,0(s3)
			2b7c: R_MIPS_LO16	cpu_data
    2b80:	34449aa8 	ori	a0,v0,0x9aa8
    2b84:	24050009 	li	a1,9
    2b88:	2406ffff 	li	a2,-1
    2b8c:	00830019 	multu	a0,v1
    2b90:	00001010 	mfhi	v0
    2b94:	00000000 	nop
    2b98:	1440ffff 	bnez	v0,2b98 <HcdInitialize+0x204>
    2b9c:	2442ffff 	addiu	v0,v0,-1
    2ba0:	24a5ffff 	addiu	a1,a1,-1
    2ba4:	14a6fff9 	bne	a1,a2,2b8c <HcdInitialize+0x1f8>
    2ba8:	00000000 	nop
    2bac:	02203021 	move	a2,s1
    2bb0:	24050400 	li	a1,1024
    2bb4:	26511d24 	addiu	s1,s2,7460
			2bb4: R_MIPS_LO16	.text
    2bb8:	0220f809 	jalr	s1
    2bbc:	02002021 	move	a0,s0
    2bc0:	02002021 	move	a0,s0
    2bc4:	24050200 	li	a1,512
    2bc8:	0220f809 	jalr	s1
    2bcc:	2606001c 	addiu	a2,s0,28
    2bd0:	0440ff7e 	bltz	v0,29cc <HcdInitialize+0x38>
    2bd4:	afa20010 	sw	v0,16(sp)
    2bd8:	8e02001c 	lw	v0,28(s0)
    2bdc:	02002021 	move	a0,s0
    2be0:	ae020020 	sw	v0,32(s0)
    2be4:	24050400 	li	a1,1024
    2be8:	27a60018 	addiu	a2,sp,24
    2bec:	0220f809 	jalr	s1
    2bf0:	afa00018 	sw	zero,24(sp)
    2bf4:	0440ff75 	bltz	v0,29cc <HcdInitialize+0x38>
    2bf8:	afa20010 	sw	v0,16(sp)
    2bfc:	8fa30018 	lw	v1,24(sp)
    2c00:	3402ffff 	li	v0,0xffff
    2c04:	1062001c 	beq	v1,v0,2c78 <HcdInitialize+0x2e4>
    2c08:	3c020000 	lui	v0,0x0
			2c08: R_MIPS_HI16	.text
    2c0c:	24421eb0 	addiu	v0,v0,7856
			2c0c: R_MIPS_LO16	.text
    2c10:	0040f809 	jalr	v0
    2c14:	02002021 	move	a0,s0
    2c18:	0440ff6c 	bltz	v0,29cc <HcdInitialize+0x38>
    2c1c:	afa20010 	sw	v0,16(sp)
    2c20:	3c020000 	lui	v0,0x0
			2c20: R_MIPS_HI16	.text
    2c24:	02002021 	move	a0,s0
    2c28:	24421f3c 	addiu	v0,v0,7996
			2c28: R_MIPS_LO16	.text
    2c2c:	0040f809 	jalr	v0
    2c30:	2405000e 	li	a1,14
    2c34:	3c020000 	lui	v0,0x0
			2c34: R_MIPS_HI16	.text
    2c38:	02002021 	move	a0,s0
    2c3c:	244224d4 	addiu	v0,v0,9428
			2c3c: R_MIPS_LO16	.text
    2c40:	0040f809 	jalr	v0
    2c44:	24050001 	li	a1,1
    2c48:	8fa20010 	lw	v0,16(sp)
    2c4c:	8fbf0034 	lw	ra,52(sp)
    2c50:	8fb40030 	lw	s4,48(sp)
    2c54:	8fb3002c 	lw	s3,44(sp)
    2c58:	8fb20028 	lw	s2,40(sp)
    2c5c:	8fb10024 	lw	s1,36(sp)
    2c60:	8fb00020 	lw	s0,32(sp)
    2c64:	03e00008 	jr	ra
    2c68:	27bd0038 	addiu	sp,sp,56
    2c6c:	a0830018 	sb	v1,24(a0)
    2c70:	08000a84 	j	2a10 <HcdInitialize+0x7c>
			2c70: R_MIPS_26	.text
    2c74:	a0830017 	sb	v1,23(a0)
    2c78:	2402fffb 	li	v0,-5
    2c7c:	afa20010 	sw	v0,16(sp)
    2c80:	8fa20010 	lw	v0,16(sp)
    2c84:	8fbf0034 	lw	ra,52(sp)
    2c88:	8fb40030 	lw	s4,48(sp)
    2c8c:	8fb3002c 	lw	s3,44(sp)
    2c90:	8fb20028 	lw	s2,40(sp)
    2c94:	8fb10024 	lw	s1,36(sp)
    2c98:	8fb00020 	lw	s0,32(sp)
    2c9c:	03e00008 	jr	ra
    2ca0:	27bd0038 	addiu	sp,sp,56
    2ca4:	34620004 	ori	v0,v1,0x4
    2ca8:	08000aa7 	j	2a9c <HcdInitialize+0x108>
			2ca8: R_MIPS_26	.text
    2cac:	a6020014 	sh	v0,20(s0)
    2cb0:	08000aa7 	j	2a9c <HcdInitialize+0x108>
			2cb0: R_MIPS_26	.text
    2cb4:	a6020014 	sh	v0,20(s0)

// void HcdDmaCompletion(hcd_ctx, x);
00002cb8 <HcdDmaCompletion>:
HcdDmaCompletion():
    2cb8:	27bdffe0 	addiu	sp,sp,-32    ! allocate 32 bytes on stack
    2cbc:	afb20018 	sw	s2,24(sp)    ! save s2
    2cc0:	afb00010 	sw	s0,16(sp)    ! save s0
    2cc4:	afbf001c 	sw	ra,28(sp)    ! save ra
    2cc8:	afb10014 	sw	s1,20(sp)    ! save s1
    2ccc:	8c910088 	lw	s1,136(a0)   ! s1=hcd_ctx->pHcd.pCurrentRequest
    2cd0:	00809021 	move	s2,a0        ! s2=hcd_ctx
    2cd4:	12200023 	beqz	s1,2d64 <HcdDmaCompletion+0xac> ! to out if !pCurrentRequest
    2cd8:	00a08021 	move	s0,a1        ! s0=arg1
    2cdc:	3c020000 	lui	v0,0x0
			2cdc: R_MIPS_HI16	local_bh_disable
    2ce0:	24420000 	addiu	v0,v0,0
			2ce0: R_MIPS_LO16	local_bh_disable
// local_bh_disable()
    2ce4:	0040f809 	jalr	v0         ! local_bh_disable
    2ce8:	00000000 	nop
    2cec:	8f820014 	lw	v0,20(gp)
    2cf0:	24420001 	addiu	v0,v0,1
    2cf4:	af820014 	sw	v0,20(gp)
    2cf8:	40026000 	mfc0	v0,c0_status
    2cfc:	30420001 	andi	v0,v0,0x1
    2d00:	10400027 	beqz	v0,2da0 <HcdDmaCompletion+0xe8>
    2d04:	3c040000 	lui	a0,0x0
			2d04: R_MIPS_HI16	$LC12

2dd0  ------->
!    2d08:	06000005 	bltz	s0,2d20 <HcdDmaCompletion+0x68>  ! to 2d20 if arg1<0
!    2d0c:	24020003 	li	v0,3				 ! v0=3
---------------------------------------------
!    2d10:	8e220030 	lw	v0,48(s1)                        ! v0=prequest->pHcdContext;
!    2d14:	1440003d 	bnez	v0,2e0c <HcdDmaCompletion+0x154> ! to 2e0c if pHcdContext, call HcdTransferData
!    2d18:	3c020000 	lui	v0,0x0				 ! v0=.text
			2d18: R_MIPS_HI16	.text
2e20 ----->
    2d1c:	24020003 	li	v0,3				 ! v0=3
2d0c ----->
    2d20:	1202002c 	beq	s0,v0,2dd4 <HcdDmaCompletion+0x11c> ! to 2dd4 if arg1==3
    2d24:	3c020000 	lui	v0,0x0
			2d24: R_MIPS_HI16	.text
    2d28:	a240001a 	sb	zero,26(s2)                      ! hcd_ctx->b26
    2d2c:	02402021 	move	a0,s2                            ! a0=hcd_ctx
    2d30:	ae300040 	sw	s0,64(s1)                        ! pRequest->status=s0
    2d34:	244224d4 	addiu	v0,v0,9428                       ! v0=EnableDisableSPIIRQHwDetect
			2d34: R_MIPS_LO16	.text
// EnableDisableSPIIRQHwDetect(hcd_ctx,1);
    2d38:	0040f809 	jalr	v0
    2d3c:	24050001 	li	a1,1
------------------------------------------------------
    2d40:	24100001 	li	s0,1                             ! s0=1
2e08 ---------->
    2d44:	8f830014 	lw	v1,20(gp)
    2d48:	3c040000 	lui	a0,0x0
			2d48: R_MIPS_HI16	local_bh_enable
    2d4c:	2463ffff 	addiu	v1,v1,-1
    2d50:	24840000 	addiu	a0,a0,0
			2d50: R_MIPS_LO16	local_bh_enable
// local_bh_enable()
    2d54:	0080f809 	jalr	a0
    2d58:	af830014 	sw	v1,20(gp)

    2d5c:	16000007 	bnez	s0,2d7c <HcdDmaCompletion+0xc4> ! to 2d7c if  arg1
    2d60:	3c190000 	lui	t9,0x0
			2d60: R_MIPS_HI16	SDIO_HandleHcdEvent
2cd4  --->
    2d64:	8fbf001c 	lw	ra,28(sp)   ! restore ra
    2d68:	8fb20018 	lw	s2,24(sp)   ! restore s2
    2d6c:	8fb10014 	lw	s1,20(sp)   ! restore s1
    2d70:	8fb00010 	lw	s0,16(sp)   ! restore s0
    2d74:	03e00008 	jr	ra          ! return
    2d78:	27bd0020 	addiu	sp,sp,32    ! deallocate stack
2d60 --->
    2d7c:	26440044 	addiu	a0,s2,68    ! a0=&hcd_ctx->pHcd
    2d80:	8fbf001c 	lw	ra,28(sp)   ! restore ra
    2d84:	8fb20018 	lw	s2,24(sp)   ! restore s2
    2d88:	8fb10014 	lw	s1,20(sp)   ! restore s1
    2d8c:	8fb00010 	lw	s0,16(sp)   ! restore s0
    2d90:	24050004 	li	a1,4        ! a1=4
    2d94:	27390000 	addiu	t9,t9,0
			2d94: R_MIPS_LO16	SDIO_HandleHcdEvent
// SDIO_HandleHcdEvent(hcd_ctx->pHcd, 4);
    2d98:	03200008 	jr	t9
    2d9c:	27bd0020 	addiu	sp,sp,32   ! deallocate stack

2d04 --->
!    2da0:	3c020000 	lui	v0,0x0
			2da0: R_MIPS_HI16	printk
!    2da4:	24420000 	addiu	v0,v0,0
			2da4: R_MIPS_LO16	printk
//printk("Colman: Re-enable IRQ");
!    2da8:	0040f809 	jalr	v0
!    2dac:	24840000 	addiu	a0,a0,0
			2dac: R_MIPS_LO16	$LC12
!    2db0:	40016000 	mfc0	at,c0_status
!    2db4:	3421001f 	ori	at,at,0x1f
!    2db8:	3821001e 	xori	at,at,0x1e
!    2dbc:	40816000 	mtc0	at,c0_status
!    2dc0:	00000040 	ssnop
!    2dc4:	00000040 	ssnop
!    2dc8:	00000040 	ssnop
!    2dcc:	08000b42 	j	2d08 <HcdDmaCompletion+0x50>   ! to 2d08
			2dcc: R_MIPS_26	.text
!    2dd0:	000000c0 	sll	zero,zero,0x3

2d24 ----->
    2dd4:	3c050000 	lui	a1,0x0
			2dd4: R_MIPS_HI16	.rodata
    2dd8:	3c040000 	lui	a0,0x0
			2dd8: R_MIPS_HI16	$LC13
    2ddc:	3c020000 	lui	v0,0x0
			2ddc: R_MIPS_HI16	printk
    2de0:	24a500e0 	addiu	a1,a1,224
			2de0: R_MIPS_LO16	.rodata
    2de4:	24840000 	addiu	a0,a0,0
			2de4: R_MIPS_LO16	$LC13
    2de8:	24420000 	addiu	v0,v0,0
			2de8: R_MIPS_LO16	printk
// printk("====>call HW_StartDMA: %s: %d\n", __FUNCTION__, 377);
    2dec:	0040f809 	jalr	v0
    2df0:	24060179 	li	a2,377
    2df4:	3c020000 	lui	v0,0x0
			2df4: R_MIPS_HI16	HW_StartDMA
    2df8:	24420000 	addiu	v0,v0,0
			2df8: R_MIPS_LO16	HW_StartDMA
// HW_StartDMA(hcd_ctx);
    2dfc:	0040f809 	jalr	v0
    2e00:	02402021 	move	a0,s2         ! a0=hcd_ctx
    2e04:	08000b51 	j	2d44 <HcdDmaCompletion+0x8c>
			2e04: R_MIPS_26	.text
    2e08:	00008021 	move	s0,zero
-------------
2d14 --->
    2e0c:	02402021 	move	a0,s2         ! a0=hcd_ctx
    2e10:	24422264 	addiu	v0,v0,8804    ! v0=HcdTransferData
			2e10: R_MIPS_LO16	.text
// rc=Hcd_TransferData(hcd_ctx, pRequest);
    2e14:	0040f809 	jalr	v0
    2e18:	02202821 	move	a1,s1
    2e1c:	08000b47 	j	2d1c <HcdDmaCompletion+0x64> ---> 2d1c
			2e1c: R_MIPS_26	.text
    2e20:	00408021 	move	s0,v0 ! s0=rc

00002e24 <HcdRequest>:
HcdRequest():
    2e24:	27bdffc0 	addiu	sp,sp,-64
    2e28:	3c020000 	lui	v0,0x0
			2e28: R_MIPS_HI16	local_bh_disable
    2e2c:	afbf003c 	sw	ra,60(sp)
    2e30:	afb60038 	sw	s6,56(sp)
    2e34:	afb50034 	sw	s5,52(sp)
    2e38:	afb40030 	sw	s4,48(sp)
    2e3c:	afb3002c 	sw	s3,44(sp)
    2e40:	afb20028 	sw	s2,40(sp)
    2e44:	afb10024 	sw	s1,36(sp)
    2e48:	afb00020 	sw	s0,32(sp)
    2e4c:	24420000 	addiu	v0,v0,0
			2e4c: R_MIPS_LO16	local_bh_disable
    2e50:	8c920044 	lw	s2,68(a0)
    2e54:	0040f809 	jalr	v0
    2e58:	8c910020 	lw	s1,32(a0)
    2e5c:	8f820014 	lw	v0,20(gp)
    2e60:	24420001 	addiu	v0,v0,1
    2e64:	af820014 	sw	v0,20(gp)
    2e68:	40026000 	mfc0	v0,c0_status
    2e6c:	30420001 	andi	v0,v0,0x1
    2e70:	10400075 	beqz	v0,3048 <HcdRequest+0x224>
    2e74:	3c040000 	lui	a0,0x0
			2e74: R_MIPS_HI16	$LC12
    2e78:	922200fa 	lbu	v0,250(s1)
    2e7c:	1040001e 	beqz	v0,2ef8 <HcdRequest+0xd4>
    2e80:	2410fffb 	li	s0,-5
    2e84:	8f820014 	lw	v0,20(gp)
    2e88:	3c030000 	lui	v1,0x0
			2e88: R_MIPS_HI16	local_bh_enable
    2e8c:	2442ffff 	addiu	v0,v0,-1
    2e90:	24630000 	addiu	v1,v1,0
			2e90: R_MIPS_LO16	local_bh_enable
    2e94:	0060f809 	jalr	v1
    2e98:	af820014 	sw	v0,20(gp)
    2e9c:	24020003 	li	v0,3
    2ea0:	1202000b 	beq	s0,v0,2ed0 <HcdRequest+0xac>
    2ea4:	02001021 	move	v0,s0
    2ea8:	8e420008 	lw	v0,8(s2)
    2eac:	30420100 	andi	v0,v0,0x100
    2eb0:	10400006 	beqz	v0,2ecc <HcdRequest+0xa8>
    2eb4:	ae500040 	sw	s0,64(s2)
    2eb8:	3c020000 	lui	v0,0x0
			2eb8: R_MIPS_HI16	HW_QueueDeferredCompletion
    2ebc:	24420000 	addiu	v0,v0,0
			2ebc: R_MIPS_LO16	HW_QueueDeferredCompletion
    2ec0:	0040f809 	jalr	v0
    2ec4:	02202021 	move	a0,s1
    2ec8:	24100003 	li	s0,3
    2ecc:	02001021 	move	v0,s0
    2ed0:	8fbf003c 	lw	ra,60(sp)
    2ed4:	8fb60038 	lw	s6,56(sp)
    2ed8:	8fb50034 	lw	s5,52(sp)
    2edc:	8fb40030 	lw	s4,48(sp)
    2ee0:	8fb3002c 	lw	s3,44(sp)
    2ee4:	8fb20028 	lw	s2,40(sp)
    2ee8:	8fb10024 	lw	s1,36(sp)
    2eec:	8fb00020 	lw	s0,32(sp)
    2ef0:	03e00008 	jr	ra
    2ef4:	27bd0040 	addiu	sp,sp,64
    2ef8:	92220008 	lbu	v0,8(s1)
    2efc:	1440ffe1 	bnez	v0,2e84 <HcdRequest+0x60>
    2f00:	2410fff8 	li	s0,-8
    2f04:	96430010 	lhu	v1,16(s2)
    2f08:	30620004 	andi	v0,v1,0x4
    2f0c:	1040005c 	beqz	v0,3080 <HcdRequest+0x25c>
    2f10:	30620010 	andi	v0,v1,0x10
    2f14:	8e42002c 	lw	v0,44(s2)
    2f18:	9646001a 	lhu	a2,26(s2)
    2f1c:	ae420034 	sw	v0,52(s2)
    2f20:	ae460030 	sw	a2,48(s2)
    2f24:	92240018 	lbu	a0,24(s1)
    2f28:	24020003 	li	v0,3
    2f2c:	108200f9 	beq	a0,v0,3314 <HcdRequest+0x4f0>
    2f30:	96250014 	lhu	a1,20(s1)
    2f34:	24020001 	li	v0,1
    2f38:	108200f9 	beq	a0,v0,3320 <HcdRequest+0x4fc>
    2f3c:	00000000 	nop
    2f40:	108000da 	beqz	a0,32ac <HcdRequest+0x488>
    2f44:	30a6fff9 	andi	a2,a1,0xfff9
    2f48:	30620080 	andi	v0,v1,0x80
    2f4c:	1440008a 	bnez	v0,3178 <HcdRequest+0x354>
    2f50:	3c020000 	lui	v0,0x0
			2f50: R_MIPS_HI16	.text
    2f54:	2634001c 	addiu	s4,s1,28
    2f58:	3c130000 	lui	s3,0x0
			2f58: R_MIPS_HI16	.text
    2f5c:	02202021 	move	a0,s1
    2f60:	24050200 	li	a1,512
    2f64:	26621d24 	addiu	v0,s3,7460
			2f64: R_MIPS_LO16	.text
    2f68:	0040f809 	jalr	v0
    2f6c:	02803021 	move	a2,s4
    2f70:	0440ffc4 	bltz	v0,2e84 <HcdRequest+0x60>
    2f74:	00408021 	move	s0,v0
    2f78:	922500f9 	lbu	a1,249(s1)
    2f7c:	30a20004 	andi	v0,a1,0x4
    2f80:	104000e9 	beqz	v0,3328 <HcdRequest+0x504>
    2f84:	00000000 	nop
    2f88:	8e23001c 	lw	v1,28(s1)
    2f8c:	8e240020 	lw	a0,32(s1)
    2f90:	0064102b 	sltu	v0,v1,a0
    2f94:	144000d9 	bnez	v0,32fc <HcdRequest+0x4d8>
    2f98:	00000000 	nop
    2f9c:	ae200024 	sw	zero,36(s1)
    2fa0:	8e460030 	lw	a2,48(s2)
    2fa4:	0066102b 	sltu	v0,v1,a2
    2fa8:	10400070 	beqz	v0,316c <HcdRequest+0x348>
    2fac:	00661023 	subu	v0,v1,a2
    2fb0:	30a20004 	andi	v0,a1,0x4
    2fb4:	144000d5 	bnez	v0,330c <HcdRequest+0x4e8>
    2fb8:	00000000 	nop
    2fbc:	00863023 	subu	a2,a0,a2
    2fc0:	00c4102b 	sltu	v0,a2,a0
    2fc4:	104000cb 	beqz	v0,32f4 <HcdRequest+0x4d0>
    2fc8:	00000000 	nop
    2fcc:	10c000c9 	beqz	a2,32f4 <HcdRequest+0x4d0>
    2fd0:	00000000 	nop
    2fd4:	3c020000 	lui	v0,0x0
			2fd4: R_MIPS_HI16	.text
    2fd8:	02202021 	move	a0,s1
    2fdc:	24421da4 	addiu	v0,v0,7588
			2fdc: R_MIPS_LO16	.text
    2fe0:	0040f809 	jalr	v0
    2fe4:	24051300 	li	a1,4864
    2fe8:	04400058 	bltz	v0,314c <HcdRequest+0x328>
    2fec:	00408021 	move	s0,v0
    2ff0:	27b50010 	addiu	s5,sp,16
    2ff4:	26761d24 	addiu	s6,s3,7460
			2ff4: R_MIPS_LO16	.text
    2ff8:	02202021 	move	a0,s1
    2ffc:	24050500 	li	a1,1280
    3000:	02c0f809 	jalr	s6
    3004:	02a03021 	move	a2,s5
    3008:	04400050 	bltz	v0,314c <HcdRequest+0x328>
    300c:	00408021 	move	s0,v0
    3010:	8fa20010 	lw	v0,16(sp)
    3014:	24030004 	li	v1,4
    3018:	30530006 	andi	s3,v0,0x6
    301c:	12630028 	beq	s3,v1,30c0 <HcdRequest+0x29c>
    3020:	3c020000 	lui	v0,0x0
			3020: R_MIPS_HI16	HW_UsecDelay
    3024:	24020001 	li	v0,1
    3028:	a2220019 	sb	v0,25(s1)
    302c:	3c020000 	lui	v0,0x0
			302c: R_MIPS_HI16	.text
    3030:	02202021 	move	a0,s1
    3034:	24421f3c 	addiu	v0,v0,7996
			3034: R_MIPS_LO16	.text
    3038:	0040f809 	jalr	v0
    303c:	24050400 	li	a1,1024
    3040:	08000ba1 	j	2e84 <HcdRequest+0x60>
			3040: R_MIPS_26	.text
    3044:	24100003 	li	s0,3
    3048:	3c020000 	lui	v0,0x0
			3048: R_MIPS_HI16	printk
    304c:	24420000 	addiu	v0,v0,0
			304c: R_MIPS_LO16	printk
    3050:	0040f809 	jalr	v0
    3054:	24840000 	addiu	a0,a0,0
			3054: R_MIPS_LO16	$LC12
    3058:	40016000 	mfc0	at,c0_status
    305c:	3421001f 	ori	at,at,0x1f
    3060:	3821001e 	xori	at,at,0x1e
    3064:	40816000 	mtc0	at,c0_status
    3068:	00000040 	ssnop
    306c:	00000040 	ssnop
    3070:	00000040 	ssnop
    3074:	000000c0 	sll	zero,zero,0x3
    3078:	08000b9f 	j	2e7c <HcdRequest+0x58>
			3078: R_MIPS_26	.text
    307c:	922200fa 	lbu	v0,250(s1)
    3080:	14400043 	bnez	v0,3190 <HcdRequest+0x36c>
    3084:	24020040 	li	v0,64
    3088:	30620080 	andi	v0,v1,0x80
    308c:	10400092 	beqz	v0,32d8 <HcdRequest+0x4b4>
    3090:	3c020000 	lui	v0,0x0
			3090: R_MIPS_HI16	.text
    3094:	96450018 	lhu	a1,24(s2)
    3098:	3c020000 	lui	v0,0x0
			3098: R_MIPS_HI16	.text
    309c:	02202021 	move	a0,s1
    30a0:	24421d24 	addiu	v0,v0,7460
			30a0: R_MIPS_LO16	.text
    30a4:	0040f809 	jalr	v0
    30a8:	27a60010 	addiu	a2,sp,16
    30ac:	0440ff75 	bltz	v0,2e84 <HcdRequest+0x60>
    30b0:	00408021 	move	s0,v0
    30b4:	8fa20010 	lw	v0,16(sp)
    30b8:	08000ba1 	j	2e84 <HcdRequest+0x60>
			30b8: R_MIPS_26	.text
    30bc:	ae42001c 	sw	v0,28(s2)
    30c0:	2405003c 	li	a1,60
    30c4:	24420000 	addiu	v0,v0,0
			30c4: R_MIPS_LO16	HW_UsecDelay
    30c8:	0040f809 	jalr	v0
    30cc:	02202021 	move	a0,s1
    30d0:	02202021 	move	a0,s1
    30d4:	02a03021 	move	a2,s5
    30d8:	02c0f809 	jalr	s6
    30dc:	24050500 	li	a1,1280
    30e0:	0440001a 	bltz	v0,314c <HcdRequest+0x328>
    30e4:	00408021 	move	s0,v0
    30e8:	8fa20010 	lw	v0,16(sp)
    30ec:	30420006 	andi	v0,v0,0x6
    30f0:	1453ffcd 	bne	v0,s3,3028 <HcdRequest+0x204>
    30f4:	24020001 	li	v0,1
    30f8:	02803021 	move	a2,s4
    30fc:	02202021 	move	a0,s1
    3100:	02c0f809 	jalr	s6
    3104:	24050200 	li	a1,512
    3108:	04400010 	bltz	v0,314c <HcdRequest+0x328>
    310c:	00408021 	move	s0,v0
    3110:	922200f9 	lbu	v0,249(s1)
    3114:	30420004 	andi	v0,v0,0x4
    3118:	104000ba 	beqz	v0,3404 <HcdRequest+0x5e0>
    311c:	00000000 	nop
    3120:	8e22001c 	lw	v0,28(s1)
    3124:	8e230020 	lw	v1,32(s1)
    3128:	0043102b 	sltu	v0,v0,v1
    312c:	1440ffbe 	bnez	v0,3028 <HcdRequest+0x204>
    3130:	24020001 	li	v0,1
    3134:	ae200024 	sw	zero,36(s1)
    3138:	3c020000 	lui	v0,0x0
			3138: R_MIPS_HI16	.text
    313c:	24421eb0 	addiu	v0,v0,7856
			313c: R_MIPS_LO16	.text
    3140:	0040f809 	jalr	v0
    3144:	02202021 	move	a0,s1
    3148:	00408021 	move	s0,v0
    314c:	24020003 	li	v0,3
    3150:	1202ff4c 	beq	s0,v0,2e84 <HcdRequest+0x60>
    3154:	00000000 	nop
    3158:	1600ff4a 	bnez	s0,2e84 <HcdRequest+0x60>
    315c:	00000000 	nop
    3160:	8e460030 	lw	a2,48(s2)
    3164:	8e23001c 	lw	v1,28(s1)
    3168:	00661023 	subu	v0,v1,a2
    316c:	2442fffb 	addiu	v0,v0,-5
    3170:	ae22001c 	sw	v0,28(s1)
    3174:	3c020000 	lui	v0,0x0
			3174: R_MIPS_HI16	.text
    3178:	02202021 	move	a0,s1
    317c:	2442256c 	addiu	v0,v0,9580
			317c: R_MIPS_LO16	.text
    3180:	0040f809 	jalr	v0
    3184:	02402821 	move	a1,s2
    3188:	08000ba1 	j	2e84 <HcdRequest+0x60>
			3188: R_MIPS_26	.text
    318c:	00408021 	move	s0,v0
    3190:	8e44002c 	lw	a0,44(s2)
    3194:	9646001a 	lhu	a2,26(s2)
    3198:	30630020 	andi	v1,v1,0x20
    319c:	0003100a 	movz	v0,zero,v1
    31a0:	ae460030 	sw	a2,48(s2)
    31a4:	ae440034 	sw	a0,52(s2)
    31a8:	afa20018 	sw	v0,24(sp)
    31ac:	8e430030 	lw	v1,48(s2)
    31b0:	3c150000 	lui	s5,0x0
			31b0: R_MIPS_HI16	.text
    31b4:	00431025 	or	v0,v0,v1
    31b8:	00403021 	move	a2,v0
    31bc:	02202021 	move	a0,s1
    31c0:	24050600 	li	a1,1536
    31c4:	26b31da4 	addiu	s3,s5,7588
			31c4: R_MIPS_LO16	.text
    31c8:	0260f809 	jalr	s3
    31cc:	afa20018 	sw	v0,24(sp)
    31d0:	0440ff2c 	bltz	v0,2e84 <HcdRequest+0x60>
    31d4:	00408021 	move	s0,v0
    31d8:	96420010 	lhu	v0,16(s2)
    31dc:	30420080 	andi	v0,v0,0x80
    31e0:	10400058 	beqz	v0,3344 <HcdRequest+0x520>
    31e4:	3c020000 	lui	v0,0x0
			31e4: R_MIPS_HI16	HW_InOut_Token
    31e8:	34048000 	li	a0,0x8000
    31ec:	afa40018 	sw	a0,24(sp)
    31f0:	96420010 	lhu	v0,16(s2)
    31f4:	3403c000 	li	v1,0xc000
    31f8:	30420080 	andi	v0,v0,0x80
    31fc:	0082180b 	movn	v1,a0,v0
    3200:	afa30018 	sw	v1,24(sp)
    3204:	96420018 	lhu	v0,24(s2)
    3208:	02202021 	move	a0,s1
    320c:	00431025 	or	v0,v0,v1
    3210:	00403021 	move	a2,v0
    3214:	24050700 	li	a1,1792
    3218:	0260f809 	jalr	s3
    321c:	afa20018 	sw	v0,24(sp)
    3220:	0440ff18 	bltz	v0,2e84 <HcdRequest+0x60>
    3224:	00408021 	move	s0,v0
    3228:	3c130000 	lui	s3,0x0
			3228: R_MIPS_HI16	.text
    322c:	26741d24 	addiu	s4,s3,7460
			322c: R_MIPS_LO16	.text
    3230:	24100003 	li	s0,3
    3234:	27b30018 	addiu	s3,sp,24
    3238:	02202021 	move	a0,s1
    323c:	24050500 	li	a1,1280
    3240:	0280f809 	jalr	s4
    3244:	02603021 	move	a2,s3
    3248:	04400055 	bltz	v0,33a0 <HcdRequest+0x57c>
    324c:	2610ffff 	addiu	s0,s0,-1
    3250:	8fa20018 	lw	v0,24(sp)
    3254:	30420001 	andi	v0,v0,0x1
    3258:	14400051 	bnez	v0,33a0 <HcdRequest+0x57c>
    325c:	00000000 	nop
    3260:	1600fff6 	bnez	s0,323c <HcdRequest+0x418>
    3264:	02202021 	move	a0,s1
    3268:	24020001 	li	v0,1
    326c:	a2220016 	sb	v0,22(s1)
    3270:	3c020000 	lui	v0,0x0
			3270: R_MIPS_HI16	HW_StartTimer
    3274:	240507d0 	li	a1,2000
    3278:	24420000 	addiu	v0,v0,0
			3278: R_MIPS_LO16	HW_StartTimer
    327c:	0040f809 	jalr	v0
    3280:	24060001 	li	a2,1
    3284:	96430010 	lhu	v1,16(s2)
    3288:	30630080 	andi	v1,v1,0x80
    328c:	1060003e 	beqz	v1,3388 <HcdRequest+0x564>
    3290:	3c020000 	lui	v0,0x0
			3290: R_MIPS_HI16	.text
    3294:	02202021 	move	a0,s1
    3298:	24421f3c 	addiu	v0,v0,7996
			3298: R_MIPS_LO16	.text
    329c:	0040f809 	jalr	v0
    32a0:	24050200 	li	a1,512
    32a4:	08000ba1 	j	2e84 <HcdRequest+0x60>
			32a4: R_MIPS_26	.text
    32a8:	24100003 	li	s0,3
    32ac:	10c5ff26 	beq	a2,a1,2f48 <HcdRequest+0x124>
    32b0:	3c020000 	lui	v0,0x0
			32b0: R_MIPS_HI16	.text
    32b4:	a6260014 	sh	a2,20(s1)
    32b8:	02202021 	move	a0,s1
    32bc:	24421da4 	addiu	v0,v0,7588
			32bc: R_MIPS_LO16	.text
    32c0:	0040f809 	jalr	v0
    32c4:	24050400 	li	a1,1024
    32c8:	0440feee 	bltz	v0,2e84 <HcdRequest+0x60>
    32cc:	00408021 	move	s0,v0
    32d0:	08000bd2 	j	2f48 <HcdRequest+0x124>
			32d0: R_MIPS_26	.text
    32d4:	96430010 	lhu	v1,16(s2)
    32d8:	96450018 	lhu	a1,24(s2)
    32dc:	8e460014 	lw	a2,20(s2)
    32e0:	24421da4 	addiu	v0,v0,7588
			32e0: R_MIPS_LO16	.text
    32e4:	0040f809 	jalr	v0
    32e8:	02202021 	move	a0,s1
    32ec:	08000ba1 	j	2e84 <HcdRequest+0x60>
			32ec: R_MIPS_26	.text
    32f0:	00408021 	move	s0,v0
    32f4:	08000bf5 	j	2fd4 <HcdRequest+0x1b0>
			32f4: R_MIPS_26	.text
    32f8:	24060001 	li	a2,1
    32fc:	8e220024 	lw	v0,36(s1)
    3300:	2c420002 	sltiu	v0,v0,2
    3304:	1440ff26 	bnez	v0,2fa0 <HcdRequest+0x17c>
    3308:	00000000 	nop
    330c:	08000bf0 	j	2fc0 <HcdRequest+0x19c>
			330c: R_MIPS_26	.text
    3310:	24060001 	li	a2,1
    3314:	34a20004 	ori	v0,a1,0x4
    3318:	08000cab 	j	32ac <HcdRequest+0x488>
			3318: R_MIPS_26	.text
    331c:	3046fffd 	andi	a2,v0,0xfffd
    3320:	08000cab 	j	32ac <HcdRequest+0x488>
			3320: R_MIPS_26	.text
    3324:	34a60006 	ori	a2,a1,0x6
    3328:	8e23001c 	lw	v1,28(s1)
    332c:	8e460030 	lw	a2,48(s2)
    3330:	0066102b 	sltu	v0,v1,a2
    3334:	1040ff8d 	beqz	v0,316c <HcdRequest+0x348>
    3338:	00661023 	subu	v0,v1,a2
    333c:	08000bef 	j	2fbc <HcdRequest+0x198>
			333c: R_MIPS_26	.text
    3340:	8e240020 	lw	a0,32(s1)
    3344:	02202021 	move	a0,s1
    3348:	24054a00 	li	a1,18944
    334c:	24060001 	li	a2,1
    3350:	24420000 	addiu	v0,v0,0
			3350: R_MIPS_LO16	HW_InOut_Token
    3354:	0040f809 	jalr	v0
    3358:	00003821 	move	a3,zero
    335c:	0440fec9 	bltz	v0,2e84 <HcdRequest+0x60>
    3360:	00408021 	move	s0,v0
    3364:	3c020000 	lui	v0,0x0
			3364: R_MIPS_HI16	.text
    3368:	02202021 	move	a0,s1
    336c:	24422264 	addiu	v0,v0,8804
			336c: R_MIPS_LO16	.text
    3370:	0040f809 	jalr	v0
    3374:	02402821 	move	a1,s2
    3378:	0441ff9b 	bgez	v0,31e8 <HcdRequest+0x3c4>
    337c:	00408021 	move	s0,v0
    3380:	08000ba1 	j	2e84 <HcdRequest+0x60>
			3380: R_MIPS_26	.text
    3384:	00000000 	nop
    3388:	02202021 	move	a0,s1
    338c:	24421f3c 	addiu	v0,v0,7996
			338c: R_MIPS_LO16	.text
    3390:	0040f809 	jalr	v0
    3394:	24050100 	li	a1,256
    3398:	08000ba1 	j	2e84 <HcdRequest+0x60>
			3398: R_MIPS_26	.text
    339c:	24100003 	li	s0,3
    33a0:	96420010 	lhu	v0,16(s2)
    33a4:	30420080 	andi	v0,v0,0x80
    33a8:	14400008 	bnez	v0,33cc <HcdRequest+0x5a8>
    33ac:	3c020000 	lui	v0,0x0
			33ac: R_MIPS_HI16	HW_InOut_Token
    33b0:	26a21da4 	addiu	v0,s5,7588
			33b0: R_MIPS_LO16	.text
    33b4:	02202021 	move	a0,s1
    33b8:	24050c00 	li	a1,3072
    33bc:	0040f809 	jalr	v0
    33c0:	24060300 	li	a2,768
    33c4:	08000ba1 	j	2e84 <HcdRequest+0x60>
			33c4: R_MIPS_26	.text
    33c8:	00408021 	move	s0,v0
    33cc:	02202021 	move	a0,s1
    33d0:	3405c800 	li	a1,0xc800
    33d4:	24060001 	li	a2,1
    33d8:	24420000 	addiu	v0,v0,0
			33d8: R_MIPS_LO16	HW_InOut_Token
    33dc:	0040f809 	jalr	v0
    33e0:	00003821 	move	a3,zero
    33e4:	0440fff2 	bltz	v0,33b0 <HcdRequest+0x58c>
    33e8:	3c020000 	lui	v0,0x0
			33e8: R_MIPS_HI16	.text
    33ec:	02202021 	move	a0,s1
    33f0:	24422264 	addiu	v0,v0,8804
			33f0: R_MIPS_LO16	.text
    33f4:	0040f809 	jalr	v0
    33f8:	02402821 	move	a1,s2
    33fc:	08000ced 	j	33b4 <HcdRequest+0x590>
			33fc: R_MIPS_26	.text
    3400:	26a21da4 	addiu	v0,s5,7588
			3400: R_MIPS_LO16	.text
    3404:	8e22001c 	lw	v0,28(s1)
    3408:	8e430030 	lw	v1,48(s2)
    340c:	0043102b 	sltu	v0,v0,v1
    3410:	1040ff49 	beqz	v0,3138 <HcdRequest+0x314>
    3414:	27a60014 	addiu	a2,sp,20
    3418:	02202021 	move	a0,s1
    341c:	24050200 	li	a1,512
    3420:	afa00014 	sw	zero,20(sp)
    3424:	02c0f809 	jalr	s6
    3428:	afa00018 	sw	zero,24(sp)
    342c:	02202021 	move	a0,s1
    3430:	24050500 	li	a1,1280
    3434:	02c0f809 	jalr	s6
    3438:	27a60018 	addiu	a2,sp,24
    343c:	08000c0a 	j	3028 <HcdRequest+0x204>
			343c: R_MIPS_26	.text
    3440:	24020001 	li	v0,1

00003444 <HcdConfig>:
// SDIO_STATUS HcdConfig(PSDHCD pHcd, PSDCONFIG pConfig)
HcdConfig():
    3444:	27bdffd8 	addiu	sp,sp,-40 ! alloc 40 bytes
    3448:	afb20020 	sw	s2,32(sp) ! save s2
    344c:	afbf0024 	sw	ra,36(sp) ! save ra
    3450:	afb1001c 	sw	s1,28(sp) ! save s1
    3454:	afb00018 	sw	s0,24(sp) ! save s0
    3458:	94b00000 	lhu	s0,0(a1)  ! s0=uint16 pConfig[0]
    345c:	24026133 	li	v0,24883  ! v0=24883
    3460:	00a09021 	move	s2,a1     ! s2=pConfig
// to 3528 if config cmd is SDCONFIG_PUT_HOST_307
    3464:	12020030 	beq	s0,v0,3528 <HcdConfig+0xe4>
    3468:	8c910020 	lw	s1,32(a0)    ! s1=pContext
    346c:	92220008 	lbu	v0,8(s1)     ! v0=pContext[8].b
// to 3494 if v0==0
    3470:	10400008 	beqz	v0,3494 <HcdConfig+0x50>
    3474:	8fbf0024 	lw	ra,36(sp)  ! restore ra
    3478:	2410fff8 	li	s0,-8      ! s0=-8
    347c:	02001021 	move	v0,s0      ! v0=-8
    3480:	8fb20020 	lw	s2,32(sp)  ! restore s2
    3484:	8fb1001c 	lw	s1,28(sp)  ! restore s1
    3488:	8fb00018 	lw	s0,24(sp)  ! restore s0
// return SDIO_STATUS_CANCELED
    348c:	03e00008 	jr	ra         !
    3490:	27bd0028 	addiu	sp,sp,40   ! restore stack
3470 -->
    3494:	3c020000 	lui	v0,0x0
			3494: R_MIPS_HI16	local_bh_disable
    3498:	24420000 	addiu	v0,v0,0
			3498: R_MIPS_LO16	local_bh_disable
    349c:	0040f809 	jalr	v0     ! local_bh_disable
    34a0:	00000000 	nop
    34a4:	8f820014 	lw	v0,20(gp) ! v0=gp[20]
    34a8:	24420001 	addiu	v0,v0,1   ! v0=v0+1
    34ac:	af820014 	sw	v0,20(gp) ! gp[20]=v0
    34b0:	40026000 	mfc0	v0,c0_status
    34b4:	30420001 	andi	v0,v0,0x1
    34b8:	10400043 	beqz	v0,35c8 <HcdConfig+0x184>
    34bc:	3c040000 	lui	a0,0x0
			34bc: R_MIPS_HI16	$LC12
35f8 --->
    34c0:	24026130 	li	v0,24880  ! v0=HOST_CUSTOM_304
// to 3600 if cmd is CUSTOM_304
    34c4:	1202004e 	beq	s0,v0,3600 <HcdConfig+0x1bc>
    34c8:	2e026131 	sltiu	v0,s0,24881 ! v0=1 if cmd < CUSTOM_305
// to 358c if cmd is CUSTOM 305 or 306 with v0 306
    34cc:	1040002f 	beqz	v0,358c <HcdConfig+0x148>
    34d0:	24026132 	li	v0,24882

    34d4:	24026002 	li	v0,24578 ! v0=SDCONFIG_SDIO_INT_CTRL
// to 361c if v0=SDCONFIG_SDIO_INT_CTRL
    34d8:	12020050 	beq	s0,v0,361c <HcdConfig+0x1d8>

    34dc:	2402612f 	li	v0,24879 ! v0=CUSTOM_303
// to 367c if v0=CUSTOM_303
    34e0:	12020066 	beq	s0,v0,367c <HcdConfig+0x238>

    34e4:	24022003 	li	v0,8195 ! v0=0x2000 (DATA_GET)
// to 3664 if v0=SDCONFIG_FLAGS_DATA_GET
    34e8:	1202005e 	beq	s0,v0,3664 <HcdConfig+0x220>
    34ec:	3c020000 	lui	v0,0x0
			34ec: R_MIPS_HI16	.text
//
    34f0:	2410fffe 	li	s0,-2     ! s0=-2
    34f4:	8f830014 	lw	v1,20(gp)
    34f8:	3c040000 	lui	a0,0x0
			34f8: R_MIPS_HI16	local_bh_enable
    34fc:	2463ffff 	addiu	v1,v1,-1
    3500:	24840000 	addiu	a0,a0,0
			3500: R_MIPS_LO16	local_bh_enable
    3504:	0080f809 	jalr	a0
    3508:	af830014 	sw	v1,20(gp)
    350c:	02001021 	move	v0,s0     ! v0=s0
    3510:	8fbf0024 	lw	ra,36(sp) ! restore ra
    3514:	8fb20020 	lw	s2,32(sp) ! restore s2
    3518:	8fb1001c 	lw	s1,28(sp) ! restore s1
    351c:	8fb00018 	lw	s0,24(sp) ! restore s0
    3520:	03e00008 	jr	ra         ! return  SDIO_STATUS_INVALID_PARAMETER
    3524:	27bd0028 	addiu	sp,sp,40   ! dealloc stack
3464 HOST_CUSTOM_307 -->
    3528:	8ca20008 	lw	v0,8(a1) ! v0=pConfig.datalen
    352c:	2c420004 	sltiu	v0,v0,4  ! v0=1 if v0 < 4
// to 3554 if v0<4
    3530:	10400008 	beqz	v0,3554 <HcdConfig+0x110>

    3534:	2410fffe 	li	s0,-2    ! s0=SDIO_STATUS_INVALID_PARAMETER
    3538:	02001021 	move	v0,s0    ! v0=s0
    353c:	8fbf0024 	lw	ra,36(sp) ! restore ra
    3540:	8fb20020 	lw	s2,32(sp) ! restore s2
    3544:	8fb1001c 	lw	s1,28(sp) ! restore s1
    3548:	8fb00018 	lw	s0,24(sp) ! restore s0
// return SDIO_STATUS_INVALID_PARAMETER
    354c:	03e00008 	jr	ra        ! return
    3550:	27bd0028 	addiu	sp,sp,40  ! dealloc stack
3530 pConfig[8].w >= 4 --->
    3554:	8ca30004 	lw	v1,4(a1)  ! v1=pConfig.data
    3558:	8e240040 	lw	a0,64(s1) ! a0=pContext[64].w
    355c:	90650000 	lbu	a1,0(v1)  ! a1=pConfig.data[0].b
    3560:	3c020000 	lui	v0,0x0
			3560: R_MIPS_HI16	HW_PowerUpDown
    3564:	24420000 	addiu	v0,v0,0
			3564: R_MIPS_LO16	HW_PowerUpDown
// HW_PowerUpDown(pContext[64].w, pConfig.data[0])
    3568:	0040f809 	jalr	v0
    356c:	00008021 	move	s0,zero   ! s0=0
    3570:	02001021 	move	v0,s0     ! v0=s0
    3574:	8fbf0024 	lw	ra,36(sp) ! restore ra
    3578:	8fb20020 	lw	s2,32(sp) ! restore s2
    357c:	8fb1001c 	lw	s1,28(sp) ! restore s1
    3580:	8fb00018 	lw	s0,24(sp) ! restore s0
// return OK
    3584:	03e00008 	jr	ra        ! return
    3588:	27bd0028 	addiu	sp,sp,40  ! dealloc stack
34cc Custom 305 or 306, v0=306 ---->
// to 3640 if cmd == Custom 306
    358c:	1202002c 	beq	s0,v0,3640 <HcdConfig+0x1fc>
    3590:	2e026132 	sltiu	v0,s0,24882 ! v0=1 if cmd < 306
// to 3648 if cmd == Custom 305
    3594:	1440002c 	bnez	v0,3648 <HcdConfig+0x204>
    3598:	3402a12e 	li	v0,0xa12e ! v0=41262
// to 34f4 if cmd is not 41262
    359c:	1602ffd5 	bne	s0,v0,34f4 <HcdConfig+0xb0>
    35a0:	2410fffe 	li	s0,-2     ! s0 = -2

    35a4:	8e420008 	lw	v0,8(s2) ! pConfig.datalen
    35a8:	2c420004 	sltiu	v0,v0,4  ! v0=1 if datalen<4
// to 34f4 (out) if datalen<4
    35ac:	1440ffd1 	bnez	v0,34f4 <HcdConfig+0xb0>
    35b0:	00000000 	nop
//
    35b4:	8e430004 	lw	v1,4(s2)  ! v1=pConfig.data
    35b8:	8e22003c 	lw	v0,60(s1) ! v0=pContext[60].w
    35bc:	00008021 	move	s0,zero   ! s0=0
    35c0:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			35c0: R_MIPS_26	.text
    35c4:	ac620000 	sw	v0,0(v1)  ! pconfig.data[0].w=v0

    35c8:	3c020000 	lui	v0,0x0
			35c8: R_MIPS_HI16	printk
    35cc:	24420000 	addiu	v0,v0,0
			35cc: R_MIPS_LO16	printk
// printk("Colman: Re-enable IRQ\n");
    35d0:	0040f809 	jalr	v0
    35d4:	24840000 	addiu	a0,a0,0
			35d4: R_MIPS_LO16	$LC12
    35d8:	40016000 	mfc0	at,c0_status
    35dc:	3421001f 	ori	at,at,0x1f
    35e0:	3821001e 	xori	at,at,0x1e
    35e4:	40816000 	mtc0	at,c0_status
    35e8:	00000040 	ssnop
    35ec:	00000040 	ssnop
    35f0:	00000040 	ssnop
    35f4:	000000c0 	sll	zero,zero,0x3
// to 34c4 with cmd == custom 304
    35f8:	08000d31 	j	34c4 <HcdConfig+0x80>
			35f8: R_MIPS_26	.text
    35fc:	24026130 	li	v0,24880 // v0=304

34c4 custom 304 --->
    3600:	8e420008 	lw	v0,8(s2)  ! pConfig.datalen
// to 34f0 (out) if zero
    3604:	1040ffba 	beqz	v0,34f0 <HcdConfig+0xac>
    3608:	00008021 	move	s0,zero   ! s0=0
    360c:	8e430004 	lw	v1,4(s2)  ! v1=pConfig.data
    3610:	90620000 	lbu	v0,0(v1)  ! v0 data[0].b
// to 34f4 (out with OK)
    3614:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			3614: R_MIPS_26	.text
    3618:	a2220018 	sb	v0,24(s1) ! pContext[24].b=v0

34d8 v0=SDCONFIG_SDIO_INT_CTRL --->
    361c:	8e420004 	lw	v0,4(s2)  ! v0=pConfig.data
    3620:	90430000 	lbu	v1,0(v0)  ! v1=data[0].b
// to 36b8 if v1==0
    3624:	10600024 	beqz	v1,36b8 <HcdConfig+0x274>
    3628:	3c020000 	lui	v0,0x0    ! v0=textsegment
			3628: R_MIPS_HI16	.text
    362c:	3c020000 	lui	v0,0x0    ! v0=textsegment
			362c: R_MIPS_HI16	.text
    3630:	02202021 	move	a0,s1     ! a0=pContext
    3634:	24421f3c 	addiu	v0,v0,7996!
			3634: R_MIPS_LO16	.text
// UnmaskSPIInterrupts(pContext, 129)
    3638:	0040f809 	jalr	v0
    363c:	24050081 	li	a1,129
358c custom command 306 ---->
// to 34f4 (out OK)
    3640:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			3640: R_MIPS_26	.text
    3644:	00008021 	move	s0,zero
3594 custom command 305 ---->
    3648:	8e420008 	lw	v0,8(s2) v0=pConfig.datalen
// to 34f0 (out -2) if v0=0
    364c:	1040ffa8 	beqz	v0,34f0 <HcdConfig+0xac>

    3650:	00008021 	move	s0,zero
    3654:	8e430004 	lw	v1,4(s2) ! v1=pConfig.data
    3658:	90620000 	lbu	v0,0(v1) ! v0=pConfig.data[0].b
// to 34f4 (out ok)
    365c:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			365c: R_MIPS_26	.text
    3660:	a2220017 	sb	v0,23(s1)! pContext[23]=v0.b
34e8 v0=SDCONFIG_FLAGS_DATA_GET --->
    3664:	02202021 	move	a0,s1   ! a0=pContext
    3668:	24421f3c 	addiu	v0,v0,7996
			3668: R_MIPS_LO16	.text
// UnmaskSPIInterrupts(pContext, 129)
    366c:	0040f809 	jalr	v0
    3670:	24050081 	li	a1,129
// to 34f4 (out ok)
    3674:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			3674: R_MIPS_26	.text
    3678:	00008021 	move	s0,zero
34e0 v0=CUSTOM_303 ---->
    367c:	8e420008 	lw	v0,8(s2) ! pConfig.datalen
    3680:	2c420004 	sltiu	v0,v0,4  ! v0=1 if datalen<4
// to 34f0 (out error) if datalen<4
    3684:	1440ff9a 	bnez	v0,34f0 <HcdConfig+0xac>
    3688:	02202021 	move	a0,s1    !  a0=pContext
    368c:	8e420004 	lw	v0,4(s2) !  v0=pConfig.data
    3690:	8c430000 	lw	v1,0(v0) !  v1=pConfig.data[0].w
    3694:	3c020000 	lui	v0,0x0
			3694: R_MIPS_HI16	HW_SetClock
    3698:	24420000 	addiu	v0,v0,0
			3698: R_MIPS_LO16	HW_SetClock
    369c:	27a50010 	addiu	a1,sp,16
// HW_SetClock(pContext, stackvar)
    36a0:	0040f809 	jalr	v0
    36a4:	afa30010 	sw	v1,16(sp) ! stackvar=pConfig.data[0].w
    36a8:	8fa20010 	lw	v0,16(sp) ! v0=stackvar=
    36ac:	00008021 	move	s0,zero   ! s0=0
// to 34f4 (out OK)
    36b0:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			36b0: R_MIPS_26	.text
    36b4:	ae22003c 	sw	v0,60(s1) ! pContext[60].w=v0

3624 v0=SDCONFIG_SDIO_INT_CTRL data=0
    36b8:	02202021 	move	a0,s1 ! a0=pContext
    36bc:	24421f14 	addiu	v0,v0,7956
			36bc: R_MIPS_LO16	.text
// MaskSPIInterrupts(pContext,129)
    36c0:	0040f809 	jalr	v0
    36c4:	24050081 	li	a1,129
// to 34f4 (out OK)
    36c8:	08000d3d 	j	34f4 <HcdConfig+0xb0>
			36c8: R_MIPS_26	.text
    36cc:	00008021 	move	s0,zero

000036d0 <HcdSpiInterrupt>:
HcdSpiInterrupt():
    36d0:	27bdffd0 	addiu	sp,sp,-48
    36d4:	3c020000 	lui	v0,0x0
			36d4: R_MIPS_HI16	local_bh_disable
    36d8:	afb1001c 	sw	s1,28(sp)
    36dc:	afbf002c 	sw	ra,44(sp)
    36e0:	afb40028 	sw	s4,40(sp)
    36e4:	afb30024 	sw	s3,36(sp)
    36e8:	afb20020 	sw	s2,32(sp)
    36ec:	afb00018 	sw	s0,24(sp)
    36f0:	24420000 	addiu	v0,v0,0
			36f0: R_MIPS_LO16	local_bh_disable
    36f4:	0040f809 	jalr	v0
    36f8:	00808821 	move	s1,a0
    36fc:	8f820014 	lw	v0,20(gp)
    3700:	24420001 	addiu	v0,v0,1
    3704:	af820014 	sw	v0,20(gp)
    3708:	40026000 	mfc0	v0,c0_status
    370c:	30420001 	andi	v0,v0,0x1
    3710:	10400070 	beqz	v0,38d4 <HcdSpiInterrupt+0x204>
    3714:	3c040000 	lui	a0,0x0
			3714: R_MIPS_HI16	$LC12
    3718:	9222001a 	lbu	v0,26(s1)
    371c:	10400010 	beqz	v0,3760 <HcdSpiInterrupt+0x90>
    3720:	3c140000 	lui	s4,0x0
			3720: R_MIPS_HI16	.text
    3724:	8f830014 	lw	v1,20(gp)
    3728:	3c040000 	lui	a0,0x0
			3728: R_MIPS_HI16	local_bh_enable
    372c:	2463ffff 	addiu	v1,v1,-1
    3730:	24840000 	addiu	a0,a0,0
			3730: R_MIPS_LO16	local_bh_enable
    3734:	0080f809 	jalr	a0
    3738:	af830014 	sw	v1,20(gp)
    373c:	8fbf002c 	lw	ra,44(sp)
    3740:	8fb40028 	lw	s4,40(sp)
    3744:	8fb30024 	lw	s3,36(sp)
    3748:	8fb20020 	lw	s2,32(sp)
    374c:	8fb1001c 	lw	s1,28(sp)
    3750:	8fb00018 	lw	s0,24(sp)
    3754:	24020001 	li	v0,1
    3758:	03e00008 	jr	ra
    375c:	27bd0030 	addiu	sp,sp,48
    3760:	02202021 	move	a0,s1
    3764:	24050c00 	li	a1,3072
    3768:	26821d24 	addiu	v0,s4,7460
			3768: R_MIPS_LO16	.text
    376c:	0040f809 	jalr	v0
    3770:	27a60010 	addiu	a2,sp,16
    3774:	0440008a 	bltz	v0,39a0 <HcdSpiInterrupt+0x2d0>
    3778:	00409021 	move	s2,v0
    377c:	8fa70010 	lw	a3,16(sp)
    3780:	96220012 	lhu	v0,18(s1)
    3784:	00473824 	and	a3,v0,a3
    3788:	30e6070e 	andi	a2,a3,0x70e
    378c:	14c0008f 	bnez	a2,39cc <HcdSpiInterrupt+0x2fc>
    3790:	afa70010 	sw	a3,16(sp)
    3794:	30e2000e 	andi	v0,a3,0xe
    3798:	1040005c 	beqz	v0,390c <HcdSpiInterrupt+0x23c>
    379c:	30e20300 	andi	v0,a3,0x300
    37a0:	3c130000 	lui	s3,0x0
			37a0: R_MIPS_HI16	debuglevel
    37a4:	8e620000 	lw	v0,0(s3)
			37a4: R_MIPS_LO16	debuglevel
    37a8:	28420003 	slti	v0,v0,3
    37ac:	104000ac 	beqz	v0,3a60 <HcdSpiInterrupt+0x390>
    37b0:	8e300088 	lw	s0,136(s1)
    37b4:	30e20008 	andi	v0,a3,0x8
    37b8:	10400006 	beqz	v0,37d4 <HcdSpiInterrupt+0x104>
    37bc:	30e20004 	andi	v0,a3,0x4
    37c0:	8e620000 	lw	v0,0(s3)
			37c0: R_MIPS_LO16	debuglevel
    37c4:	28420003 	slti	v0,v0,3
    37c8:	104000f1 	beqz	v0,3b90 <HcdSpiInterrupt+0x4c0>
    37cc:	3c040000 	lui	a0,0x0
			37cc: R_MIPS_HI16	$LC15
    37d0:	30e20004 	andi	v0,a3,0x4
    37d4:	10400006 	beqz	v0,37f0 <HcdSpiInterrupt+0x120>
    37d8:	30e20002 	andi	v0,a3,0x2
    37dc:	8e620000 	lw	v0,0(s3)
			37dc: R_MIPS_LO16	debuglevel
    37e0:	28420003 	slti	v0,v0,3
    37e4:	104000e4 	beqz	v0,3b78 <HcdSpiInterrupt+0x4a8>
    37e8:	3c040000 	lui	a0,0x0
			37e8: R_MIPS_HI16	$LC16
    37ec:	30e20002 	andi	v0,a3,0x2
    37f0:	10400004 	beqz	v0,3804 <HcdSpiInterrupt+0x134>
    37f4:	8e620000 	lw	v0,0(s3)
			37f4: R_MIPS_LO16	debuglevel
    37f8:	28420003 	slti	v0,v0,3
    37fc:	104000a0 	beqz	v0,3a80 <HcdSpiInterrupt+0x3b0>
    3800:	3c040000 	lui	a0,0x0
			3800: R_MIPS_HI16	$LC17
    3804:	1200006f 	beqz	s0,39c4 <HcdSpiInterrupt+0x2f4>
    3808:	3c020000 	lui	v0,0x0
			3808: R_MIPS_HI16	.text
    380c:	24421b40 	addiu	v0,v0,6976
			380c: R_MIPS_LO16	.text
    3810:	0040f809 	jalr	v0
    3814:	02002021 	move	a0,s0
    3818:	9223001a 	lbu	v1,26(s1)
    381c:	14600004 	bnez	v1,3830 <HcdSpiInterrupt+0x160>
    3820:	00009821 	move	s3,zero
    3824:	2402fffb 	li	v0,-5
    3828:	24130001 	li	s3,1
    382c:	ae020040 	sw	v0,64(s0)
    3830:	8fa60010 	lw	a2,16(sp)
    3834:	3c100000 	lui	s0,0x0
			3834: R_MIPS_HI16	.text
    3838:	26101da4 	addiu	s0,s0,7588
			3838: R_MIPS_LO16	.text
    383c:	02202021 	move	a0,s1
    3840:	30c6000e 	andi	a2,a2,0xe
    3844:	0200f809 	jalr	s0
    3848:	24050c00 	li	a1,3072
    384c:	8fa40010 	lw	a0,16(sp)
    3850:	2402fff1 	li	v0,-15
    3854:	00823824 	and	a3,a0,v0
    3858:	24030001 	li	v1,1
    385c:	a22300fa 	sb	v1,250(s1)
    3860:	02202021 	move	a0,s1
    3864:	24050d00 	li	a1,3328
    3868:	00003021 	move	a2,zero
    386c:	0200f809 	jalr	s0
    3870:	afa70010 	sw	a3,16(sp)
    3874:	00008021 	move	s0,zero
    3878:	8f820014 	lw	v0,20(gp)
    387c:	3c030000 	lui	v1,0x0
			387c: R_MIPS_HI16	local_bh_enable
    3880:	2442ffff 	addiu	v0,v0,-1
    3884:	24630000 	addiu	v1,v1,0
			3884: R_MIPS_LO16	local_bh_enable
    3888:	0060f809 	jalr	v1
    388c:	af820014 	sw	v0,20(gp)
    3890:	9222001a 	lbu	v0,26(s1)
    3894:	1040002f 	beqz	v0,3954 <HcdSpiInterrupt+0x284>
    3898:	3c020000 	lui	v0,0x0
			3898: R_MIPS_HI16	.text
    389c:	16600033 	bnez	s3,396c <HcdSpiInterrupt+0x29c>
    38a0:	3c020000 	lui	v0,0x0
			38a0: R_MIPS_HI16	SDIO_HandleHcdEvent
    38a4:	16000037 	bnez	s0,3984 <HcdSpiInterrupt+0x2b4>
    38a8:	3c020000 	lui	v0,0x0
			38a8: R_MIPS_HI16	SDIO_HandleHcdEvent
    38ac:	001217c2 	srl	v0,s2,0x1f
    38b0:	38420001 	xori	v0,v0,0x1
    38b4:	8fbf002c 	lw	ra,44(sp)
    38b8:	8fb40028 	lw	s4,40(sp)
    38bc:	8fb30024 	lw	s3,36(sp)
    38c0:	8fb20020 	lw	s2,32(sp)
    38c4:	8fb1001c 	lw	s1,28(sp)
    38c8:	8fb00018 	lw	s0,24(sp)
    38cc:	03e00008 	jr	ra
    38d0:	27bd0030 	addiu	sp,sp,48
    38d4:	3c020000 	lui	v0,0x0
			38d4: R_MIPS_HI16	printk
    38d8:	24420000 	addiu	v0,v0,0
			38d8: R_MIPS_LO16	printk
    38dc:	0040f809 	jalr	v0
    38e0:	24840000 	addiu	a0,a0,0
			38e0: R_MIPS_LO16	$LC12
    38e4:	40016000 	mfc0	at,c0_status
    38e8:	3421001f 	ori	at,at,0x1f
    38ec:	3821001e 	xori	at,at,0x1e
    38f0:	40816000 	mtc0	at,c0_status
    38f4:	00000040 	ssnop
    38f8:	00000040 	ssnop
    38fc:	00000040 	ssnop
    3900:	000000c0 	sll	zero,zero,0x3
    3904:	08000dc7 	j	371c <HcdSpiInterrupt+0x4c>
			3904: R_MIPS_26	.text
    3908:	9222001a 	lbu	v0,26(s1)
    390c:	14400038 	bnez	v0,39f0 <HcdSpiInterrupt+0x320>
    3910:	00009821 	move	s3,zero
    3914:	30e20400 	andi	v0,a3,0x400
    3918:	14400045 	bnez	v0,3a30 <HcdSpiInterrupt+0x360>
    391c:	2402fbff 	li	v0,-1025
    3920:	30e20081 	andi	v0,a3,0x81
    3924:	14400021 	bnez	v0,39ac <HcdSpiInterrupt+0x2dc>
    3928:	3c020000 	lui	v0,0x0
			3928: R_MIPS_HI16	.text
    392c:	00008021 	move	s0,zero
    3930:	8f820014 	lw	v0,20(gp)
    3934:	3c030000 	lui	v1,0x0
			3934: R_MIPS_HI16	local_bh_enable
    3938:	2442ffff 	addiu	v0,v0,-1
    393c:	24630000 	addiu	v1,v1,0
			393c: R_MIPS_LO16	local_bh_enable
    3940:	0060f809 	jalr	v1
    3944:	af820014 	sw	v0,20(gp)
    3948:	9222001a 	lbu	v0,26(s1)
    394c:	1440ffd3 	bnez	v0,389c <HcdSpiInterrupt+0x1cc>
    3950:	3c020000 	lui	v0,0x0
			3950: R_MIPS_HI16	.text
    3954:	02202021 	move	a0,s1
    3958:	244224d4 	addiu	v0,v0,9428
			3958: R_MIPS_LO16	.text
    395c:	0040f809 	jalr	v0
    3960:	24050001 	li	a1,1
    3964:	1260ffcf 	beqz	s3,38a4 <HcdSpiInterrupt+0x1d4>
    3968:	3c020000 	lui	v0,0x0
			3968: R_MIPS_HI16	SDIO_HandleHcdEvent
    396c:	26240044 	addiu	a0,s1,68
    3970:	24420000 	addiu	v0,v0,0
			3970: R_MIPS_LO16	SDIO_HandleHcdEvent
    3974:	0040f809 	jalr	v0
    3978:	24050004 	li	a1,4
    397c:	1200ffcb 	beqz	s0,38ac <HcdSpiInterrupt+0x1dc>
    3980:	3c020000 	lui	v0,0x0
			3980: R_MIPS_HI16	SDIO_HandleHcdEvent
    3984:	26240044 	addiu	a0,s1,68
    3988:	24420000 	addiu	v0,v0,0
			3988: R_MIPS_LO16	SDIO_HandleHcdEvent
    398c:	0040f809 	jalr	v0
    3990:	24050003 	li	a1,3
    3994:	001217c2 	srl	v0,s2,0x1f
    3998:	08000e2d 	j	38b4 <HcdSpiInterrupt+0x1e4>
			3998: R_MIPS_26	.text
    399c:	38420001 	xori	v0,v0,0x1
    39a0:	00008021 	move	s0,zero
    39a4:	08000e4c 	j	3930 <HcdSpiInterrupt+0x260>
			39a4: R_MIPS_26	.text
    39a8:	00009821 	move	s3,zero
    39ac:	02202021 	move	a0,s1
    39b0:	24421f14 	addiu	v0,v0,7956
			39b0: R_MIPS_LO16	.text
    39b4:	0040f809 	jalr	v0
    39b8:	24050081 	li	a1,129
    39bc:	08000e4c 	j	3930 <HcdSpiInterrupt+0x260>
			39bc: R_MIPS_26	.text
    39c0:	24100001 	li	s0,1
    39c4:	08000e0c 	j	3830 <HcdSpiInterrupt+0x160>
			39c4: R_MIPS_26	.text
    39c8:	00009821 	move	s3,zero
    39cc:	3c020000 	lui	v0,0x0
			39cc: R_MIPS_HI16	.text
    39d0:	02202021 	move	a0,s1
    39d4:	24421da4 	addiu	v0,v0,7588
			39d4: R_MIPS_LO16	.text
    39d8:	0040f809 	jalr	v0
    39dc:	24050c00 	li	a1,3072
    39e0:	0440ffef 	bltz	v0,39a0 <HcdSpiInterrupt+0x2d0>
    39e4:	00409021 	move	s2,v0
    39e8:	08000de5 	j	3794 <HcdSpiInterrupt+0xc4>
			39e8: R_MIPS_26	.text
    39ec:	8fa70010 	lw	a3,16(sp)
    39f0:	8e300088 	lw	s0,136(s1)
    39f4:	12000005 	beqz	s0,3a0c <HcdSpiInterrupt+0x33c>
    39f8:	2402fcff 	li	v0,-769
    39fc:	92220016 	lbu	v0,22(s1)
    3a00:	14400025 	bnez	v0,3a98 <HcdSpiInterrupt+0x3c8>
    3a04:	3c020000 	lui	v0,0x0
			3a04: R_MIPS_HI16	HW_StopTimer
    3a08:	2402fcff 	li	v0,-769
    3a0c:	00e23824 	and	a3,a3,v0
    3a10:	3c020000 	lui	v0,0x0
			3a10: R_MIPS_HI16	.text
    3a14:	afa70010 	sw	a3,16(sp)
    3a18:	02202021 	move	a0,s1
    3a1c:	24421f14 	addiu	v0,v0,7956
			3a1c: R_MIPS_LO16	.text
    3a20:	0040f809 	jalr	v0
    3a24:	24050300 	li	a1,768
    3a28:	08000e45 	j	3914 <HcdSpiInterrupt+0x244>
			3a28: R_MIPS_26	.text
    3a2c:	8fa70010 	lw	a3,16(sp)
    3a30:	00e23824 	and	a3,a3,v0
    3a34:	3c020000 	lui	v0,0x0
			3a34: R_MIPS_HI16	.text
    3a38:	02202021 	move	a0,s1
    3a3c:	24050400 	li	a1,1024
    3a40:	24421f14 	addiu	v0,v0,7956
			3a40: R_MIPS_LO16	.text
    3a44:	0040f809 	jalr	v0
    3a48:	afa70010 	sw	a3,16(sp)
    3a4c:	92230019 	lbu	v1,25(s1)
    3a50:	1460001d 	bnez	v1,3ac8 <HcdSpiInterrupt+0x3f8>
    3a54:	02202021 	move	a0,s1
    3a58:	08000e48 	j	3920 <HcdSpiInterrupt+0x250>
			3a58: R_MIPS_26	.text
    3a5c:	8fa70010 	lw	a3,16(sp)
    3a60:	3c040000 	lui	a0,0x0
			3a60: R_MIPS_HI16	$LC14
    3a64:	3c020000 	lui	v0,0x0
			3a64: R_MIPS_HI16	printk
    3a68:	00e02821 	move	a1,a3
    3a6c:	24420000 	addiu	v0,v0,0
			3a6c: R_MIPS_LO16	printk
    3a70:	0040f809 	jalr	v0
    3a74:	24840000 	addiu	a0,a0,0
			3a74: R_MIPS_LO16	$LC14
    3a78:	08000ded 	j	37b4 <HcdSpiInterrupt+0xe4>
			3a78: R_MIPS_26	.text
    3a7c:	8fa70010 	lw	a3,16(sp)
    3a80:	3c020000 	lui	v0,0x0
			3a80: R_MIPS_HI16	printk
    3a84:	24420000 	addiu	v0,v0,0
			3a84: R_MIPS_LO16	printk
    3a88:	0040f809 	jalr	v0
    3a8c:	24840000 	addiu	a0,a0,0
			3a8c: R_MIPS_LO16	$LC17
    3a90:	08000e01 	j	3804 <HcdSpiInterrupt+0x134>
			3a90: R_MIPS_26	.text
    3a94:	00000000 	nop
    3a98:	24420000 	addiu	v0,v0,0
			3a98: R_MIPS_LO16	HW_StopTimer
    3a9c:	0040f809 	jalr	v0
    3aa0:	02202021 	move	a0,s1
    3aa4:	a2200016 	sb	zero,22(s1)
    3aa8:	96020010 	lhu	v0,16(s0)
    3aac:	30420080 	andi	v0,v0,0x80
    3ab0:	1440003d 	bnez	v0,3ba8 <HcdSpiInterrupt+0x4d8>
    3ab4:	00009021 	move	s2,zero
    3ab8:	ae120040 	sw	s2,64(s0)
    3abc:	8fa70010 	lw	a3,16(sp)
    3ac0:	08000e82 	j	3a08 <HcdSpiInterrupt+0x338>
			3ac0: R_MIPS_26	.text
    3ac4:	24130001 	li	s3,1
    3ac8:	24050200 	li	a1,512
    3acc:	2626001c 	addiu	a2,s1,28
    3ad0:	26821d24 	addiu	v0,s4,7460
			3ad0: R_MIPS_LO16	.text
    3ad4:	0040f809 	jalr	v0
    3ad8:	8e300088 	lw	s0,136(s1)
    3adc:	0440ff93 	bltz	v0,392c <HcdSpiInterrupt+0x25c>
    3ae0:	00409021 	move	s2,v0
    3ae4:	1200ff8e 	beqz	s0,3920 <HcdSpiInterrupt+0x250>
    3ae8:	8fa70010 	lw	a3,16(sp)
    3aec:	922200f9 	lbu	v0,249(s1)
    3af0:	30420004 	andi	v0,v0,0x4
    3af4:	1040003c 	beqz	v0,3be8 <HcdSpiInterrupt+0x518>
    3af8:	00000000 	nop
    3afc:	8e22001c 	lw	v0,28(s1)
    3b00:	8e230020 	lw	v1,32(s1)
    3b04:	0043102b 	sltu	v0,v0,v1
    3b08:	1440003d 	bnez	v0,3c00 <HcdSpiInterrupt+0x530>
    3b0c:	24051300 	li	a1,4864
    3b10:	ae200024 	sw	zero,36(s1)
    3b14:	3c020000 	lui	v0,0x0
			3b14: R_MIPS_HI16	.text
    3b18:	a2200019 	sb	zero,25(s1)
    3b1c:	24421eb0 	addiu	v0,v0,7856
			3b1c: R_MIPS_LO16	.text
    3b20:	0040f809 	jalr	v0
    3b24:	02202021 	move	a0,s1
    3b28:	0440ff80 	bltz	v0,392c <HcdSpiInterrupt+0x25c>
    3b2c:	00409021 	move	s2,v0
    3b30:	8e22001c 	lw	v0,28(s1)
    3b34:	8e030030 	lw	v1,48(s0)
    3b38:	02202021 	move	a0,s1
    3b3c:	00431023 	subu	v0,v0,v1
    3b40:	2442fffb 	addiu	v0,v0,-5
    3b44:	ae22001c 	sw	v0,28(s1)
    3b48:	3c020000 	lui	v0,0x0
			3b48: R_MIPS_HI16	.text
    3b4c:	2442256c 	addiu	v0,v0,9580
			3b4c: R_MIPS_LO16	.text
    3b50:	0040f809 	jalr	v0
    3b54:	02002821 	move	a1,s0
    3b58:	00409021 	move	s2,v0
    3b5c:	24020003 	li	v0,3
    3b60:	1242ff72 	beq	s2,v0,392c <HcdSpiInterrupt+0x25c>
    3b64:	00000000 	nop
    3b68:	ae120040 	sw	s2,64(s0)
    3b6c:	8fa70010 	lw	a3,16(sp)
    3b70:	08000e48 	j	3920 <HcdSpiInterrupt+0x250>
			3b70: R_MIPS_26	.text
    3b74:	24130001 	li	s3,1
    3b78:	3c020000 	lui	v0,0x0
			3b78: R_MIPS_HI16	printk
    3b7c:	24420000 	addiu	v0,v0,0
			3b7c: R_MIPS_LO16	printk
    3b80:	0040f809 	jalr	v0
    3b84:	24840000 	addiu	a0,a0,0
			3b84: R_MIPS_LO16	$LC16
    3b88:	08000dfb 	j	37ec <HcdSpiInterrupt+0x11c>
			3b88: R_MIPS_26	.text
    3b8c:	8fa70010 	lw	a3,16(sp)
    3b90:	3c020000 	lui	v0,0x0
			3b90: R_MIPS_HI16	printk
    3b94:	24420000 	addiu	v0,v0,0
			3b94: R_MIPS_LO16	printk
    3b98:	0040f809 	jalr	v0
    3b9c:	24840000 	addiu	a0,a0,0
			3b9c: R_MIPS_LO16	$LC15
    3ba0:	08000df4 	j	37d0 <HcdSpiInterrupt+0x100>
			3ba0: R_MIPS_26	.text
    3ba4:	8fa70010 	lw	a3,16(sp)
    3ba8:	3c020000 	lui	v0,0x0
			3ba8: R_MIPS_HI16	HW_InOut_Token
    3bac:	02202021 	move	a0,s1
    3bb0:	3405c800 	li	a1,0xc800
    3bb4:	24060001 	li	a2,1
    3bb8:	24420000 	addiu	v0,v0,0
			3bb8: R_MIPS_LO16	HW_InOut_Token
    3bbc:	0040f809 	jalr	v0
    3bc0:	00003821 	move	a3,zero
    3bc4:	0440ffbc 	bltz	v0,3ab8 <HcdSpiInterrupt+0x3e8>
    3bc8:	00409021 	move	s2,v0
    3bcc:	3c020000 	lui	v0,0x0
			3bcc: R_MIPS_HI16	.text
    3bd0:	02202021 	move	a0,s1
    3bd4:	24422264 	addiu	v0,v0,8804
			3bd4: R_MIPS_LO16	.text
    3bd8:	0040f809 	jalr	v0
    3bdc:	02002821 	move	a1,s0
    3be0:	08000eae 	j	3ab8 <HcdSpiInterrupt+0x3e8>
			3be0: R_MIPS_26	.text
    3be4:	00409021 	move	s2,v0
    3be8:	8e22001c 	lw	v0,28(s1)
    3bec:	8e030030 	lw	v1,48(s0)
    3bf0:	0043102b 	sltu	v0,v0,v1
    3bf4:	1040ffc8 	beqz	v0,3b18 <HcdSpiInterrupt+0x448>
    3bf8:	3c020000 	lui	v0,0x0
			3bf8: R_MIPS_HI16	.text
    3bfc:	24051300 	li	a1,4864
    3c00:	27a60014 	addiu	a2,sp,20
    3c04:	02202021 	move	a0,s1
    3c08:	26821d24 	addiu	v0,s4,7460
			3c08: R_MIPS_LO16	.text
    3c0c:	0040f809 	jalr	v0
    3c10:	afa00014 	sw	zero,20(sp)
    3c14:	3c020000 	lui	v0,0x0
			3c14: R_MIPS_HI16	.text
    3c18:	02202021 	move	a0,s1
    3c1c:	24421f3c 	addiu	v0,v0,7996
			3c1c: R_MIPS_LO16	.text
    3c20:	0040f809 	jalr	v0
    3c24:	24050400 	li	a1,1024
    3c28:	08000e48 	j	3920 <HcdSpiInterrupt+0x250>
			3c28: R_MIPS_26	.text
    3c2c:	8fa70010 	lw	a3,16(sp)
Disassembly of section .exit.text:

00000000 <cleanup_module>:
cleanup_module():
   0:	27bdffe8 	addiu	sp,sp,-24  ! allocate 24 bytes
   4:	3c040000 	lui	a0,0x0     ! a0=0
			4: R_MIPS_HI16	$LC8
   8:	3c020000 	lui	v0,0x0     ! v0=0
			8: R_MIPS_HI16	printk
   c:	afbf0010 	sw	ra,16(sp)  ! save ra
  10:	24420000 	addiu	v0,v0,0    ! v0=printk
			10: R_MIPS_LO16	printk
	// printk("Unload athspi_jz4755_hcd\n");
  14:	0040f809 	jalr	v0
  18:	24840000 	addiu	a0,a0,0    ! a0=LC8
			18: R_MIPS_LO16	$LC8
  1c:	3c190000 	lui	t9,0x0     ! t9=0
			1c: R_MIPS_HI16	remove_driver
  20:	8fbf0010 	lw	ra,16(sp)  ! restore ra
  24:	27390000 	addiu	t9,t9,0    ! t9=remove_driver
			24: R_MIPS_LO16	remove_driver
	// remove_driver();
  28:	03200008 	jr	t9
  2c:	27bd0018 	addiu	sp,sp,24 ! dealloc stack
Disassembly of section .init.text:

00000000 <init_module>:
init_module():
   0:	27bdffe0 	addiu	sp,sp,-32  ! allocate 32 bytes
   4:	afbf001c 	sw	ra,28(sp)  ! save ra
   8:	afb20018 	sw	s2,24(sp)  ! save s2
   c:	afb10014 	sw	s1,20(sp)  ! save s1
  10:	afb00010 	sw	s0,16(sp)  ! save s0
  14:	3c020000 	lui	v0,0x0
			14: R_MIPS_HI16	.data
  18:	8c430004 	lw	v1,4(v0)   ! v1=dma_mode
			18: R_MIPS_LO16	.data
  1c:	10600046 	beqz	v1,138 <init_module+0x138> ! to 138 if not dma_mode
> 20:	3c020000 	lui	v0,0x0     ! v0=0
			20: R_MIPS_HI16	$LC10
  24:	3c020000 	lui	v0,0x0     ! v0=0
			24: R_MIPS_HI16	$LC9
  28:	24460000 	addiu	a2,v0,0    ! a2=LC9
			28: R_MIPS_LO16	$LC9
  2c:	3c040000 	lui	a0,0x0     ! a0=0
			2c: R_MIPS_HI16	$LC11
  30:	3c050000 	lui	a1,0x0     ! a1=0
			30: R_MIPS_HI16	$LC12
  34:	3c020000 	lui	v0,0x0     ! v0=0
			34: R_MIPS_HI16	printk
  38:	24840000 	addiu	a0,a0,0   ! a0=LC11
			38: R_MIPS_LO16	$LC11
  3c:	24420000 	addiu	v0,v0,0   ! v0=printk
			3c: R_MIPS_LO16	printk
	// printk("athspi_jz4755_hcd version: %s, %s\n", "2.2.0.78-110104", "DMA Mode");
  40:	0040f809 	jalr	v0
  44:	24a50000 	addiu	a1,a1,0   ! a1=LC12
			44: R_MIPS_LO16	$LC12
  48:	3c030000 	lui	v1,0x0    ! v1=0
			48: R_MIPS_HI16	.data
  4c:	3c020000 	lui	v0,0x0    ! v0=0
			4c: R_MIPS_HI16	.data
  50:	2471000c 	addiu	s1,v1,12 !s1=ar6k_spi
			50: R_MIPS_LO16	.data
  54:	24420054 	addiu	v0,v0,84 !v0=&ar6k_spi->pHcd.SDList
			54: R_MIPS_LO16	.data
	// SDLIST_INIT(&ar6k_spi->SDList)
  58:	ae22004c 	sw	v0,76(s1) ar6k_spi->
  5c:	ae220048 	sw	v0,72(s1)
  60:	3c020000 	lui	v0,0x0   ! v0=0
			60: R_MIPS_HI16	init_hardware
  64:	24420000 	addiu	v0,v0,0  ! v0=init_hardware
			64: R_MIPS_LO16	init_hardware
	// init_hardware(ar6k_spi->pDev)
  68:	0040f809 	jalr	v0
  6c:	8e240040 	lw	a0,64(s1)
> 70:	04400022 	bltz	v0,fc <init_module+0xfc> ! to fc if v0 < 0
  74:	00408021 	move	s0,v0   ! s0=v0
  78:	3c020000 	lui	v0,0x0  ! v0=0
			78: R_MIPS_HI16	HcdInitialize
  7c:	24420000 	addiu	v0,v0,0 ! v0=HcdInitialize
			7c: R_MIPS_LO16	HcdInitialize
	// HcdInitialize(&ar6k_spi);
  80:	0040f809 	jalr	v0
  84:	02202021 	move	a0,s1
> 88:	0440001c 	bltz	v0,fc <init_module+0xfc> ! to fc if v0 < 0
  8c:	00408021 	move	s0,v0   ! s0=v0
  90:	3c020000 	lui	v0,0x0  ! v0=0
			90: R_MIPS_HI16	.bss
  94:	24510004 	addiu	s1,v0,4 ! s1=&dev_spi
			94: R_MIPS_LO16	.bss
  98:	92230068 	lbu	v1,104(s1) ! v1=dev_spi->ub104
  9c:	3c120000 	lui	s2,0x0  ! s2=0
			9c: R_MIPS_HI16	.data
  a0:	34630040 	ori	v1,v1,0x40 ! v1=v1|0x40
  a4:	3c020000 	lui	v0,0x0  ! v0=0
			a4: R_MIPS_HI16	SDIO_RegisterHostController
  a8:	26440050 	addiu	a0,s2,80 ! a0=&ar6k_spi->pHcd
			a8: R_MIPS_LO16	.data
  ac:	24420000 	addiu	v0,v0,0  ! v0=SDIO_RegisterHostController
			ac: R_MIPS_LO16	SDIO_RegisterHostController
	// SDIO_RegisterHostController(&ar6k_spi->pHcd)
  b0:	0040f809 	jalr	v0
  b4:	a2230068 	sb	v1,104(s1) ! dev_spi->ub104=v1
> b8:	04400010 	bltz	v0,fc <init_module+0xfc> ! to fc if v0 < 0
  bc:	00408021 	move	s0,v0  ! s0=v0
  c0:	92220068 	lbu	v0,104(s1) ! v0=dev_spi->ub104
  c4:	26440050 	addiu	a0,s2,80 ! a0=&ar6k_spi->pHcd
			c4: R_MIPS_LO16	.data
  c8:	34420020 	ori	v0,v0,0x20 ! v0=v0|0x20
  cc:	a2220068 	sb	v0,104(s1) ! dev_spi->ub104=v0
  d0:	3c020000 	lui	v0,0x0     ! v0=0
			d0: R_MIPS_HI16	SDIO_HandleHcdEvent
  d4:	24420000 	addiu	v0,v0,0    ! v0=SDIO_HandleHcdEvent
			d4: R_MIPS_LO16	SDIO_HandleHcdEvent
	// SDIO_HandleHcdEvent(&ar6k_spi->pHcd, 1)
  d8:	0040f809 	jalr	v0
  dc:	24050001 	li	a1,1  ! a1=1
  e0:	00001021 	move	v0,zero ! v0=0
  e4:	8fbf001c 	lw	ra,28(sp) ! restore ra
  e8:	8fb20018 	lw	s2,24(sp) ! restore s2
  ec:	8fb10014 	lw	s1,20(sp) ! restore s1
  f0:	8fb00010 	lw	s0,16(sp) ! restore s0
  f4:	03e00008 	jr	ra        ! return SDIO_STATUS_SUCCESS
  f8:	27bd0020 	addiu	sp,sp,32  ! dealloc stack
================================================================
70, 88, b8 --->
  fc:	3c020000 	lui	v0,0x0  ! v0=0
			fc: R_MIPS_HI16	remove_driver
 100:	24420000 	addiu	v0,v0,0 ! v0=remove_driver
			100: R_MIPS_LO16	remove_driver
	// remove_driver
 104:	0040f809 	jalr	v0
 108:	00000000 	nop
 10c:	26030007 	addiu	v1,s0,7	! v1=rc+7
 110:	2c62000b 	sltiu	v0,v1,11 ! v0=1 if v1<11
 114:	1440000a 	bnez	v0,140 <init_module+0x140> ! to 140 if v0
 118:	00031080 	sll	v0,v1,0x2 ! v0=v1<<2
 11c:	8fbf001c 	lw	ra,28(sp) ! restore ra
 120:	8fb20018 	lw	s2,24(sp) ! restore s2
 124:	8fb10014 	lw	s1,20(sp) ! restore s1
 128:	8fb00010 	lw	s0,16(sp) ! restore s0
 12c:	2402fff2 	li	v0,-14    ! v0=EFAULT
 130:	03e00008 	jr	ra        ! return
 134:	27bd0020 	addiu	sp,sp,32  ! dealloc stack
================================================================
20 --->
 138:	0800000b 	j	2c <init_module+0x2c>
			138: R_MIPS_26	.init.text
 13c:	24460000 	addiu	a2,v0,0             ! a2=LC10 "PIO Mode"
			13c: R_MIPS_LO16	$LC10
=================================================================
114 --->
 140:	3c030000 	lui	v1,0x0 ! v1=0
			140: R_MIPS_HI16	.rodata
 144:	24630000 	addiu	v1,v1,0 ! v1=&.rodata
			144: R_MIPS_LO16	.rodata
 148:	00431021 	addu	v0,v0,v1 ! v0=rc+&.rodata
 14c:	8c440000 	lw	a0,0(v0) ! a0=*v0
	// call
 150:	00800008 	jr	a0
 154:	00000000 	nop
========================================================
 158:	08000039 	j	e4 <init_module+0xe4>
			158: R_MIPS_26	.init.text
>15c:	2402fff4 	li	v0,-12	! v0=-ENOMEM
=====================================
 160:	08000039 	j	e4 <init_module+0xe4>
			160: R_MIPS_26	.init.text
 164:	2402fff5 	li	v0,-11  ! v0=-EAGAIN
=====================================
 168:	08000039 	j	e4 <init_module+0xe4>
			168: R_MIPS_26	.init.text
 16c:	00001021 	move	v0,zero ! v0=0
=====================================
 170:	08000039 	j	e4 <init_module+0xe4>
			170: R_MIPS_26	.init.text
 174:	2402ffea 	li	v0,-22  ! v0=-EINVAL
=====================================
 178:	08000039 	j	e4 <init_module+0xe4>
			178: R_MIPS_26	.init.text
 17c:	2402fffa 	li	v0,-6   ! V0=-ENXIO
=====================================
 180:	08000039 	j	e4 <init_module+0xe4>
			180: R_MIPS_26	.init.text
 184:	2402fffb 	li	v0,-5   ! v0=-EIO
=====================================
 188:	08000039 	j	e4 <init_module+0xe4>
			188: R_MIPS_26	.init.text
 18c:	2402fffc 	li	v0,-4   ! v0=-EINTR
=====================================
